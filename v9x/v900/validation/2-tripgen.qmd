---
title: Trip Generation
echo: false
warning: false
message: false
---

## Validation Results
The validation results for the Trip Generation portion of the model are shown in this section. 

<mark>???All the 2012 Household Survey results are scaled to the 2010 Census.-- is the scaled to the 2020 census now???</mark>

::: {.content-visible when-format="html"}
```{python}
import pandas as pd
import numpy as np
# calculate the total number of houses in the household travel survey
hh_house_csv = pd.read_csv('data/1-hhdisag-autoown/2012_HHSurvey-HHData_2022-09-29.csv')
hh_house = hh_house_csv[['password','weight', 'h_CO_NAME_v30', 'h_SUBAREA_v30']]
hh_house = hh_house[hh_house['h_SUBAREA_v30'] == 1]
hh_houses_sum = hh_house.groupby(['h_CO_NAME_v30'])['weight'].agg('sum').reset_index()
hh_survey_tot_houses = sum(hh_houses_sum['weight'])

# calculate thte total number of people in the household travel survey
hh_peeps = hh_house_csv[['password','weight','h_CO_NAME_v30','h_SUBAREA_v30',' Pop_2010 ']]
hh_peeps = hh_peeps.rename(columns={' Pop_2010 ': 'Pop_2010'})
hh_peeps = hh_peeps[hh_peeps['h_SUBAREA_v30'] == 1]
hh_survey_tot_pop = sum(hh_peeps['Pop_2010'])

# calculate the number of II productions in the Household Travel Survey
hh_trips_csv = pd.read_csv('E:/GitHub/TDM-Documentation/v9x/v900/validation/data/1-hhdisag-autoown/2012_HHSurvey-TripData_2022-11-21.csv')
hh_trips_purps = hh_trips_csv[['password','weight','h_CO_NAME_v30','h_SUBAREA_v30','p_SUBAREA_v30','a_SUBAREA_v30','PURP7_t']]
hh_ii = hh_trips_purps[hh_trips_purps['h_SUBAREA_v30'] == 1]
hh_ii = hh_ii[hh_ii['p_SUBAREA_v30'] == 1]
hh_ii = hh_ii[hh_ii['a_SUBAREA_v30'] == 1]
hh_ii = hh_ii.groupby(['PURP7_t'])['weight'].agg('sum').reset_index()

# calculate visitor NHB II Trip Ends
hh_ii_v = hh_trips_purps[hh_trips_purps['h_SUBAREA_v30'].isin([0,2,3,4])]
hh_ii_v = hh_ii_v[hh_ii_v['p_SUBAREA_v30'] == 1]
hh_ii_v = hh_ii_v[hh_ii_v['a_SUBAREA_v30'] == 1]
hh_ii_v = hh_ii_v.groupby(['PURP7_t'])['weight'].agg('sum').reset_index()
hh_ii_v = hh_ii_v.rename(columns = {'weight':'weight_2'})
hh_ii = pd.merge(hh_ii, hh_ii_v, how = 'left', on ='PURP7_t')
hh_ii = hh_ii.fillna(0)
hh_ii['weight'] = hh_ii['weight'] + hh_ii['weight_2']
hh_ii = hh_ii.drop(columns={'weight_2'})

# calculate the number of IX productions in the Household Travel Survey
hh_ix = hh_trips_purps[hh_trips_purps['h_SUBAREA_v30'] == 1]
hh_ix = hh_ix[hh_ix['p_SUBAREA_v30'] == 1]
hh_ix = hh_ix[hh_ix['a_SUBAREA_v30'].isin([-1,0,2,3,4])]
hh_ix = hh_ix.groupby(['PURP7_t'])['weight'].agg('sum').reset_index()
hh_ix_tot = sum(hh_ix['weight'])
hh_ix = pd.DataFrame([['IX',hh_ix_tot]],columns=['PURP7_t','weight'])

# calculate the total number of production in Household Travel Survey
hh_ii_ix = pd.concat([hh_ii,hh_ix])
hh_tot = sum(hh_ii_ix['weight'])
hh_tot = pd.DataFrame([['Total',hh_tot]], columns = ['PURP7_t','weight'])
hh_ii_ix = pd.concat([hh_ii_ix,hh_tot]).reset_index().drop(columns={'index'})
hh_ii_ix['DataSource'] = 'Observed'
hh_ii_ix = hh_ii_ix.rename(columns={'PURP7_t':'Purpose', 'weight':'Trips'})
hh_ii_ix['houses'] = hh_survey_tot_houses
```

```{python}
from dbfread import DBF
# calculate the total number of trip end productions for the modeled data
mod_pa = pd.DataFrame(DBF(r'data/2-tripgen/pa.dbf',load=True))
mod_pa = mod_pa.filter(regex='_P')
mod_pa['HBSCH_P'] = mod_pa['HBSCH_PR_P'] + mod_pa['HBSCH_SC_P']
mod_pa = mod_pa[['HBW_P','HBSHP_P','HBOTH_P','HBSCH_P','NHBW_P','NHBNW_P','IX_P']]
mod_pa = mod_pa.rename(columns=lambda x: x.rstrip('_P'))
mod_pa['HBC'] = 0
mod_pa['Total'] = mod_pa['HBW'] + mod_pa['HBSH'] + mod_pa['HBOTH'] + mod_pa['HBSCH'] + mod_pa['NHBW'] + mod_pa['NHBNW'] + mod_pa['IX'] + mod_pa['HBC']
mod_pa = mod_pa.rename(columns={'HBSH':'HBShp', 'HBOTH':'HBOth','HBSCH':'HBSch'})

# summarize the data
sumdf = mod_pa.sum()
mod_sum = pd.DataFrame(sumdf,columns=['Trips']).reset_index().rename(columns = {'index':'Purp'})
mod_sum = mod_sum.rename(columns={'Purp':'Purpose'})
mod_sum['DataSource'] = 'Modeled'

# read in SE data for total households
se_data = pd.DataFrame(DBF(r'data/2-tripgen/SE_File_v9_SE19_Net19.dbf',load=True))
se_hh_sum = sum(se_data['TOTHH'])
se_pop_sum = sum(se_data['HHPOP'])

mod_sum['houses'] = se_hh_sum
```

```{python}
prod_hh_ratio = pd.concat([hh_ii_ix,mod_sum])
prod_hh_ratio['ratio'] = prod_hh_ratio['Trips'] / prod_hh_ratio['houses']
prod_hh_ratio['DataSource'] = np.where(prod_hh_ratio['DataSource'] == 'Modeled', '2012 HH Survey', 'BY 2019 Model')
```

```{python}
#| include: False

import plotly.express as px
colors2 = {'2012 HH Survey':'steelblue','BY 2019 Model':'forestgreen', '2009 NHTS': 'gray'}
fig = px.bar(prod_hh_ratio, 
    x="Purpose", 
    y="ratio",
    text_auto='.2s',    
    color='DataSource', 
    barmode='group', 
    height=500,
    color_discrete_map=colors2, 
    text=[f'{round(val2*100,1)}' for val2 in prod_hh_ratio['ratio']], template='simple_white')
fig.update_yaxes(title='Production to Household Ratio')
fig.update_xaxes(title=None, tickangle=0, showticklabels=True, ticks='inside', ticklen=10)
fig
```


```{python}
#| label: fig-prod-hh
#| fig-cap: "Productions to Households Ratios -- Total Trip Ends (II + IX)."
#| cap-location: margin
fig
```


```{python}
import numpy as np
prod_hh_ratio2 = prod_hh_ratio[prod_hh_ratio['Purpose'] == 'Total']
prod_hh_ratio2['pop'] = np.where(prod_hh_ratio2['DataSource'] == 'Observed', hh_survey_tot_pop, se_pop_sum)
prod_hh_ratio2['ratio2'] = prod_hh_ratio2['Trips'] / prod_hh_ratio2['pop']
trip_valid = prod_hh_ratio2[['DataSource', 'ratio','ratio2']]
nhts = pd.DataFrame([['2009 NHTS',9.5,3.79]], columns = ['DataSource','ratio','ratio2'])
trip_valid = pd.concat([trip_valid,nhts])
trip_valid = trip_valid.rename(columns={'ratio':'Total Productions / Household', 'ratio2': 'Total Productions / Person'})
trip_valid['DataSource'] = np.where(trip_valid['DataSource'] == 'Modeled', '2012 HH Survey', trip_valid['DataSource'])
trip_valid['DataSource'] = np.where(trip_valid['DataSource'] == 'Observed', 'BY 2019 Model', trip_valid['DataSource'])
trip_valid = trip_valid.melt(id_vars=['DataSource'], value_vars = ['Total Productions / Household', 'Total Productions / Person'], var_name = 'RatioName', value_name = 'RatioValue')
```

```{python}
#| include: False
import plotly.express as px
fig2 = px.bar(trip_valid, 
    x="RatioName", 
    y="RatioValue",
    text_auto='.2s',    
    color='DataSource', 
    barmode='group', 
    height=500,
    color_discrete_map=colors2, 
    text=[f'{round(val2*100,1)}' for val2 in trip_valid['RatioValue']], template='simple_white')
fig2.update_yaxes(title='Trip Balance Ratios')
fig2.update_xaxes(title=None, tickangle=0, showticklabels=True, ticks='inside', ticklen=10)
fig2
```


```{python}
#| label: fig-ptrip-valid
#| fig-cap: "Total Trip Validation."
#| cap-location: margin
fig2
```


```{python}
# calculate the trip balance based on the productions to household ratio data
trip_balance = prod_hh_ratio[['Purpose','Trips','DataSource']]
trip_balance = trip_balance.pivot(index='DataSource', columns='Purpose', values='Trips').reset_index()
trip_balance['NHB'] = trip_balance['NHBW'] + trip_balance['NHBNW']
trip_balance['HBO'] = trip_balance['HBOth'] + trip_balance['HBShp']
trip_balance['NHB/HBW'] = trip_balance['NHB'] / trip_balance['HBW']
trip_balance['HBO/HBW'] = trip_balance['HBO'] / trip_balance['HBW'] 
trip_balance['HBO/NHB'] = trip_balance['HBO'] / trip_balance['NHB']
trip_balance = trip_balance[['DataSource','NHB/HBW', 'HBO/HBW', 'HBO/NHB']]
trip_balance = pd.melt(trip_balance, id_vars=['DataSource'], value_vars=['NHB/HBW','HBO/HBW','HBO/NHB'], var_name='Purpose', value_name='Ratio')
```

```{python}
#| include: False
import plotly.express as px
fig3 = px.bar(trip_balance, 
    x="Purpose", 
    y="Ratio",
    text_auto='.2s',    
    color='DataSource', 
    barmode='group', 
    height=500,
    color_discrete_map=colors2, 
    text=[f'{round(val2*100,1)}' for val2 in trip_balance['Ratio']], template='simple_white')
fig3.update_yaxes(title='Trip Balance Ratios')
fig3.update_xaxes(title=None, tickangle=0, showticklabels=True, ticks='inside', ticklen=10)
fig3
```

```{python}
#| label: fig-prod-prod
#| fig-cap: "Trip Balance Ratios."
#| cap-location: margin
fig3
```
:::

::: {.content-hidden when-format="html"}
![Productions to Households Ratios -- Total Trip Ends (II + IX).](_pictures/4-plot1.png){#fig-pdf-prod-hh}

![Total Trip Validation.](_pictures/4-plot2.png){#fig-pdf-ptrip-valid}

![Trip Balance Ratios.](_pictures/4-plot3.png){#fig-pdf-prod-prod}
:::
