---
title:  "Version 9.0.0 - What's New?"
date-modified: last-modified
author: "WFRC / MAG"
---

```{python}
#|echo: false

# model folder
tdmOld = r"A:\1 - TDM\3 - Model Dev\1 - WF\1 - Official Release\v8.3.2\WF TDM v8.3.2 - 2022-02-04a"
tdmNew = r"A:\1 - TDM\3 - Model Dev\1 - WF\2 - Sandbox\v9.0Beta\_archive\WF TDM v9.0 - 2022-10-05"
```

```{python}
#|echo: false
# PREPROCESS GEOSPATIAL DATA
import os
import pandas as pd
import geopandas as gpd
import topojson as tp

fnTazOldIn    = tdmOld + r"\1_Inputs\1_TAZ\TAZ.shp"
fnTazNewIn    = tdmNew + r"\1_Inputs\1_TAZ\TAZ.shp"
fnK12EnrollIn = tdmNew + r"\1_Inputs\2_SEData\_ source - HBSch Enroll & Med Inc\K-12 Enrollment\k12_schools_enrollment\k12_schools_enrollment.shp"
fnCity        = tdmNew + r"\1_Inputs\1_TAZ\Districts\City_Name.dbf"
fnSDst        = tdmNew + r"\1_Inputs\1_TAZ\Districts\Dist_Small.dbf"
fnMDst        = tdmNew + r"\1_Inputs\1_TAZ\Districts\Dist_Medium.dbf"
fnLDst        = tdmNew + r"\1_Inputs\1_TAZ\Districts\Dist_Large.dbf"

fnDistrictsOld    = tdmNew + r"\1_Inputs\1_TAZ\TAZ.shp"

def writeGeoJson(in_path,out_path,fields):
  if not os.path.isfile(out_path):
    gdf = gpd.read_file(in_path)
    gdf = gdf[fields]
    gdf = gdf.to_crs({'init': 'epsg:4326'}) 
    topo = tp.Topology(gdf, prequantize=False)
    gdf_simplified = topo.toposimplify(.0001).to_gdf()
    gdf_simplified.to_file(out_path, driver='GeoJSON')
    return;

writeGeoJson(fnTazOldIn   , "data/tazOld.geojson"   , ['TAZID','CO_TAZID','geometry'])
writeGeoJson(fnTazNewIn   , "data/tazNew.geojson"   , ['TAZID','CO_TAZID','REMM','geometry'])
writeGeoJson(fnK12EnrollIn, "data/k12enroll.geojson", ['SchoolName','Enrol_Elem','Enrol_Midl','Enrol_High','PublicElem','PublicMidl','PublicHigh','PriChaElem','PriChaMidl','PriChaHigh','geometry'])
writeGeoJson(fnCity       , "data/city.geojson"     , ['CITY_NAME','geometry'])
writeGeoJson(fnSDst       , "data/sdst.geojson"     , ['DISTSML','DSML_NAME','geometry'])
writeGeoJson(fnMDst       , "data/mdst.geojson"     , ['DISTMED','DMED_NAME','geometry'])
writeGeoJson(fnLDst       , "data/ldst.geojson"     , ['DISTLRG','DLRG_NAME','geometry'])

# add median income to taz file

if not os.path.isfile('data/tazmedincome.geojson'):
  gdfTazNew = gpd.read_file("data/tazNew.geojson")
  dfMedIncome = pd.read_csv(tdmNew + r"\1_Inputs\2_SEData\_ source - HBSch Enroll & Med Inc\Median Income & VOT\for SE file -- TAZ Median Income - 2022-03-17.csv")
  gdfTazMedIncome = pd.DataFrame.merge(gdfTazNew,dfMedIncome,on='CO_TAZID',how='left')
  gdfTazMedIncome.to_file('data/tazmedincome.geojson', driver='GeoJSON')

```

```{ojs}
//|echo: false
// setup mapping and layers
L = require('leaflet@1.2.0')
html`<link href='${resolve('leaflet@1.2.0/dist/leaflet.css')}' rel='stylesheet' />`

geojsonTazOld    = FileAttachment("data/tazOld.geojson"   ).json()
geojsonTazNew    = FileAttachment("data/tazNew.geojson"   ).json()
geojsonK12Enroll = FileAttachment("data/k12enroll.geojson").json()
geojsonCity      = FileAttachment("data/city.geojson"     ).json()
geojsonSDst      = FileAttachment("data/sdst.geojson"     ).json()
geojsonMDst      = FileAttachment("data/mdst.geojson"     ).json()
geojsonLDst      = FileAttachment("data/ldst.geojson"     ).json()
```

# Input Data
The changes in each *Input Data* subfolder are described in their respective sections.

## Global Data
This section includes a discussion of any changes made within the *Global Data* subfolder in the model inputs.

### Trip Tables

The college base distribution source file *\_Source - CollegeBaseDistribution - 2022-08-30.xlsx* and model lookup file *BaseDistribution.csv* were updated to the v9.0.0 Traffic Anlaysis Zone (TAZ) structure. The centroid of the v8.3.2 TAZ were spatially joined to the v9.0.0 TAZ to find their new TAZ designation.

### Household Disaggregation and Auto Ownership

Using parameters developed statewide based on 2020 census block data, 2020 ACS block group data, and 2019 population by age group data, the age percent lookup files *\_Source - TAZ_AgePct_Lookup - 2022-06-07.xlsb* and *Lookup - BYTAZAgePct - AllCo.csv* were updated to v9.0.0 TAZ & 2019 base year.

## Traffic Analysis Zones (TAZ)
The v9.0.0 TAZ zone set includes new geographies, new number numbering ranges, zone attributes, and districts, as well as a new subfolder called *\_Source*.

### Geographies
Changes in TAZ geographies include both expansion of the model area and spliting and/or changing zone boundariees. The expanded model area now includes TAZs in additional portions of Box Elder County, all of western Weber County, and the entirety of Davis, Salt Lake and Utah Counties. A comparison between v9.0.0 and v8.3.2 TAZs are shown in @fig-taz-compare-map.


```{ojs}
//|label: fig-taz-compare-map
//|fig-cap: TAZ Geography Comparison Map
//|echo: false

mapTaz = {

  let container = DOM.element('div', { style: `width:${width}px;height:${width/1.6}px` });
  yield container;
  
  let map = L.map(container).setView([40.7608, -111.8910], 8.25);

  let greyLayer = L.tileLayer('https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png', {
    attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
  }).addTo(map);

  let lcolors = ['#0000FF','#FFFF00']
  let llabels = ['v8.3.2' ,'v9.0.0' ];

  let lyrTAZOld = L.geoJson(geojsonTazOld, { weight: 3.00, color: lcolors[0]}).addTo(map);
  let lyrTAZNew = L.geoJson(geojsonTazNew, { weight: 0.75, color: lcolors[1]}).addTo(map);

  var legend = L.control({position: 'bottomleft'});
    legend.onAdd = function (map) {
      var div = L.DomUtil.create('div', 'legend');
      div.innerHTML = '';
      for (var i = 0; i < llabels.length; i++) {
        div.innerHTML += '<i style="background:' + lcolors[i] + '">&nbsp;</i> ' + llabels[i] + '<br/>';
      }

      // Add CSS style for the background color
      div.style.backgroundColor = 'lightgray';
      div.style.padding = '10px';
      
      return div;
    };
    legend.addTo(map);
}
```

### Number Ranges
Internal and external ranges by for each county are shown in @tbl-new-taz-number-ranges, and counts are show in @tbl-new-taz-count.


```{python}
#| label: tbl-new-taz-number-ranges
#| tbl-cap: TAZID Number Ranges
#| echo: False
from IPython.display import Markdown
from tabulate import tabulate
table = [  ['Box Elder County',          '1-153',       '3601-3606',          '1-135',         '136-140'],
           ['Weber County'    ,        '154-581',       '3607-3609',        '141-420',         '421-423'],
           ['Davis County'    ,        '582-905',             'N/A',        '424-654',             'N/A'],
           ['Salt Lake County',       '906-2216',       '3610-3615',       '655-1781',       '1782-1788'],
           ['Utah County'     ,      '2217-3546',       '3616-3629',      '1789-2873',       '2874-2881']
        ]
Markdown(tabulate(
  table, 
  headers= ['County'          ,'v9.0.0 Internal', 'v9.0.0 External','v8.3.2 Internal','v8.3.2. External'],
  colalign=('left'            ,'right'          ,'right'           ,'right'          ,'right'           )
))
```

```{python}
#| label: tbl-new-taz-count
#| tbl-cap: Master Network Node Numbering Schema
#| echo: False
from IPython.display import Markdown
from tabulate import tabulate
table = [  ['Internal Used Zones'  , '3,546', '2,858',        '688'],
           ['External Count'       ,    '29',    '23',          '6'],
           ['All New Used Zones'   , '3,575', '2,881',        '694'],
           ['Internal Unused Zones',    '54',     '0',         '54'],
           ['Max Used Zone'        , '3,629', '2,881',        '748']]
Markdown(tabulate(
  table, 
  headers= ['Category'             ,'v9.0.0','v8.3.2', 'Difference'],
  colalign=('left'                 ,'right' ,'right' , 'right'     )
))
```

### Attributes
This section describes the changes made to the attributes of the TAZ shapefile.

#### REMM Space
To indicate which TAZs are included in the Real Estate Market Model (REMM) space, the *REMM* field was added with a value of *1* indicating that it is part of REMM and *0* indicating it is not part of REMM, as shown in @fig-taz-remm-space.

```{ojs}
//|label: fig-taz-remm-space
//|fig-cap: TAZ REMM Space
//|echo: false

mapTazRemmSpace = {

  let container = DOM.element('div', { style: `width:${width}px;height:${width/1.6}px` });
  yield container;
  
  let map = L.map(container).setView([40.7608, -111.8910], 8.25);

  let greyLayer = L.tileLayer('https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png', {
    attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
  }).addTo(map);

  let remmColors = ['#00887F'   ,'#BD0026'       ]
  let remmLabels = ['REMM Space','Non-REMM Space'];
  
  let lyrTAZNew = L.geoJson(geojsonTazNew, {
                            style: function(feature) {
                              var d = feature.properties.REMM;
                              return d==1 ? {color:remmColors[0], weight:1, opacity:0.95} :
                                     d==0 ? {color:remmColors[1], weight:1, opacity:0.95} : 
                                            {color:    '#000000', weight:1, opacity:0.95} ;
                            }
  }).addTo(map);
  
  var legend = L.control({position: 'bottomleft'});
  legend.onAdd = function (map) {
    var div = L.DomUtil.create('div', 'legend');
    div.innerHTML = '';
    for (var i = 0; i < remmLabels.length; i++) {
      div.innerHTML += '<i style="background:' + remmColors[i] + '">&nbsp;</i> ' + remmLabels[i] + '<br/>';
    }

    // Add CSS style for the background color
    div.style.backgroundColor = 'lightgray';
    div.style.padding = '10px';
    
    return div;
  };
  legend.addTo(map);
}
```

#### Parking Costs
The values in the permanent parking cost field *PRKCSTPERM* and temporary parking cost field *PRKCSTTEMP* were updated based on 2022 parking rates obtained from Salt Lake City, web searches, and a few field visits.

A new metholody for calculating parking cost was envisioned but not implemented for v9.0.0. Accordingly, updates to parking data were done in a way to facilitate the change to the new methodology in the future. These updates include a new polygon source file for downtown and university areas. However, since the envisioned methodology removes the use of parking cost fields for Lagoon and Salt Lake City International Airport, they were not included in this new shapefile.

##### Downtown and University Areas

Parking costs were developed for downtown areas for Ogden, Salt Lake City, and Provo, as well as major university areas along the Wasatch Front. A new source polygon shapefile was developed to hold rates for Home-Based Work (HBW), Home-Based College (HBC), Home-Based Other (HBO), and Non-Home-Based (NHB) trip purposes. While rates are included for these four purposes, the v9.0.0 model only utilizes HBW for permanent parking and HBO for temporary parking. The future methodology will incorporate all four purposes.

<mark>???WHERE IS NEW SHAPEFILE... SHOW MAP OF NEW SHAPEFILE???</mark>

##### Lagoon and Salt Lake City International Aiport
The Airport & Lagoon parking costs were updated based on current parking rate information and the assumptions described in this section.

The cost of permanent parking for the Lagoon TAZ was set to *$0* based on the assumption that workers at Lagoon do not pay for parking. The temporary parking was set to *$6* as calculated by dividing the 2022 advertised parking rate of $18 per day by an assumed average occupancy of 3 people per vehicle. The cost of temporary parking in previous models was $5 in 2010 dollars. The resulting $1 increase in 2019 dollars (20%) over 9 years seems reasonable.

The cost of permanent parking at the Salt Lake City Internationl Airport was set to *$0* based on the assumption that workers at the airport do not pay for parking. The cost of temporary parking was set to $1.25 based on a weighted average of short-term premium and economy rates and drop offs and a assumed average vehicle occupancy rate.

The 2022 the cost for the short-term premium parking in the gararge is $5.00 per hour. Short-term economy rate is $2.00 per hour. And for drop-offs there is no charge for parking. The asssumed occupancy rate of 2 people per vehicle would result in per-person rates of $2.50, $1.00, and $0.00, respectively. The average of the three per-person rates is $1.75. Given the unknown distribution of travelers, but assuming more drop-offs than parking, a lower value than $1.75 should be expected. The 2019 cost was chosen to be $1.25.

Compared to the previous temporary parking values of $1 in 2010 dollars, the chosen cost represents a 25 cent increase in 2019 dollars (25%) over 9 years. This growth seems reasonable, especially given the recent improvements to the airport. Additional justification for the chosen increase is the [CPI adjustment](https://www.bls.gov/data/inflation_calculator.html), which for the 2010 value of $1.00 in results in a 2019 value of $1.18.


### Districts
Small District definitions and names were updated to include a larger number of TAZs than previous models' small districts. There are now 129 total small districts sequentially numbered from northwest to southeast in each medium district. The small district name field *DSML_NAME' includes a prefix of Medium District index followed by a colon and then the sequaential small district count (e.g. 15:1). Small districts were modified in conjunction with origin-destination data from StreetLight. Districts are shown in @fig-districts.

```{ojs}
//|label: fig-districts
//|fig-cap: Districts
//|echo: false

mapDistricts = {

  let container = DOM.element('div', { style: `width:${width}px;height:${width/1.6}px` });
  yield container;
  
  let map = L.map(container).setView([40.7608, -111.8910], 8.25);

  let greyLayer = L.tileLayer('https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png', {
    attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
  }).addTo(map);

  let lcolors     = ['#FF0000'       ,'#00FF00'        ,'#0000FF'        ];
  let llabels     = ['Small District','Medium District','Large District' ];

  let lyrLDst = L.geoJson(geojsonLDst, { weight: 12.00, color: lcolors[2], fillOpacity: 0}).addTo(map);
  let lyrMDst = L.geoJson(geojsonMDst, { weight:  6.00, color: lcolors[1], fillOpacity: 0}).addTo(map);
  let lyrSDst = L.geoJson(geojsonSDst, { weight:  2.00, color: lcolors[0], fillOpacity: 0}).addTo(map);

  lyrSDst.eachLayer(function(layer) {
    var name = layer.feature.properties.DSML_NAME; // Assuming the attribute field is named "DSML_NAME"
layer.bindTooltip(name); // Add tooltip
    // OR
    // layer.bindPopup(name); // Add popup
  });

  var legend = L.control({position: 'bottomleft'});
    legend.onAdd = function (map) {
      var div = L.DomUtil.create('div', 'legend');
      div.innerHTML = '';
      for (var i = 0; i < llabels.length; i++) {
        div.innerHTML += '<i style="background:' + lcolors[i] + '">&nbsp;</i> ' + llabels[i] + '<br/>';
      }

      // Add CSS style for the background color
      div.style.backgroundColor = 'lightgray';
      div.style.padding = '10px';
      
      return div;
    };
    legend.addTo(map);
}
```


Two additional polygon shapefiles were added to the Districts subfolder:

* Wasatch Front Subarea *WF_Subarea.shp*  <mark>???WHAT IS THIS???</mark>
* REMM Distric Areas *Dist_REMM_Area.shp* <mark>???WHAT IS THIS???</mark>

<mark>???SHOW MAPS???</mark>

### Source
The *\_Source* subfolder was added and includes the following shapefile data sets: Cities, Counties, Districts, adn EnvConstraints. Additionally, a *\_\_ViewTAZDistricts* folder with ArcGIS Pro project & mapping files was added.

<mark>???SHOW MAPS!???</mark>

## Socioecononomic Data
Changes to socioeconomic (SE) forecasts and control totals are described in this section.

###  Forecasts
The socioeconomic forecasts were updated for the WFRC areas. For Box Elder are, updates were taken from the UDOT SE Forecasts from June 8, 2022. The rest of the WFRC area was updated with draft *REMM - 2022-10-11* results using draft 2023 fiscally constrained plan.

The MAG area continues to use the 2019 fiscally constrained plan.

### Control Totals
Updates to the county control totals were made based on the projctions from the Gardner Policy Institute as found in the *ControlTotal_&shy;SE_AllCounties.csv* file. See @fig-county-control-totals-by-category for a comparison chart. The comparisons show that overall projections are lower . Also, the affect of home-based job employment from COVID-19 can be seen in the new v9.0.0 dataset.

<mark>???NEED TO EXPLAIN WHY BASE YEAR IS SO DIFFERENT FOR HBJ???</mark>

```{python}
#| echo: false
import pandas as pd

# County Control Totals
fnConTotOld = tdmOld + r"\1_Inputs\2_SEData\_ControlTotals\ControlTotal_SE_WF.csv"
fnConTotNew = tdmNew + r"\1_Inputs\2_SEData\_ControlTotals\ControlTotal_SE_AllCounties.csv"

dfConTotOld = pd.read_csv(fnConTotOld)
dfConTotOld = dfConTotOld.rename(columns={'CoName':'CO_NAME'})
dfConTotOld['CO_NAME'] = dfConTotOld['CO_NAME'].str.replace(' County','')
dfConTotOld['ModelVersion'] = 'v8.3.2'

dfConTotNew = pd.read_csv(fnConTotNew)
dfConTotNew = dfConTotNew[dfConTotNew['Subarea']=='1 - Wasatch Front'] # only WF area
dfConTotNew['ModelVersion'] = 'v9.0.0'

dfConTot = pd.concat([dfConTotOld,dfConTotNew])

#display(dfConTot)
dfConTot_melt = pd.melt(dfConTot, id_vars=('CO_NAME','YEAR','ModelVersion'), value_name='ControlTotal', var_name='Category', value_vars=('TOTPOP','GQ_Pop','HH_Pop','HH','HH_Size','POP_00_17','POP_18_64','POP_65P','ALLEMP','RETL','FOOD','MANU','WSLE','OFFI','GVED','HLTH','OTHR','AGRI','MING','CONS','HBJ','Job_HH','WrkPop_Job'))

dfConTot_melt.to_csv('data/controltotal.csv',index=False)
dfConTot_melt.groupby(['CO_NAME'],as_index=False).agg(COUNT=('YEAR','size')).to_csv('data/counties.csv',index=False)

```

```{ojs}
//|echo: false

// read in CSVs
faControlTotals = FileAttachment("data/controltotal.csv").csv({ typed: true });
faCounties      = FileAttachment("data/counties.csv"    ).csv({ typed: true });

viewof selectCounty   = Inputs.select(faCounties.map(function(d) {return d.CO_NAME}), {value: 'Salt Lake', label: 'County: '});
viewof selectCategory = Inputs.select(new Map([['Total Population'               , 'TOTPOP'        ],
                                               ['Group Quarter Population'       , 'GQ_Pop'        ],
                                               ['Household Population'           , 'HH_Pop'        ],
                                               ['Households'                     , 'HH'            ],
                                               ['Household Size'                 , 'HH_Size'       ],
                                               ['Population 0-17'                , 'POP_00_17'     ],
                                               ['Population 18-64'               , 'POP_18_64'     ],
                                               ['Population 65+'                 , 'POP_65P'       ],
                                               ['All Employment'                 , 'ALLEMP'        ],
                                               ['Retail Employment'              , 'RETL'          ],
                                               ['Food Employment'                , 'FOOD'          ],
                                               ['Manufacturing Employment'       , 'MANU'          ],
                                               ['Wholesale Employment'           , 'WSLE'          ],
                                               ['Office Employment'              , 'OFFI'          ],
                                               ['Government/Education Employment', 'GVED'          ],
                                               ['Health Employment'              , 'HLTH'          ],
                                               ['Other Employment'               , 'OTHR'          ],
                                               ['Agriculture Employment'         , 'AGRI'          ],
                                               ['Mining Employment'              , 'MING'          ],
                                               ['Construction Employment'        , 'CONS'          ],
                                               ['Home-Based Job Employment'      , 'HBJ'           ],
                                               ['Jobs per Household'             , 'Job_HH'        ],
                                               ['Working Population per Job'     , 'WrkPop_Job'    ]]), {value: 'HH_Pop', label: 'Category: '});
// FILTER DATA
filteredControlTotals = faControlTotals.filter(function(ct) {
  return selectCounty   == ct.CO_NAME &&
         selectCategory == ct.Category;
});

maxY = Math.max(...filteredControlTotals.map(item => item.ControlTotal));
```

```{ojs}
//|label: fig-county-control-totals-by-category
//|fig-cap: County Control Totals by Category
//|echo: false

Plot.plot({
  grid: true,
  aspectRatio: 0.5,
  x: {label: 'Year', tickFormat: d => d},
  y: {label: 'Control Total', domain: [0, maxY]},
  color: { type: "categorical", legend: true, legendStyle: { fontSize: 16 } },
  marginLeft: 60,
  style: {
    fontSize: 12
  },
  marks: [
    Plot.line(filteredControlTotals, {x: 'YEAR', y: 'ControlTotal', stroke: 'ModelVersion', strokeWidth: 3}),
  ]
})
```


<mark>???WORK AT HOME IS EXACLTY THE SAME BETWEEN VERSIONS???.</mark>

The source worksheet for these input files are found in the *-\_Source - ControlTotal_SE - 2022-08-31.xlsx* file. Other files in this directory were removed.


### Source Files
The *\_Income & K-12 Source* folder was renamed as *\_ source - HBSch Enroll & Med Inc* folder. The Kindergarten through 12th grade (K-12) enrollment data was updated using the 2019 statewide school enrollment database. Additionally, a point shapefile dataset was included, as shown in @fig-school-locations.


```{ojs}
//|label: fig-school-locations
//|fig-cap: K-12 School Locations
//|echo: false

mapK12Enroll = {

  let container = DOM.element('div', { style: `width:${width}px;height:${width/1.6}px` });
  yield container;
  
  let map = L.map(container).setView([40.7608, -111.8910], 8.25);

  let greyLayer = L.tileLayer('https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png', {
    attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
  }).addTo(map);

  var cHigh = "#FF0000"
  var cMidl = "#00FF00"
  var cElem = "#0000FF"

  var geojsonMarkerOptions_High = {
      radius: 4,
      fillColor: cHigh,
      color: cHigh,
      weight: 2,
      opacity: 1,
      fillOpacity: 1.0,
  };

  var geojsonMarkerOptions_Midl = {
      radius: 4,
      fillColor: cMidl,
      color: cMidl,
      weight: 2,
      opacity: 1,
      fillOpacity: 1.0,
  };
  var geojsonMarkerOptions_Elem = {
      radius: 4,
      fillColor: cElem,
      color: cElem,
      weight: 2,
      opacity: 1,
      fillOpacity: 1.0,
  };
            
  // function to use different icons based on number of stations
  function markerByEnrollment(feature) {
    if (feature.properties.Enrol_High >= 100) {
      return geojsonMarkerOptions_High
    } else if (feature.properties.Enrol_Midl >= 100){
      return geojsonMarkerOptions_Midl;
    } else{
      return geojsonMarkerOptions_Elem;
    }
  };

  function getColor(c) {
    if (c=='High School') {
      return cHigh;
    } else if (c=='Middle School') {
      return cMidl;
    } else if (c=='Elementary School') {
      return cElem;
    }
  };
          
  // create the GeoJSON layer and call the styling function with each marker
  var metroLayer = L.geoJSON(geojsonK12Enroll,  {
    pointToLayer: function (feature, latlng) {
      var mypopup = L.popup().setContent("<b>" + feature.properties.SchoolName + " Enrollment</b>" +
                    "<br><b>High School: </b>" + feature.properties.Enrol_High +
                    "<br><b>Middle School: </b>" + feature.properties.Enrol_Midl +
                    "<br><b>Elementary School: </b>" + feature.properties.Enrol_Elem);
      var mymarker = L.circleMarker(latlng, markerByEnrollment(feature));
      mymarker.bindPopup(mypopup);
      return mymarker;
    }
  }).addTo(map);

  var legend = L.control({position: 'bottomleft'});
    legend.onAdd = function (map) {
      var div = L.DomUtil.create('div', 'info legend');
      var labelsBill = []; // legend title
      var lcategories = ['High School','Middle School','Elementary School'];

      for (var i = 0; i < lcategories.length; i++) {
        div.innerHTML += 
          labelsBill.push(
            '<i class="bi bi-circle-fill" style="color:' + getColor(lcategories[i]) + '"></i> ' +
          (lcategories[i] ? lcategories[i] : '+'));
      }
      div.innerHTML = labelsBill.join('<br>');

      // Add CSS style for the background color
      div.style.backgroundColor = 'lightgray';
      div.style.padding = '10px';
      
      return div;
    };
    legend.addTo(map);

  //let lyrK12Enroll = L.geoJson(geojsonK12Enroll, { size: 5, color: '#FFFFFF'}).addTo(map);
  
}
```

In the *\_Source - Med Income & Value of Time - 2022-07-16.xlsb* file, the median income & value-of-time (VOT) inputs for the model were updated with 2019 data and used to update the TAZ Median Income in the TAZ file.

## Highway Network
The highway network updates are listed by their file data. 

### Dated Updates

The *MergedMasterNet - 2022-10-05* file includes most recently updated MAG merged master network with updated 2032, 2042 & 2050 Needs fields. Snapped updated MAG network with ‘MasterNet - 2022-09-08.net’ that included WFRC’s latest changes.

???WHY IS 2022-09-08 MENTIONED BUT NOT LISTED BELOW??

The *MergedMasterNet - 2022-09-19a* file inlcudes the following changes:
    - Updated Commuter-Rail Transit (CRT) Fare Zone
        - Vineyard & Orem stations were modified to have the same fare zone (similar to North Temple & Central)
        - Updated and fixed fare zone definitions in WFRC area
    - Fixed small network error in Box Elder where a local road was drawn to the centroid of v8.3.2 TAZ 53
    - A few edits to WFRC draft RTP project list
    - Updated segment ids (SEGID)
        - Made consistent with the latest segment shapefile
        - Updated segments to account for recent network changes & add segment definitions to account for rail transit
    - Added SEGEX_RTP & SEGEX_NEED as text fields (to be populated later when script/processing updated). These are segment ID exception fields where the future SEGIDs are different than existing SEGIDs.
 - Added 'MergedMasterNet - 2022-09-19a' folder
    - Workspace for editing and updating Merged Master Network and for exporting to v832 & v9 Master Networks
    - Includes update and export script
 - Added '_Node Definition - v832 & v9.xlsx' reference file

### Highway Nodes
 - Network changes:
    - All v832 highway & transit nodes are used by v9
        - Additionally, v9 network covers expanded WFRC/MAG geography (donut area)
    - Link & Node fields:
        - Naming convention set to 2023 RTP
        - 2019 RTP fields are also in the highway network for reference and will be dropped before model release
        - 2023 RTP fields were initially populated with 2019 RTP values & are being updated to reflect draft 2023 RTP
    - V9 & v832 use the following new node numbering schema:
        - TAZ
        - Highway Nodes



```{python}
#| label: tbl-hway-nodes
#| tbl-cap: Master Network Node Numbering Schema
#| echo: False
from IPython.display import Markdown
from tabulate import tabulate
table = [['WFRC'   , '10,000 - 19,999', '20,000 - 49,999', '90,000 - 94,999'],
         ['MAG'    , '50,000 - 59,999', '60,000 - 89,999', '95,000 - 99,999']]
Markdown(tabulate(
  table, 
  headers=["MPO","Transit Nodes", "Highway Nodes", "Donut Area Nodes*"]
))
```
*Donut Area = ???




## Transit Network
### Transit Line Files
 - 2023 RTP Edits
    - 2019 was thoroughly vetted to represent Aug 2019 change day
    - 2023 – updated route alignment, headways & stops based on Aug 2022 change day (WFRC & MAG)
    - 2028 – updated route alignment, headways & stops based on UTA 5-Year Service Plan (WFRC & MAG)
    - RTP 2032, 2042 & 2050 – rolled 2028 changes forward into plan phased years & updated based on 2023 draft plan
    - Needs 2032, 2042 & 2050 – rolled 2028 changes forward into plan phased years & updated based on 2023 draft plan
 - Renumbered transit LIN files according to new highway node numbering schema
    - Lin_2019
    - Lin_2023
    - Lin_2032
    - Lin_2032_Needs
    - Lin_2042
    - Lin_2042_Needs
    - Lin_2050_Needs_5yrSP
 - Updated ‘ReadLines.block’ formatting for 2019, 2023 & 2028 Line files
    - Took out tabs
    - Lined up comments
 - Edited route 'S902' in 'wfrc_sl_exp_xxxx.lin' file so route no longer goes to Parleys Canyon external node

### PT Folder

**Factor Files**

 - Updated FAC files to account for new highway node numbering
    - IWAITCURVE=1,  NODES=20000-49999,60000-89999  ;all but rail nodes WFRC:20000-49999, MAG:60000-89999
    - IWAITCURVE=2,  NODES=10000-19999,50000-59999  ;rail nodes         WFRC:10000-19999, MAG:50000-59999
    - XWAITCURVE=3,  NODES=10000-89999              ;all nodes
    - XWAITCURVE=4,  NODES=15127,10046,10019,50024  ;seamless transfer nodes
    - WAITFACTOR = 2.0,  NODES=10000-89999       ;all nodes
**Fare**

 - Updated 'GENERAL_Fare.FAR' file with 2019 fare data:
    - Created 2 sets of fare files:
        - Full Fare – actual fares reported by UTA
            - 'GENERAL_Fare - 2019.FAR'
            - 'GENERAL_Fare - 2020+.FAR' – includes fare reduction in premium (express bus) fare
        - Discounted Fare – fares reduced by 46% (previous model assumption) to account for monthly pass, ed/eco pass, fare pay, senior, employer paid, and other discounts. To be consistent with v832 and earlier methodology, the discounted fare input files are being used for now.
            - 'GENERAL_Fare - Discounted - 2019.FAR'
            - 'GENERAL_Fare - Discounted - 2020+.FAR' – includes fare reduction in premium (express bus) fare

### General Hand-Coded Support Links
 - Updated ‘General_hand_coded_walk_links.NTL’ to account for new highway node numbering and TAZ splits

### Transit Route Tester
 - Added '_chk Transit Compile on Net' folder
    - Includes the following scripts:
        - '_TransitRouteTester - 1 - BY_2019.s'
        - '_TransitRouteTester - 1 - BY_2023.s'
        - '_TransitRouteTester - 2 – TIP_2028.s'
        - '_TransitRouteTester - 3 - RTP_2032.s'
        - '_TransitRouteTester - 3 - RTP_2042.s'
        - '_TransitRouteTester - 3 - RTP_2050.s'
        - '_TransitRouteTester - 4 - Needs_2032.s'
        - '_TransitRouteTester - 4 - Needs_2042.s'
        - '_TransitRouteTester - 4 - Needs_2050.s'
    - Each script checks to see if transit line files for the respective scenario compile on the scenario highway network
    - The scripts create scenario networks in the ‘_temp - Scenario Net’ folder
    - A VPR file has been set up with the scenario’s transit lines pre-loaded onto the network for transit line edits
    - The scripts create error reports (e.g. ‘check - 1 - BY_2023.txt’) that contain any issues if the transit network fails to compile on the highway network. Opening this file and searching for 'F(' will indicate any inconsistencies.


## Externals
### Location
 - Updated to new Eternal Node locations and numbering scheme:

![v9 External Description.](../_pictures/ex_descrip1.png){#fig-descrip1}

![v8.3.2 External Description.](../_pictures/ex_descrip2.png){#fig-descrip2}

![v9 & v8.3.2 External Description.](../_pictures/ex_descrip3.png){#fig-descrip3}

![Box Elder County Externals.](../_pictures/ex_boxelder.png){#fig-ex-boxelder}

![Weber County Externals.](../_pictures/ex_weber.png){#fig-ex-weber}

![Salt Lake County Externals.](../_pictures/ex_saltlake.png){#fig-ex-saltlake}

![Utah County Externals.](../_pictures/ex_utah.png){#fig-ex-utah}


### Forecast
 - Updated 'Ext_Vol_Control'
    - Added '_Source_ExternalTAZ_HistoricalAADT v9 - 2022-04-04a.xlsx'
        - Added 8 new externals, removed 2 v832 externals
        - Updated External Node numbers
    - Updated 2010-2060 volume forecasts using 2019 historic data
    - Updated ‘external_year_vol.csv’


### Subarea Extraction Matrices
 - Updated 'WF_External'
    - Created placeholder 'WF_ExtTripTable_DY.mtx'
    - Modified matrix to work with new external numbers & added 6 new TAZ
    - Copied placeholder matrix into all years & deleted v832 data
    - Added 2028
    - Renamed 2024 to 2023, 2030 to 2032, & 2040 to 2042

## Segment
**Master_Segs_withFactors_20220915shp.shp**

 - Updated segments to align with 2023 RTP network changes
 - Added segments to account for rail transit corridors

**Stamping_Polygons\ SegmentPolygon_forTDM_20220915.shp**

 - Updated polygon stamping shapefile to coincide with Segment Shapefile and Master Network edits


## Other Changes
 - Updated '2_External_TripTable.s'

