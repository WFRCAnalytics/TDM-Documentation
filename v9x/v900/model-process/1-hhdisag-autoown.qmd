---
title: Household Disaggregation and Auto Ownership
execute:
    echo: false
    message: false
    warning: false
---

## Life Cycle 
The Life Cycle model determines the how much of the TAZ population and households from the processed socioeconomic input file will be in one of three life cycle categories:

 - Life Cycle 1 – households with no children and no seniors
 - Life Cycle 2 – households with children and no seniors
 - Life Cycle 3 – households with seniors (may have children)

The Life Cycle model does its calculations in three phases:

 - Determine the TAZ population that is in three age groups
 - Determine each age group population that is in the three life cycle categories
 - Determine the number of households in each life cycle category

### Population by Age Group
 The Life Cycle model first estimates how much of the TAZ population falls into one of three Age Group categories:

 - Age Group 1 – 0 to 17 years old
 - Age Group 2 – 18 to 64 years old
 - Age Group 3 – 65+ years old

The initial share of the TAZ population in each Age Group is determined by multiplying the TAZ household population by the TAZ-level Age Group percentages in the `Lookup - BYTAZAgePct - AllCo.csv` file located in the  <br>  
`1_Inputs\\0_GlobalData\\1_HHDisag_AutoOwn` directory.  These initial TAZ-level Age Group percentages were calculated from 2020 Census block and 2020 ACS block group data summarized at the TAZ level.  

::: {.content-visible when-format="html"}
The Census data was also summarized at the medium district level.  If the Census TAZ data had fewer than 50 people, the percentages from medium districts were used.  The medium district distribution of 2020 Census Age Group percentages for the Wasatch Front can be seen in @fig-lifemd.  The share of population in each of the Age Groups varies significantly by geography.  Urban areas tend to have the highest share of population 18-64 years old and the fewest children and seniors.  Suburban and rural areas tend to have the highest share of children.

```{python}
#| echo: False
import pandas as pd
mdist_age = pd.read_csv(r'data/1-hhdisag_autoown/TAZ_AgePct_Lookup-2022-06-07_v9.0-2023-06-30.csv')
mdist_age['MediumDistrict'] = mdist_age['MEDDIST'].astype(str).str.cat(mdist_age['MEDDIST2'], sep="-")
mdist_age_sum = mdist_age.groupby(['MediumDistrict','MEDDIST']).sum().reset_index()
mdist_age_sum['Total'] = mdist_age_sum['TotPop_0-17'] + mdist_age_sum['TotPop_18-64'] + mdist_age_sum['TotPop_65Plus']
mdist_age_sum['Percent_0-17'] = mdist_age_sum['TotPop_0-17'] / mdist_age_sum['Total']
mdist_age_sum['Percent_18-64'] = mdist_age_sum['TotPop_18-64'] / mdist_age_sum['Total']
mdist_age_sum['Percent_65Plus'] = mdist_age_sum['TotPop_65Plus'] / mdist_age_sum['Total']
mdist_age_sum = mdist_age_sum.fillna(0)
mdist_age_sum = mdist_age_sum.sort_values(by='MEDDIST')
```

```{python}
#| echo: False
mdist_age_long = mdist_age_sum.melt(id_vars=['MediumDistrict'], value_vars=['Percent_0-17', 'Percent_18-64', 'Percent_65Plus'], var_name='AgeGroup', value_name='Percent')
```

```{python}
#| echo: false
#| include: false
import plotly.express as px
morder = mdist_age_long['MediumDistrict'].to_list()
fig = px.scatter(mdist_age_long, x="Percent", y="MediumDistrict", color="AgeGroup", category_orders={'MediumDistrict':morder}, height = 1800)
```

```{python}
#| label: fig-lifemd
#| fig-cap: "2020 Census % Population by Age Group by Medium District."
#| cap-location: margin
fig.show()
```
:::

::: {.content-hidden when-format="html"}
The Census data was also summarized at the medium district level.  If the Census TAZ data had fewer than 50 people, the percentages from medium districts were used.  The medium district distribution of 2020 Census Age Group percentages for the Wasatch Front can be seen in @fig-pdf-lifemd.  The share of population in each of the Age Groups varies significantly by geography.  Urban areas tend to have the highest share of population 18-64 years old and the fewest children and seniors.  Suburban and rural areas tend to have the highest share of children.

![2020 Census % Population by Age Group by Medium District.](_pictures/1-plot1.png){#fig-pdf-lifemd height=95%}
:::

The initial TAZ-based population by Age Group is then factored to reflect the year being modeled.  This is done using the county population by Age Group forecasts found in `ControlTotal_Age.csv` located in `1_Inputs\\2_SEData\\_ControlTotals` directory.  The Age Group county-level percentages are calculated from county-level population projections from the Kem C. Gardner Policy Institute (GPI), 2020-2060 State and County Total Population by Sex and Single-Year of Age.  The GPI projections show a trend in all counties in the Wasatch Front model space toward a more senior population and fewer children.  Adult population in the age range of 18-64 also saw a slight increase in population share.

::: {.content-visible when-format="html"}
```{python}
gpi_age = pd.read_csv(r'data/1-hhdisag_autoown/ControlTotal_SE-2022-08-31_v9.0-2023-06-30.csv')
gpi_age_long = gpi_age.melt(id_vars=['AgeGroup','Region'], value_vars=['1990','2000','2010','2020','2030','2040','2050','2060'], var_name='Year',value_name='Percent')
gpi_age_long['Percent'] = gpi_age_long['Percent']
```

```{python}
#| include: False
colors = {'Age 0 - 17': 'steelblue', 'Age 18 - 64': 'peru', 'Age 65+': 'darkgrey'}
fig2 = px.bar(gpi_age_long, x = "Year", y = "Percent", color = "AgeGroup", facet_row = "Region", height = 1000, color_discrete_map=colors,
text=[f'{val:.00%}' for val in gpi_age_long['Percent']], 
             template='simple_white')
fig2.update_xaxes(title=None, tickangle=0, showticklabels=True, ticks='inside', ticklen=10)
fig2.update_traces(textposition='inside', textangle = 0, textfont=dict(color='white'))
```

```{python}
#| label: fig-gpi-age
#| fig-cap: "GPI County Population Projections by Age Group for Wasatch Front Counties."
#| cap-location: margin
fig2.show()
```
:::

### Population by Life Cycle
The Life Cycle model uses parameters estimated from the 2012 Household Survey to convert population in Age Groups to population in a Life Cycle category.  Unique parameters were estimated for each county and are found in @tbl-life-factors.  

::: {.grid}
::: {.g-col-1}
:::
::: {.g-col-10}
```{python}
#| label: tbl-life-factors
#| tbl-cap: "Percent of Age Group Population in Life Cycle 2 by County"
#| tbl-colwidths: [12, 44, 44]
from IPython.display import Markdown
from tabulate import tabulate
table = [['Box Elder', '.993' , '.664'],
         ['Weber'    , '.982' , '.606'],
         ['Davis'    , '.974' , '.711'],
         ['Salt Lake', '.961' , '.525'],
         ['Utah'     , '.981' , '.659']]
headers=["County","0-17 Population Age Group (LC2 Fac 0-17)", "18-64 Population Age Group (LC2 Fac 18-64)"]
Markdown(tabulate(table, 
  headers=headers, 
  tablefmt="pipe", 
  colalign=("left",)*len(headers), 
  showindex=False)
)
```
:::
:::

Only factors for Life Cycle 2 were estimated.  Life Cycle 1 has no children leaving the 0-17 population to be divided between Life Cycles 2 and 3.  Life Cycle 3 has no adults age 18-64 leaving the 18-64 population to be divided between Life Cycles 1 and 2.  All of 65+ population lies completely within Life Cycle 3.  @tbl-life-eqs contains the equations used to calculate Life Cycle population.

::: {.grid}
::: {.g-col-1}
:::
::: {.g-col-10}
```{python}
#| label: tbl-life-eqs
#| tbl-cap: "Equations to Calculate Age Group Population in Each Life Cycle Category"
#| tbl-colwidths: [16,28,28,28]
from IPython.display import Markdown
from tabulate import tabulate
table = [['0-17' , '0'                  , 'LC2 Fac 0-17' ,'1 – (LC2 Fac 0-17)'],
         ['18-64', '1 – (LC2 Fac 18-64)', 'LC2 Fac 18-64','0'                 ],
         ['65+'  , '0'                  , '0'            ,'1'                 ]] 
headers=["Age Group","Life Cycle 1", "Life Cycle 2", "Life Cycle 3"]
Markdown(tabulate(table, 
  headers=headers, 
  tablefmt="pipe", 
  colalign=("left",)*len(headers), 
  showindex=False)
)
```
:::
:::

Almost all of the child-aged population is contained within Life Cycle 2, ranging between 96.1% in Salt Lake County and 99.3% in Box Elder County.  The remaining child population is in Life Cycle 3.  The majority of the adult-not-a-senior population is contained in Life Cycle category 2, ranging between 52.5% in Salt Lake County and 71.1% in Davis County, with the remainder falling into Life Cycle 1.  

### Households by Life Cycle
The Life Cycle model calculates households by Life Cycle using the average household size for each Life Cycle category.  Unique average household sizes were estimated for each county and Life Cycle from the 2012 Household Survey.

::: {.grid}
::: {.g-col-1}
:::
::: {.g-col-10}
```{python}
#| label: tbl-lc-avehh
#| tbl-cap: "Average Household Size by Life Cycle and County"
#| tbl-colwidths: [13, 29,29,29]
from IPython.display import Markdown
from tabulate import tabulate
table = [['Box Elder', '1.86' , '4.21', '2.41'],
         ['Weber'    , '1.88' , '4.53', '1.81'],
         ['Davis'    , '2.14' , '4.68', '2.33'],
         ['Salt Lake', '1.86' , '4.44', '1.81'],
         ['Utah'     , '2.11' , '4.75', '2.21']]
headers=["County","Household Size for Life Cycle 1", "Household Size for Life Cycle 2", 'Household Size for Life Cycle 3']
Markdown(tabulate(table, 
  headers=headers, 
  tablefmt="pipe", 
  colalign=("left",)*len(headers), 
  showindex=False)
)
```
:::
:::

The TAZ-level population by Life Cycle category are divided by the average household size factors to generate an estimate of the share of TAZ-level households in each Life Cycle category.  The share of households in each Life Cycle category is then multiplied by the total households in the TAZ to get the adjusted number of households per Life Cycle category.  

A final check is made to avoid unrealistic household sizes for zones with smaller populations.  The number of households for a given Life Cycle category are capped at the minimum and maximum household sizes found in @tbl-lc-maxhh.  

::: {.grid}
::: {.g-col-2}
:::
::: {.g-col-8}
```{python}
#| label: tbl-lc-maxhh
#| tbl-cap: "Allowed Minimum and Maximum Average Household Size by Life Cycle"
#| tbl-colwidths: [24,32,32]
from IPython.display import Markdown
from tabulate import tabulate
table = [['1', '1.0' , '4.0'],
         ['2', '2.0' , '8.0'],
         ['3', '1.0' , '4.0']]
headers=["Life Cycle Category","Minimum Household Size", "Maximum Household Size"]
Markdown(tabulate(table, 
  headers=headers, 
  tablefmt="pipe", 
  colalign=("left",)*len(headers), 
  showindex=False)
)
```
:::
:::

## Household Disaggregation

The Household Disaggregation model classifies a TAZ’s households by:

 - Household Size
 - Income
 - Number of Workers

Household Disaggregation is done in three steps with each step adding another level of disaggregation: estimating the distribution of households by size group, further disaggregation by income group and income level, and further disaggregation by number of workers per household. This results in 96 groupings when using the four income groups or 48 groupings when using low/high income levels.

For disaggregation to household size groups, the following lookup files contain the distribution of households across the six household size groups according the average household size for the three life cycle categories: `Lookup - HH Size_LC1.csv`, `Lookup - HH Size_LC2.csv`, and `Lookup - HH Size_LC3.csv`. The distributions in these files are grouped by county. There is also a third lookup file that contains a regional distribution used for comparison purposes: `Lookup - HH Size.csv`. When computing income ratios, the regional median household income of $74,946 (2019 dollars) is used from the latest ACS.

Further disaggregation by income groups is done in multiple steps. First a target TAZ distribution by income is calculated using a county distribution found in `Lookup - Income.csv`. Then a Fratar/Furness balancing method is used to get the matrix distribution across income groups and household sizes. The matrix is initialized with the values found in @tbl-hhsize-seed, which is hard-coded into the `2_HHDisaggregation.s` script with the source being the 2012 Household Survey. The balancing method is run through until convergence is reached at (0.0001) or a max of 15 iterations.

::: {.grid}
::: {.g-col-1}
:::
::: {.g-col-10}
```{python}
#| label: tbl-hhsize-seed
#| tbl-cap: "Initialization Seed Values for Household Size and income Group"
#| tbl-colwidths: [20,20,20,20,20]
from IPython.display import Markdown
from tabulate import tabulate
table = [['1', '0.591', '0.167' , '0.210', '0.032'],
         ['2', '0.286', '0.155' , '0.351', '0.208'],
         ['3', '0.253', '0.180' , '0.351', '0.216'],
         ['4', '0.211', '0.151' , '0.395', '0.243'],
         ['5', '0.154', '0.157' , '0.460', '0.229'],
         ['6', '0.118', '0.122' , '0.479', '0.281']]
headers=["Household Size","Income Group 1 Seed", "Income Group 2 Seed", "Income Group 3 Seed", "Income Gruop 4 Seed"]
Markdown(tabulate(table, 
  headers=headers, 
  tablefmt="pipe", 
  colalign=("left",)*len(headers), 
  showindex=False)
)
```
:::
:::

Final disaggregation by worker is a simple distribution which is found in the `Lookup – Worker.csv` file. This file contains a distribution across the worker groups by each of the 24 combinations of the six household size groups and the four income groups. Households are then aggregated back to the two income levels (low/high).

### Household Size
The Household Disaggregation model estimates how many households are in six Household Size categories:

 - 1 person households
 - 2 person households
 - 3 person households
 - 4 person households
 - 5 person households
 - 6 or more person households

The model uses the TAZ's average household size to look up the share of households in each of the six Household Size categories.  This is done independently for each of the three Life Cycle categories estimated in the previous model step.  

<mark>???Is there newer data than the 2018 spreadsheet???</mark>

::: {.content-hidden when-format="html"}

2010 Census Block Group data was used to determine the initial relationship between average household size and the number of households in each size category. To increase sample size, all Block Groups in Utah were included.  Draft curves were estimated from the data’s polynomial trendline as shown in @fig-pdf-hh-poly-curves.  

![2010 Census Block Group Data - Household Size Share by Average Household Size.](_pictures/2-excel1.png){#fig-pdf-hh-poly-curves}

:::

::: {.content-visible when-format="html"}

2010 Census Block Group data was used to determine the initial relationship between average household size and the number of households in each size category.  To increase sample size, all Block Groups in Utah were included.  Draft curves were estimated from the data’s polynomial trendline as shown in @fig-hh-poly-curves.  

![2010 Census Block Group Data - Household Size Share by Average Household Size.](_pictures/2-excel1.png){#fig-hh-poly-curves width='75%'}

The results from the equations derived from the Census data were adjusted to remove negative values and to smooth and scale the resulting curves. The sum of the individual curves at any given average household size is 1. @fig-alldata shows the smoothed curves for household size share by average household size.
```{python}
import plotly.express as px
import pandas as pd
import numpy as np
```

```{python}
hhlf_csv = pd.read_csv(r'data/1-hhdisag_autoown/HHSize_byLC.csv').replace(r'^.*-.*$',0,regex=True)
```

```{python}
alldata = hhlf_csv.loc[hhlf_csv['Data']=='AllData'].drop(columns={'Data','Total'})
alldata = alldata.melt(id_vars='HH Size', var_name='HHSizeGroup', value_name='%HH')
alldata[['%HH']] = alldata[['%HH']].apply(pd.to_numeric)
alldata['Household Type'] = np.select(
  [alldata['HHSizeGroup'] == '%HH1', alldata['HHSizeGroup'] == '%HH2', alldata['HHSizeGroup'] == '%HH3', alldata['HHSizeGroup'] == '%HH4', alldata['HHSizeGroup'] == '%HH5', alldata['HHSizeGroup'] == '%HH6'],
  ['1 Person HH', '2 Person HH', '3 Person HH', '4 Person HH', '5 Person HH', '6+ Person HH'], default=alldata['HHSizeGroup']
)
```

```{python}
#| label: fig-alldata
#| fig-cap: "Household Size Share by Average Household Size -- All Data"
#| cap-location: margin
fig = px.line(alldata, x = 'HH Size', y = '%HH', color = 'Household Type')
fig.update_layout(
    xaxis_title='Average Household Size',
    yaxis_title='Percent'
)
fig.show()
```

:::

::: {.content-hidden when-format="html"}
The results from the equations derived from the Census data were adjusted to remove negative values and to smooth and scale the resulting curves. The sum of the individual curves at any given average household size is 1. @fig-pdf-alldata shows the smoothed curves for household size share by average household size.

![Household Size Share by Average Household Size -- All Data.](_pictures/2-plot2.png){#fig-pdf-alldata}
:::

The 2012 Household Survey was used to estimate the share of households in each Household Size category by Life Cycle.  The entire statewide database was used and aggregated to medium districts in order to obtain sufficient number of survey records in a group yet preserve a sufficient number of observations to estimate lookup curves by Life Cycle.  The estimated Life Cycle curves were then used to weight the Household Size lookup curves derived from the Census data (termed "All Data" in @fig-comp-all) to obtain Household Size lookup curves by Life Cycle.   

::: {.content-hidden when-format="html"}

![Comparison of Life Cycle and All Data Household Size Lookup Curves.](_pictures/2-excel3.png){#fig-comp-all height='90%'}

The Household Size lookup curves were then calibrated to county-level household size data from the 2010 Census as shown in @fig-pdf-hhcounty-1, @fig-pdf-hhcounty-2, and @fig-pdf-hhcounty-3.  The county-level adjustments were done to tailor to the lookup curves to account for local variations.  

![Comparison of Household Size Lookup Curves by County – Life Cycle 1.](_pictures/2-excel4.png){#fig-pdf-hhcounty-1}

![Comparison of Household Size Lookup Curves by County – Life Cycle 2.](_pictures/2-excel5.png){#fig-pdf-hhcounty-2}

![Comparison of Household Size Lookup Curves by County – Life Cycle 3.](_pictures/2-excel6.png){#fig-pdf-hhcounty-3}

:::

::: {.content-visible when-format="html"}

![Comparison of Life Cycle and All Data Household Size Lookup Curves.](_pictures/2-excel3.png){#fig-comp-all width='74%'}

The Household Size lookup curves were then calibrated to county-level household size data from the 2010 Census as shown in @fig-hhcounty-1, @fig-hhcounty-2, and @fig-hhcounty-3.  The county-level adjustments were done to tailor to the lookup curves to account for local variations.  

![Comparison of Household Size Lookup Curves by County – Life Cycle 1.](_pictures/2-excel4.png){#fig-hhcounty-1 width='75%'}

![Comparison of Household Size Lookup Curves by County – Life Cycle 2.](_pictures/2-excel5.png){#fig-hhcounty-2 width='75%'}

![Comparison of Household Size Lookup Curves by County – Life Cycle 3.](_pictures/2-excel6.png){#fig-hhcounty-3 width='75%'}

:::

### Income
The Household Disaggregation model estimates what percentage of household size exist at each of the following income groups (income levels) in 2016 dollars:

 - 1: $0 to 35,000 (Low)
 - 2: $35,000 to 60,000 (High)
 - 3: $60,000 to 100,000 (High)
 - 4: $100,000 and above (High)

2010 Census Block Group data was used to determine the initial relationship between income group and income ratio (ratio of the block group median income to the regional median income). To increase sample size, all Block Groups in Utah were included. Draft curves were estimated from the data’s polynomial trendline as shown in @fig-income-poly-curves. 

![2010 Census Block Group Data - Income Group Share by Income Ratio.](_pictures/2-excel7.png){#fig-income-poly-curves  width='75%'}

The results from the equations derived from the Census data were adjusted to remove negative values and to smooth and scale the resulting curves. The sum of the individual curves at any given income group is 1. @fig-allincome shows the smoothed curves for income group share by income ratio.

![Income Group Share by Income Ratio -- All Data.](_pictures/2-excel8.png){#fig-allincome width='60%'}

In addition to calculating the income group share by income ratio, the percentage of household size by income group was also summarized using the 2010 Census Block Group Data. @fig-hhsize-income shows the breakdown of the household size income seed table values.

![Household Size by Income Group Seed Table.](_pictures/2-excel9.png){#fig-hhsize-income  width='60%'}

### Worker
The Household Disaggregation model estimates what percentage of worker groups exist within each household size at each income group level. The worker groups are as follows:

 - Worker Groups: 0, 1, 2, 3+ workers per household

2010 Cesus Block Group data as well as the 2012 Household Travel Survey were used to estimate work groups into the percentages shown in @fig-worker-lines.

<mark>???Was both HTS and BG data used???</mark>

![Worker Group by Household Size by Income Group (All Counties).](_pictures/2-excel10.png){#fig-worker-lines width='75%'}

After the initial summarization of the data, the worker group percentages were calibrated to the Wasatch Front area (See @fig-worker-final). A worker group percentage lookup table was created to be used in the model.

![Calibrated Worker Group by Household Size by Income Group (Wasatch Front).](_pictures/2-excel11.png){#fig-worker-final width='75%'}


## Auto Ownership

The Auto Ownership model begins with the disaggregated households by TAZ and calculates how many vehicles each group owns. Households by vehicle ownership is grouped by 0, 1, 2, and 3+ vehicles. Auto ownership is based on utility functions for each combination of household size group, worker group, and income level (low/high). The utilities for each TAZ are then converted into probabilities. When the probabilities are multiplied by the associated number of households, then an auto ownership distribution by TAZ is created.

The utility functions for auto ownership contain a series of binary and linear variables. The binary variables are loop toggles that are set to 1 or 0 for household size groups, worker groups, and income levels. There are also two linear variables that are taken from TAZ attributes: population density of five nearest zones and employment within 30 minutes by transit. The coefficients for the utility function are shown in @tbl-veh-owner.

The code loops through the three groups to create utilities for each combination of binary variables for each TAZ. As can be seen in the table, for household size groups 5 and 6+, 3+ workers in a household, and high income, there are zero utility coefficients, which mean for combinations with these variables there is no utility. Additionally, the 3-vehicle utility is always set to 0 for every combination.

::: {.grid}
::: {.g-col-1}
:::
::: {.g-col-10}
```{python}
#| label: tbl-veh-owner
#| tbl-cap: "Coefficients for Vehicle Ownership Utility Functions"
#| tbl-colwidths: [35,20,20,13,12]
from IPython.display import Markdown
from tabulate import tabulate
table = [
    ['Constant'                               , '-5.103'     , '-1.97'      , '0.15'       , '0'],          
    ['Household Size of 1'                    , '3.288'      , '2.953'      , '0.581'      , '0'],           
    ['Household Size of 2'                    , '0.277'      , '0.503'      , '0.42'       , '0'],          
    ['Household Size of 3'                    , '-0.277'     , '0.334'      , '-0.445'     , '0'],           
    ['Household Size of 4'                    , '0.039'      , '-0.952'     , '-0.809'     , '0'],             
    ['Household Size of 5'                    , '0'          , '0'          , '0'          , '0'],   
    ['Household Size of 6+'                   , '0'          , '0'          , '0'          , '0'],   
    ['0 Worker in Household'                  , '0.998'      , '0.514'      , '0'          , '0'],       
    ['1 Workers in Household'                 , '0'          , '0.552'      , '0.081'      , '0'],           
    ['2 Workers in Household'                 , '0'          , '0'          , '0.07'       , '0'],      
    ['3+ Workers in Household'                , '0'          , '0'          , '0'          , '0'],   
    ['Low Income (Group 1)'                   , '2.733'      , '1.557'      , '0.538'      , '0'],           
    ['High Income (Group 2-4)'                , '0'          , '0'          , '0'          , '0'],   
    ['Population Density of 5 nearest Zones'  , '0.05159'    , '0.07346'    , '0.02366'    , '0'],              
    ['Employment within 30 minutes by transit', '0.000019900', '0.000008342', '0.000000000', '0']]                        
headers=["Variable","0-Vehicle Utility Function Coefficients", "1-Vehicle Utility Function Coefficients", "2-Vehicle", "3-Vehicle"]
Markdown(tabulate(table, 
  headers=headers, 
  tablefmt="pipe", 
  colalign=("left",)*len(headers), 
  showindex=False)
)
```
:::
:::

Using the utility values, probabilities for the vehicle ownership groups are calculated for each TAZ for each combination. The probability is the ratio of the exponential utility of each vehicle ownership group divided by the sum of the exponential utility of all three vehicle ownership groups for each combination. The vehicle ownership probabilities are multiplied by their associated household numbers as calculated in the household disaggregation script to get the number of households in each vehicle ownership group. Additionally, several aggregations are made to calculate total number of vehicles in different groupings. When calculating the number of vehicles in a 3+-vehicle group, the value of 3.5 number of vehicles per 3+ households is used.
