[
  {
    "objectID": "v9x/v900/whats-new/5-baseyear.html",
    "href": "v9x/v900/whats-new/5-baseyear.html",
    "title": "Model 2019 Base-Year Updates",
    "section": "",
    "text": "The following parameters and inputs were updated to bring the WF TDM base year from 2015 to 2019."
  },
  {
    "objectID": "v9x/v900/whats-new/5-baseyear.html#parameters",
    "href": "v9x/v900/whats-new/5-baseyear.html#parameters",
    "title": "Model 2019 Base-Year Updates",
    "section": "Parameters",
    "text": "Parameters\n\nIncome\nMedian income parameters for the model were updated using 2019 5-year ACS data and kept in 2019 dollars to reflect 2019 base year. Median income parameters in version 8 were estimated from 2015 ACS data and deflated to 2010 dollars. The regional median income was calculated for each county and for each model space and used to update the following income-related parameters in 0_GeneralParameters.block.\n\n\n\n\n\n\n\n\n\nTable 1: Regional Median Income\n\n\nParameter\nv9 Value\nv8 Value\n\n\n\n\nReg_Median_Inc\n$74,946\n$58,793\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTable 2: Income Break Points for Airport Exogenous Trip Table Generation\n\n\n\n\n\n\n\n\nParameter\nv9 Value\nv8 Value\nNotes\n\n\n\n\nIncome_Lo\n$45,000\n$35,000\nbreakpoint between Inc1 & Inc2\n\n\nIncome_Md\n$75,000\n$70,000\nbreakpoint between Inc2 & Inc3\n\n\nIncome_Hi\n$125,000\n$100,000\nbreakpoint between Inc3 & Inc4\n\n\n\n\n\n\n\n\nThe TAZ-level median income was also updated within the socioeconomic input files.\nThe household disaggregation income lookup curves and seed table were re-estimated based on the 2019 ACS data. The income lookup curves were estimated using data for all of Utah then calibrated specifically for the Wasatch Front model. Figure 1 shows a comparison of the version 9 and version 8 income lookup curves for the Wasatch Front.\nThe version 9 calibrated curves show a slight shift in the proportion of households toward the highest income groups from the middle two income groups relative to version 8. The lowest income group was very similar between versions 8 and 9. As the model currently groups the top three income groups into the “high income” category, the impact to the model is minimal.\n\n\n\nFigure 1: Comparison of Wasatch Front Income Lookup Curves\n\n\n\n\nValue of Time\nValue of time parameters were updated using 2019 5-year ACS data. The value of time calculation in version 9 used the same assumptions as version 8 (i.e. 39% of median income for work trips, 30% of median income for personal trips, etc.). The value of time parameters in version 9 are in 2019 dollars. Version 8 parameters were calibrated to 2015 ACS data and deflated to 2010 dollars. Values of time are in cents/minute.\n\n\n\n\n\n\n\n\n\nTable 3: Value of Time Rates\n\n\n\n\n\n\n\n\n\nv9 Parameter\nv9 Value\nv8 Parameter\nv8 Value\nNotes\n\n\n\n\nVOT_Auto_Wrk\n22\nVOT_Auto_Wrk\n18\nwork trips (HBW)\n\n\nVOT_Auto_Per\n17\nVOT_Auto_Per\n14\nnon-work trips\n\n\nVOT_Auto_Ext\n20\nVOT_Auto_Ext\n16\nexternal\n\n\nVOT_LT\n37\nVOT_LT\n30\nlight truck\n\n\nVOT_MD\n50\nVOT_MD\n40\nmedium truck\n\n\nVOT_HV\n63\nVOT_HV\n50\nheavy truck\n\n\nVOT_Toll\n63\nVOT_Toll\n50\nall vehicles on tollway\n\n\nVOT_HOT_DA\n63\nVOT_HOT_DA\n50\ndrive alone on HOT\n\n\n\n\n\n\n\n\nTo better understand the relative change in the value of time parameters, the parameters were normalized by the work-trip parameter and the percent difference in the ratios was compared. The percent differences show that the relative change between the variables in versions 8 and version 9 is very similar, indicating there isn’t a strong behavioral change due to the update of this parameter.\n\n\n\n\n\n\n\n\n\nTable 4: Relative Value of Time Ratios\n\n\n\n\n\n\n\n\nCategory\nv9 Value Relative to Work Trips\nv8 Value Relative to Work Trips\n% Difference\n\n\n\n\nwork trips\n1\n1\n0.0%\n\n\nnon-work trips\n0.77\n0.78\n-0.6%\n\n\nexternal\n0.91\n0.89\n2.3%\n\n\nlight truck\n1.68\n1.67\n0.9%\n\n\nmedium truck\n2.27\n2.22\n2.3%\n\n\nheavy truck\n2.86\n2.78\n3.1%\n\n\n\n\n\n\n\n\n\n\nAuto Operating Costs\nAuto operating costs were updated to reflect 2019 fuel cost, average fuel economy, and cost of vehicle maintenance and are in 2019 dollars. Version 8 parameters were calibrated to 2015 data and deflated to 2010 dollars. Costs are in cents/mile.\n\n\n\n\n\n\n\n\n\nTable 5: Auto Operating Cost Parameters\n\n\nParameter\nv9 Value\nv8 Value\nNotes\n\n\n\n\nAOC_Auto\n21.7\n18.3\nauto\n\n\nAOC_LT\n27.3\n24.6\nlight truck\n\n\nAOC_MD\n55.5\n47.8\nmedium truck\n\n\nAOC_HV\n74.3\n63.7\nheavy truck\n\n\n\n\n\n\n\n\nThe auto operating cost parameters in versions 8 and 9 were normalized by the auto-cost parameter. The percent differences between the version 8 and 9 ratios indicate that the relative cost to operate trucks compared to autos is slightly less in version 9 than in version 8.\n\n\n\n\n\n\n\n\n\nTable 6: Relative Auto Operating Cost Ratios\n\n\nCategory\nv9 Value\nv8 Value\n% Difference\n\n\n\n\nauto\n1\n1\n0.0%\n\n\nlight truck\n1.26\n1.34\n-6.4%\n\n\nmedium truck\n2.56\n2.61\n-2.1%\n\n\nheavy truck\n3.42\n3.48\n-1.6%\n\n\n\n\n\n\n\n\nThe relationship (ratio) between the auto operating costs and the value of time affects the distance term in the best-path functions in the distribution and assignment models. The higher the ratio, the more influence the distance term will exhibit on path choice and the more the model will be sensitive to shortest path vs. shortest time. A comparison of the ratios suggests that, while the overall pattern looks similar, distance will have slightly less influence on path choice for person trips in version 9 than in version 8, meaning person trips will be slightly more sensitive to congestion (i.e. travel time). This slight difference, however, should not be large enough to fundamentally change the behavior in the model. There is a more significant difference in the ratio for truck trips suggesting that truck trips (in particular light trucks) will be a little more sensitive to the influence of congestion in version 9 than in version 8.\n\n\n\n\n\n\n\n\n\nTable 7: Auto Operating Cost / Value of Time Ratios\n\n\nCategory\nv9 Value\nv8 Value\n% Difference\n\n\n\n\nwork trips\n0.986\n1.017\n-3.0%\n\n\nnon-work trips\n1.276\n1.307\n-2.3%\n\n\nexternal\n1.085\n1.144\n-5.1%\n\n\nlight truck\n0.738\n0.82\n-10.0%\n\n\nmedium truck\n1.11\n1.195\n-7.1%\n\n\nheavy truck\n1.179\n1.274\n-7.4%\n\n\n\n\n\n\n\n\n\n\nManaged Lane Costs\nPeak and off-peak toll cost parameters for tollways (FT=40) were updated to 48 cents/mile. This equates to approximately $5.00 for work trips (using an average work trip distances of 10.25) and $3.00 for non-work trips (using an average distance of 6.5 miles).\nPeak toll cost parameters for HOT lanes (FT=38) and reliability lanes were updated to 34 cents/mile. This equates to approximately $3.50 for work trips and $2.20 for non-work trips (using the same average distances for work and non-work trips). Off-peak toll cost parameters were set as half the peak cost.\nVersion 9 tolls are in 2019 dollars. Toll costs for version 8 are in 2010 dollars.\n\n\n\n\n\n\n\n\n\nTable 8: Managed Lane Cost Rates\n\n\n\n\n\n\n\n\nParameter\nv9 Value\nv8 Value\nNotes\n\n\n\n\nCost_Toll_Pk\n48\n24\nTollways (FT 40) cost - Peak\n\n\nCost_Toll_Ok\n48\n24\nTollways (FT 40) cost - Off-peak\n\n\nCost_HOT_Pk\n34\n10\nHOT (FT 38) cost - Peak\n\n\nCost_HOT_Ok\n17\n5\nHOT (FT 38) cost - Off-peak\n\n\nCost_REL_Pk\n34\n10\nReliability lane cost - Peak\n\n\nCost_REL_Ok\n17\n5\nReliability lane cost - Off-peak\n\n\n\n\n\n\n\n\nRelative to HOT toll costs, tollway costs are approximately 40% lower in version 9 than version 8, suggesting tollways would have less sensitivity to cost in version 9 than version 8. However, there are no tollways planned in the 2023 RTP.\n\n\nParking Costs\nThe permanent and temporary cost fields, PRKCSTPERM and PRKCSTTEMP located in the 1_Inputs\\1_TAZ\\TAZ.shp shapefile, were updated to reflect current conditions. Costs for parking in the downtown areas of Salt Lake City, Ogden, and Provo and around the universities were based on 2022 parking rates obtained from the city of Salt Lake City, web searches, and field visits.\nThe temporary parking cost for the Salt Lake City International Airport was set to $1.25 based on a weighted average of short-term premium and economy rates. This represents a $0.25 (25%) increase from version 8. Permanent parking costs were kept at $0 as workers at the airport do not pay for parking.\nThe Lagoon temporary parking cost was set to $6 based on the 2022 advertised parking rate of $18 per day by an assumed average occupancy of 3 people per vehicle. This represents a $1 (20%) increase from version 8. Permanent parking costs were kept at $0 as workers at Lagoon do not pay for parking.\nVersion 9 parking costs are in 2019 dollars, whereas version 8 parking costs are in 2010 dollars.\n\n\nTransit Fares\nVersion 9 transit fares in the PT_Parameter\\GENERAL_Fare.FAR file in the scenario line folder were updated to reflect the 2019 full advertised fares. This represented a two-fold change to the transit fares parameter. Previous models have fares coded as “average discounted fares” which included discounts for monthly passes, education passes, fare-pay, senior discounts, employer paid passes, and other discounts. In order to make updating transit fares in the model easier and more intuitive, the input fares were kept as full advertised fares and the calculation from advertised to discounted fares is now processed in the model stream.\nVersion 9 uses the same average discount assumptions as version 8. The transit fare discount was calculated in previous models to be 46% off the advertised fare yielding a discounted fare rate of 54% and the following parameter was added to the 0_GeneralParameters.block:\n\nFARE_DISCOUNT = 0.54\n\n\n\nBus Speed Ratios\nAn effort was made to refresh the bus speed factors in version 9. General transit feed specification (GTFS) data for 2019 was used to re-evaluate the version 8 bus speed ratio classifications and to estimate new bus speed ratios. The number of bus speed ratios were expanded from 6 in version 8 to 50 in version 9. The new ratios include more area type classifications as well as a classification for peak and off-peak. The bus speed ratios for versions 8 and 9 can be seen in Figure 2.\nBus speed ratio parameters were removed from the 0_GeneralParameters.block file in version 9 and are now read in via an input file (1_Inputs\\0_GlobalData\\4_ModeChoice\\bus_speed_ratios.csv). A source spreadsheet (_source - bus_speed_ratios.xlsx) is also included in the input folder. Modifications to the transit skim script were made to incorporate the new bus speeds input file.\n\nBus Speed Ratios PlotBus Speed Ratios DataPrevious Bus Speed Ratios\n\n\n\n\nCode\nfaDataBusSpeeds     = FileAttachment(\"data\\\\bus_speed_ratios_long.csv\").csv({ typed: true });\nfaFunctionalClasses = FileAttachment(\"data\\\\functionalclass.csv\"      ).csv({ typed: true });\nfaTimePeriods       = FileAttachment(\"data\\\\timeperiod.csv\"           ).csv({ typed: true });\nfaAreaTypes         = FileAttachment(\"data\\\\areatype.csv\"             ).csv({ typed: true });\n\nviewof facetSelect  = Inputs.select(new Map([['Time Period', 'TimePeriodName'], ['Area Type', 'AreaTypeName'], ['Functional Class', 'FunctionalClassName']]), {value: 'TimePeriodName'     , label: \"Columns:\"});\nviewof domainSelect = Inputs.select(new Map([['Time Period', 'TimePeriodName'], ['Area Type', 'AreaTypeName'], ['Functional Class', 'FunctionalClassName']]), {value: 'AreaTypeName'       , label: \"X-Axis:\"});\nviewof strokeSelect = Inputs.select(new Map([['Time Period', 'TimePeriodName'], ['Area Type', 'AreaTypeName'], ['Functional Class', 'FunctionalClassName']]), {value: 'FunctionalClassName', label: \"Series:\"});\n\n// FILTER DATA\n//viewof functionalclasses_checked = Inputs.checkbox(faFunctionalClasses.map(function(d) {return d.FunctionalClassName}),\n//                                                   {value: faFunctionalClasses.map(function(d) {return d.FunctionalClassName}),\n//                                                    label: \"Function Class\"});\n//viewof timeperiods_checked       = Inputs.checkbox(faTimePeriods      .map(function(d) {return d.TimePeriodName     }),\n//                                                   {value: faTimePeriods      .map(function(d) {return d.TimePeriodName     }),\n//                                                    label: \"Time Period\"   });\n//filteredBusData = faDataBusSpeeds.filter(function(busspeed) {\n//  return functionalclasses_checked.includes(busspeed.FunctionalClassName) &&\n//         timeperiods_checked      .includes(busspeed.TimePeriodName     )// &&\n//         //areatypes        .includes(busspeed.AreaTypeName  );\n//});\n\ndomainFromSelect = {\n  switch(domainSelect) {\n    case 'TimePeriodName'     : return faTimePeriods      .map(function(d) {return d.TimePeriodName     }); break;\n    case 'AreaTypeName'       : return faAreaTypes        .map(function(d) {return d.AreaTypeName       }); break;\n    case 'FunctionalClassName': return faFunctionalClasses.map(function(d) {return d.FunctionalClassName}); break;\n    default: return;\n  }\n}\n\n//xPlotDomainSelect = {\n//  switch(domainSelect) {\n//    case 'TimePeriodName'     : return \"TimePeriod\"     ; break;\n//    case 'AreaTypeName'       : return \"AreaType\"       ; break;\n//    case 'FunctionalClassName': return \"FunctionalClass\"; break;\n//    default: return;\n//  }\n//}\n\nfLabel = {\n  switch(facetSelect) {\n    case 'TimePeriodName'     : return \"Time Period\"     ; break;\n    case 'AreaTypeName'       : return \"Area Type\"       ; break;\n    case 'FunctionalClassName': return \"Functional Class\"; break;\n    default: return;\n  }\n}\n\nxLabel = {\n  switch(domainSelect) {\n    case 'TimePeriodName'     : return \"Time Period\"     ; break;\n    case 'AreaTypeName'       : return \"Area Type\"       ; break;\n    case 'FunctionalClassName': return \"Functional Class\"; break;\n    default: return;\n  }\n}\n\ndomainFacetSelect = {\n  switch(facetSelect) {\n    case 'TimePeriodName':\n      return faTimePeriods.map(function(d) {\n          return d.TimePeriodName\n        });\n      break;\n    case 'AreaTypeName':\n      return faAreaTypes.map(function(d) {\n          return d.AreaTypeName\n        });\n      break;\n    case 'FunctionalClassName':\n      return faFunctionalClasses.map(function(d) {\n          return d.FunctionalClassName\n        });\n      break;\n    default:\n      return; \n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nPlot.plot({\n  grid: true,\n  aspectRatio: 0.25,\n  facet: { data: faDataBusSpeeds, x: facetSelect, label: fLabel, marginTop: 40},\n  x: {\n    label: xLabel,\n    domain: domainFromSelect,\n    tickSize: 4,\n    tickPadding: 2,\n    marginTop: 40,\n    tickRotate: 90,\n  },\n  y: {\n    label: \"Bus Speed Ratio\",\n    domain: [0, 1],\n    fontSize: 8\n  },\n  color: { type: \"categorical\", legend: true, legendStyle: { fontSize: 16 } },\n  style: {\n    fontSize: 12\n  },\n  marginTop: 60,\n  marginBottom: 120,\n  marks: [\n    Plot.frame(),\n    Plot.line(faDataBusSpeeds, { x: domainSelect, y: \"BusSpeedRatio\", stroke: strokeSelect, strokeWidth: 2 }),\n    Plot.dot(faDataBusSpeeds, { x: domainSelect, y: \"BusSpeedRatio\", stroke: strokeSelect, r: 4, fill: strokeSelect })\n  ]\n})\n\n\n\n\n\n\nFigure 2: Bus Speed Ratios\n\n\n\n\n\n\n\nCode\nInputs.table(faDataBusSpeeds, {\n  style: {\n    fontSize: 12,\n  },\n  columns: [\n    \"FunctionalClassName\",\n    \"TimePeriodName\",\n    \"AreaTypeName\",\n    \"BusSpeedRatio\"\n  ],\n  header: {\n    FunctionalClassName: \"Functional Class\",\n    TimePeriodName: \"Time Period\",\n    AreaTypeName: \"Area Type\",\n    BusSpeedRatio: \"Bus Speed Ratio\"\n  }\n})\n\n\n\n\n\n\n\n\n\n\n\nCode\n// read in CSVs\nfaDataBusSpeeds_previous = FileAttachment(\"data\\\\bus_speed_ratios_previous.csv\").csv({ typed: true });\n\n\n\n\n\n\n\n\n\nCode\nPlot.plot({\n  grid: true,\n  aspectRatio: 0.5,\n  style: {\n    fontSize: 12,\n  },\n  margin: 40,\n  marginBottom: 150,\n  x: {\n    label: \"\",\n    //tickFormat: () =&gt; \"\",\n    tickRotate: 90,\n    domain: faDataBusSpeeds_previous.map(function(d) {return d.FunctionalClass}),\n    tickSize: 0\n  },\n  y: {label: \"Bus Speed Ratio\" , domain: [0, 1]},\n  color: { type: \"categorical\", legend: false },\n  marks: [\n    Plot.frame(),\n    Plot.barY(faDataBusSpeeds_previous, {x: \"FunctionalClass\", y: \"BusSpeedRatio\", stroke: \"FunctionalClass\", fill: \"FunctionalClass\"})\n  ]  \n})\n\n\n\n\n\n\nFigure 3: Previous Bus Speed Ratios\n\n\n\n\n\n\n\n\nInitial Wait Time\nThe initial wait time curves found in 1_Inputs\\4_Transit\\Lin_2019\\PT_Parameter\\GENERAL_System.PTS were updated in version 9 to make the mode choice model more sensitive to frequency changes. Version 8 initial wait time curves were based on the premise that transit patrons are familiar with the transit schedule and plan their trip to initially board with the minimum amount of delay. To reflect this behavior, a 7.5-minute cap for bus and a 5-minute cap for rail was set on the initial wait time parameter. This cap, however, caused the model to not see much of the benefit/disbenefit a transit user would experience when headways are changed, in particular for longer when moving away/to longer headways.\nThe version 9 initial wait time parameter was set based on research given to UTA of industry standard-practice initial wait time curves. A range of initial wait time curve values were presented in the research. Version 9 was calibrated to a more conservative curve in that range. The version 9 initial wait time curve can be seen in Figure 4.\nThe new initial wait time curve in version 9 had the effect of increasing transit ridership relative to version 8 in scenarios where an investment in more frequent transit was projected. Early testing showed this increase to be on the order of magnitude of 8-12% based on a comparison of 2019 RTP and draft 2023 RTP transportation investments. However, the actual change in ridership would vary depending on the initial starting point and the magnitude of change in transit frequency.\n\n\n\nFigure 4: Initial Wait Time Curve\n\n\n\n\nAuto Occupancy\nAuto occupancy variables were expanded to include additional trips purposes. New auto occupancy rates were calculated based on 2012 Household Travel Survey records for just the Wasatch Front model space. Auto-occupancy rates for external trips are the average of internal-external and external-internal trips. The new version 9 auto occupancy rates can be found in Table 9 and Table 9.\n\n\n\n\n\n\n\n\n\nTable 9: Vehicle Occupancy Rates\n\n\n\n\n\n\n\n\n\nv9 Parameter\nv9 Value\nv8 Parameter\nv8 Value\nNotes\n\n\n\n\nVehOcc_HBW\n1.1\nVEH_OCCUPANCY_HBW\n1.1\nHome-Based Work\n\n\nVehOcc_HBShp\n1.63\nVEH_OCCUPANCY_HBSHP\n1.58\nHome-Based Shopping\n\n\nVehOcc_HBOth\n1.68\nVEH_OCCUPANCY_HBOTH\n1.66\nHome-Based Other\n\n\nVehOcc_HBSch\n1.76\nVEH_OCCUPANCY_HBSCH\n2.14\nHome-Based School\n\n\nVehOcc_HBC\n1.12\nVEH_OCCUPANCY_HBC\n1.26\nHome-Based College\n\n\nVehOcc_NHBW\n1.21\nVEH_OCCUPANCY_NHBW\n1.2\nNon-Home-Based Work\n\n\nVehOcc_NHBNW\n1.76\nVEH_OCCUPANCY_NHBNW\n1.7\nNon-Home-Based Non-Work\n\n\nVehOcc_Rec\n1.68\n(Uses HBO)\n1.64\nRecreation\n\n\nVehOcc_HBO\n1.67\nVEH_OCCUPANCY_HBO\n1.64\nHome-Based Other (HBShp+HBOth)\n\n\nVehOcc_NHB\n1.54\nVEH_OCCUPANCY_NHB\n1.48\nNon-Home-Based (NHBW+NHBNW)\n\n\nVehOcc_ExtWrk\n1.16\n(Uses HBW)\n1.1\nExternal Work\n\n\nVehOcc_ExtHBO\n1.82\n(Uses HBO)\n1.64\nExternal Home-Based Other\n\n\nVehOcc_ExtNHB\n1.73\n(Uses NHB)\n1.48\nNon-Home-Based\n\n\nVehOcc_ExtRec\n1.73\n(Uses HBO)\n1.64\nExternal Recreation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTable 10: Vehicle Occupancy 3+ Rates\n\n\n\n\n\n\n\n\n\nv9 Parameter\nv9 Value\nv8 Parameter\nv8 Value\nNotes\n\n\n\n\nVehOcc_3p_HBW\n3.53\nVEH_OCC_3P_HBW\n3.4\n3+ Person Home-Based Work\n\n\nVehOcc_3p_HBShp\n3.49\n(Uses HBO)\n3.55\n3+ Person Home-Based Shopping\n\n\nVehOcc_3p_HBOth\n3.73\n(Uses HBO)\n3.55\n3+ Person Home-Based Other\n\n\nVehOcc_3p_HBSch\n3.88\n(Uses HBO)\n3.55\n3+ Person Home-Based School\n\n\nVehOcc_3p_HBC\n3.24\nVEH_OCC_3P_HBC\n3.53\n3+ Person Home-Based College\n\n\nVehOcc_3p_NHBW\n3.71\n(Uses NHB)\n3.51\n3+ Person Non-Home-Based Work\n\n\nVehOcc_3p_NHBNW\n3.71\n(Uses NHB)\n3.51\n3+ Person Non-Home-Based Non-Work\n\n\nVehOcc_3p_Rec\n3.73\n(Uses HBO)\n3.55\n3+ Person Recreation\n\n\nVehOcc_3p_HBO\n3.68\nVEH_OCC_3P_HBO\n3.55\n3+ Person Home-Based Other (HBShp+HBOth)\n\n\nVehOcc_3p_NHB\n3.71\nVEH_OCC_3P_NHB\n3.51\n3+ Person Non-Home-Based (NHBW+NHBNW)"
  },
  {
    "objectID": "v9x/v900/whats-new/5-baseyear.html#other-input-files",
    "href": "v9x/v900/whats-new/5-baseyear.html#other-input-files",
    "title": "Model 2019 Base-Year Updates",
    "section": "Other Input Files",
    "text": "Other Input Files\n\nK-12 School Enrollment\nThe kindergarten through 12th grade (K-12) school enrollment fields, Enrol_Elem, Enrol_Midl, and Enrol_High located in the socioeconomic input files, were updated using the 2019 statewide school enrollment database. This was done at the state-wide level and then applied to the Wasatch Front region. Additionally, a point shapefile of the state-wide dataset is included with the TDM, as shown in Figure 5.\n\n\nCode\nL = require('leaflet@1.2.0')\nhtml`&lt;link href='${resolve('leaflet@1.2.0/dist/leaflet.css')}' rel='stylesheet' /&gt;`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ngeojsonK12Enroll = FileAttachment(\"data/k12enroll.geojson\").json()\n\n\n\n\n\n\n\n\n\n\n\nCode\nmapK12Enroll = {\n\n  let container = DOM.element('div', { style: `width:${width}px;height:${width/1.6}px` });\n  yield container;\n  \n  let map = L.map(container).setView([40.7608, -111.8910], 8.25);\n\n  let greyLayer = L.tileLayer('https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png', {\n    attribution: '&copy; &lt;a href=\"https://www.openstreetmap.org/copyright\"&gt;OpenStreetMap&lt;/a&gt; contributors'\n  }).addTo(map);\n\n  var cHigh = \"#FF0000\"\n  var cMidl = \"#00FF00\"\n  var cElem = \"#0000FF\"\n\n  var geojsonMarkerOptions_High = {\n      radius: 4,\n      fillColor: cHigh,\n      color: cHigh,\n      weight: 2,\n      opacity: 1,\n      fillOpacity: 1.0,\n  };\n\n  var geojsonMarkerOptions_Midl = {\n      radius: 4,\n      fillColor: cMidl,\n      color: cMidl,\n      weight: 2,\n      opacity: 1,\n      fillOpacity: 1.0,\n  };\n  var geojsonMarkerOptions_Elem = {\n      radius: 4,\n      fillColor: cElem,\n      color: cElem,\n      weight: 2,\n      opacity: 1,\n      fillOpacity: 1.0,\n  };\n            \n  // function to use different icons based on number of stations\n  function markerByEnrollment(feature) {\n    if (feature.properties.Enrol_High &gt;= 100) {\n      return geojsonMarkerOptions_High\n    } else if (feature.properties.Enrol_Midl &gt;= 100){\n      return geojsonMarkerOptions_Midl;\n    } else{\n      return geojsonMarkerOptions_Elem;\n    }\n  };\n\n  function getColor(c) {\n    if (c=='High School') {\n      return cHigh;\n    } else if (c=='Middle School') {\n      return cMidl;\n    } else if (c=='Elementary School') {\n      return cElem;\n    }\n  };\n          \n  // create the GeoJSON layer and call the styling function with each marker\n  var layerSchools = L.geoJSON(geojsonK12Enroll,  {\n    pointToLayer: function (feature, latlng) {\n      var mypopup = L.popup().setContent(\"&lt;b&gt;\" + feature.properties.SchoolName + \" Enrollment&lt;/b&gt;\" +\n                    \"&lt;br&gt;&lt;b&gt;High School: &lt;/b&gt;\" + feature.properties.Enrol_High +\n                    \"&lt;br&gt;&lt;b&gt;Middle School: &lt;/b&gt;\" + feature.properties.Enrol_Midl +\n                    \"&lt;br&gt;&lt;b&gt;Elementary School: &lt;/b&gt;\" + feature.properties.Enrol_Elem);\n      var mymarker = L.circleMarker(latlng, markerByEnrollment(feature));\n      mymarker.bindPopup(mypopup);\n      return mymarker;\n    }\n  }).addTo(map);\n\n  var legend = L.control({position: 'bottomleft'});\n    legend.onAdd = function (map) {\n      var div = L.DomUtil.create('div', 'info legend');\n      var labelsBill = []; // legend title\n      var lcategories = ['High School','Middle School','Elementary School'];\n\n      for (var i = 0; i &lt; lcategories.length; i++) {\n        div.innerHTML += \n          labelsBill.push(\n            '&lt;i class=\"bi bi-circle-fill\" style=\"color:' + getColor(lcategories[i]) + '\"&gt;&lt;/i&gt; ' +\n          (lcategories[i] ? lcategories[i] : '+'));\n      }\n      div.innerHTML = labelsBill.join('&lt;br&gt;');\n\n      // Add CSS style for the background color\n      div.style.backgroundColor = 'lightgray';\n      div.style.padding = '10px';\n      \n      return div;\n    };\n    legend.addTo(map);\n\n  //let lyrK12Enroll = L.geoJson(geojsonK12Enroll, { size: 5, color: '#FFFFFF'}).addTo(map);\n  \n}\n\n\n\n\n\n\nFigure 5: K-12 School Locations\n\n\n\n\n\nCollege Enrollment\nBase Distribution\nThe college student base-year distribution located in 1_Inputs\\0_GlobalData\\0_TripTables\\BaseDistribution.csv was updated to reflect current conditions. Dormitory populations were assigned to TAZs based on group quarter data from the Census. The remaining enrollment was distributed using StreetLight origin-destination and USHE enrollment data.\nEnrollment Forecast\nThe future-year college enrollment control totals located in 1_Inputs\\0_GlobalData\\0_TripTables\\TripTableControlTotal.csv were updated to reflect current USHE and other college enrollment data. Colleges that were “removed” in version 9 had the college enrollment control total set to zero. A comparison of the version 9 and version 8 (specifically, version 8.3.2) college enrollment control totals can be seen in Figure 6.\n\n\n\n\n\n\n\nCode\ncollegeT = transpose(dfcollege)\n\noptionsColleges = \n[\n  ['LDS Business College', 'LDSBC'],\n  ['Westminster', 'Westmin'],\n  ['UofU Main Campus', 'UofU_Main'],\n  ['UofU Medical', 'UofU_Med'],\n  ['WSU Main Campus', 'WSU_Ogden'],\n  ['WSU Davis', 'WSU_Davis'],\n  ['WSU West Campus', 'WSU_West'],\n  ['SLCC Main Campus', 'SLCC_TL'],\n  ['SLCC South City', 'SLCC_SC'],\n  ['SLCC Jordan', 'SLCC_JD'],\n  ['SLCC Meadowbrook', 'SLCC_Mead'],\n  ['SLCC Miller', 'SLCC_ML'],\n  ['SLCC Library', 'SLCC_LB'],\n  ['SLCC Hiland', 'SLCC_HL'],\n  ['SLCC Airport', 'SLCC_Airp'],\n  ['SLCC Westpoint', 'SLCC_West'],\n  ['SLCC Herriman', 'SLCC_HM'],\n  ['BYU', 'BYU'],\n  ['UVU Main Campus', 'UVU_main'],\n  ['UVU Geneva', 'UVU_Geneva'],\n  ['UVU Lehi', 'UVU_ThankP'],\n  ['UVU Vineyard', 'UVU_VINE'],\n  ['UVU Payson', 'UVU_PAYSON']]\n\nviewof selectCollege = Inputs.select(new Map(optionsColleges), {value: 'LDSBC', label: 'College: '});\n\n// FILTER DATA\ncollege_v98= collegeT.filter(function(collegeData) {\n  return selectCollege   == collegeData.College\n});\n\ncollege_v9= collegeT.filter(function(collegeData) {\n  return selectCollege   == collegeData.College &&\n  'v9' == collegeData.Version; \n});\n\ncollege_v8= collegeT.filter(function(collegeData) {\n  return selectCollege   == collegeData.College &&\n  'v832' == collegeData.Version; \n});\n\nmaxY1 = Math.max(...college_v98.map(item =&gt; item.Enrollment));\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nhtml`&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Version Display&lt;/title&gt;\n    &lt;style&gt;\n        .green-text {\n            color: green;\n            font-size: 12px;\n            font-weight: bold;\n            padding-left: 60px;\n        }\n\n        .blue-text {\n            color: #376092;\n            font-size: 12px;\n            font-weight: bold;\n            padding-left: 20px;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;span class=\"green-text\"&gt; —— Version 8&lt;/span&gt;\n    &lt;span class=\"blue-text\"&gt; —— Version 9&lt;/span&gt;\n&lt;/body&gt;\n&lt;/html&gt;`\n\n\n\n\n\n\n\n\n\nCode\nPlot.plot({\n  grid: true,\n  aspectRatio: 0.5,\n  x: { label: 'Year', tickFormat: d =&gt; d },\n  y: { label: 'Enrollment', tickFormat: f =&gt; f, domain: [0, maxY1] },\n  marginRight: 60,\n  marginLeft: 60,\n  style: {\n    fontSize: 15\n  },\n  marginTop: 10,\n  marginBottom: 60,\n  marks: [\n    Plot.line(\n      college_v9, { x: 'Year', y: 'Enrollment', stroke: \"#376092\", strokeWidth: 4, color: { legend: 'Version' } }),\n    Plot.line(\n      college_v8, { x: 'Year', y: 'Enrollment', stroke: \"#77933c\", strokeWidth: 4, color: { legend: 'Version' } }),\n    Plot.frame({ strokeOpacity: 0.2 }),\n  ]\n});\n\n\n\n\n\n\nFigure 6: College Enrollment Forecasts\n\n\n\nCollege Enrollment Factors\nThe college enrollment factors located in 1_Inputs\\0_GlobalData\\0_TripTables\\College_Factors.csv were updated in association with the college enrollment control totals.\n\n% Removed – For colleges that were removed, the factor was reset to zero.\nFull-Time Equivalent (FTE) – the FTE rate was reduced for all colleges. This will have the effect of increasing the number of college students in the HBC college trip table. For colleges that were removed, the factor was reset to one.\nHome-Based-College (HBC) Trip Rate – For colleges that were removed, the factor was reset to zero.\n\nA comparison of the version 9 and version 8 (specifically, version 8.3.2) college enrollment control totals can be seen in Table 11.\n\n\n\n\n\n\n\n\n\nTable 11: College Enrollment Factors\n\n\n\n\n\n\n\n\n\n\n\n\n\nAreas\nCampus\n% Removed  v9 Value\n% Removed  v8 Value\nFTE Rate  v9 Value\nFTE Rate  v8 Value\nHBC Trip Rate  v9 Value\nHBC Trip Rate  v8 Value\nNotes\n\n\n\n\nWFRC Colleges\nEnsign\n0.101\n0.101\n1.179\n1.179\n0.93\n0.93\n\n\n\n\nWestminster\n0.012\n0.012\n1.098\n1.098\n0.93\n0.93\n\n\n\n\nUofU Main\n0.026\n0.026\n1.025\n1.21\n0.93\n0.93\n\n\n\n\nUofU Med\n0\n0.026\n1\n1.21\n0\n0.93\n(removed)\n\n\n\nWSU Main\n0.215\n0.215\n1.038\n1.588\n0.83\n0.83\n\n\n\n\nWSU Davis\n0.309\n0.309\n1.038\n1.588\n0.677\n0.677\n\n\n\n\nWSU West\n0\n0.309\n1\n1.588\n0\n0.677\n(removed)\n\n\n\nSLCC Main\n0.341\n0.341\n1.208\n2.005\n0.622\n0.622\n\n\n\n\nSLCC South City\n0.341\n0.341\n1.208\n2.005\n0.642\n0.642\n\n\n\n\nSLCC Jordan\n0.341\n0.341\n1.208\n2.005\n0.569\n0.569\n\n\n\n\nSLCC Meadowbrook\n0\n0.341\n1\n2.005\n0\n0.569\n(removed)\n\n\n\nSLCC Miller\n0.341\n0.341\n1.208\n2.005\n0.616\n0.616\n\n\n\n\nSLCC Library\n0\n0.341\n1\n2.005\n0\n0.616\n(removed)\n\n\n\nSLCC Highland\n0\n0.341\n1\n2.005\n0\n0.616\n(removed)\n\n\n\nSLCC Airport\n0\n0.341\n1\n2.005\n0\n0.616\n(removed)\n\n\n\nSLCC Westpointe\n0\n0.341\n1\n2.005\n0\n0.616\n(removed)\n\n\n\nSLCC Herriman\n0\n0.341\n1\n2.005\n0\n0.616\n(removed)\n\n\nMAG Colleges\nBYU\n0.026\n0.026\n1.025\n1.21\n0.93\n0.93\n\n\n\n\nUVU Main\n0.27\n0.27\n1.097\n1.4\n0.945\n0.945\n\n\n\n\nUVU Geneva\n0\n0.27\n1\n1.4\n0\n0.945\n(removed)\n\n\n\nUVU Lehi\n0.27\n0.27\n1.097\n1.4\n0.945\n0.945\n\n\n\n\nUVU Vineyard\n0.27\n0.27\n1.097\n1.4\n0.945\n0.945\n\n\n\n\nUVU Payson\n0.27\n0.27\n1.097\n1.4\n0.945\n0.945"
  },
  {
    "objectID": "v9x/v900/whats-new/5-baseyear.html#calibration",
    "href": "v9x/v900/whats-new/5-baseyear.html#calibration",
    "title": "Model 2019 Base-Year Updates",
    "section": "Calibration",
    "text": "Calibration\n\nTrip Generation Rates\nTrip generation rates were updated in version 9 as part of the model’s base year calibration. Person-trip production rates (e.g. HBW, HBShp, HBOth, etc.) were increased in the model script by approximately 5% over version 8 rates resulting in a regional increase of both productions and attractions of 5% (see Figure 7). County-level adjustments were left the same as the previous model. When combined with the changes in the 2019 socioeconomic data, the total person-trip productions and attractions in individual counites was slightly different with the most notable differences in Weber, Salt Lake, and Utah counties. The county production/attraction balance stayed fairly consistent.\n\n\n\nFigure 7: Person-Trip Productions & Attractions by County\n\n\nShort haul tuck calculations were revamped and simplified mirroring changes made to truck trip calculations in USTM. The moving people, goods, and services by light, medium, and heavy truck detailed calculations were collapsed to just light, medium, and heavy categories. (Note, the trip generation script still includes code for the more detailed calculations, however most of this code is not being used.) The new short haul truck trip variables and coefficients were combined based on the original code structure. The short haul truck trip rates were then adjusted by county. Significant changes were made to the county light, medium, and heavy truck adjustment factors resulting in a 34% increase in overall short haul truck productions and attractions. Light trucks accounted for the majority of this change with a regional increase of 50%. Medium trucks saw a regional increase of 29%. Heavy trucks decreased by 1%. In addition to the changes in regional truck trip ends and vehicle classification makeup, significant changes occurred in the county-level distribution of the trip ends with Salt Lake County truck trip ends held constant yielding more than twice the regional change in the other counties (see Figure 8).\n\n\n\nFigure 8: Short Haul Truck Productions & Attractions by County\n\n\nThe changes to the short haul trip end calculations constitute a new behavioral model.\n\n\nDistribution Friction Factors\nThe observed time, distance, and generalized cost trip length frequencies and average trip lengths, which serve as the targets for friction factor calibration and validation, were updated in version 9 to reflect the 2019 base year network and refreshed data processing. The updated average trip length frequencies are found in Figure 9.\n\n\n\nFigure 9: Observed Average Trip Length\n\n\nTrip distribution friction factors were updated in version 9 as part of the model’s base year calibration. Six new external-truck friction factors were added: IX_LT, IX_MD, IX_HV, XI_LT, XI_MD, and XI_HV. Note however that IX_LT and XI_LT friction factors were set equal to IX and XI, respectively. StreetLight truck origin-destination data was used to help calibrate the internal truck and external friction factors. A comparison of the version 9 and version 8 friction factors is found in @figxx.\n\n\n\n\n\n\n\nCode\nffT = transpose(dff)\n\noptionsFF = \n[\n  ['HBW', 'HBW'],   \n  ['HBShp', 'HBShp'],\n  ['HBOth', 'HBOth'],\n  ['HBSch_Pr', 'HBSch_Pr'],\n  ['HBSch_Sc', 'HBSch_Sc'],\n  ['NHBW', 'NHBW'],\n  ['NHBNW', 'NHBNW'],\n  ['LT', 'LT'],\n  ['MD', 'MD'],\n  ['HV', 'HV'],\n  ['IX', 'IX'],\n  ['IX_LT', 'IX_LT'],\n  ['IX_MD', 'IX_MD'],\n  ['IX_HV', 'IX_HV'],\n  ['XI',    'XI'],\n  ['XI_LT', 'XI_LT'],\n  ['XI_MD', 'XI_MD'],\n  ['XI_HV', 'XI_HV']\n]\n \nviewof selectFF = Inputs.select(new Map(optionsFF), {value: 'HBW', label: 'Purpose: '});\n\n// FILTER DATA\nff_v98= ffT.filter(function(ffData) {\n  return selectFF == ffData.Purpose;\n});\n\nff_v9= ffT.filter(function(ffData) {\n  return selectFF == ffData.Purpose &&\n  'v9' == ffData.Version; \n});\n\nff_v8= ffT.filter(function(ffData) {\n  return selectFF   == ffData.Purpose &&\n  'v832' == ffData.Version; \n});\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndomainVals = [\n    {Purpose: 'HBW',      X1MAX: 30, X2MIN: 20, X2MAX: 80 , X3MIN: 80 , X3MAX: 260, Y2MAX: .060, Y3MAX: .002  },\n    {Purpose: 'HBShp',    X1MAX: 16, X2MIN: 15, X2MAX: 50 , X3MIN: 40 , X3MAX: 150, Y2MAX: .020, Y3MAX: .0003 },\n    {Purpose: 'HBOth',    X1MAX: 16, X2MIN: 15, X2MAX: 50 , X3MIN: 40 , X3MAX: 150, Y2MAX: .020, Y3MAX: .0003 },\n    {Purpose: 'HBSch_Pr', X1MAX: 10, X2MIN: 10, X2MAX: 40 , X3MIN: 40 , X3MAX: 100, Y2MAX: .003, Y3MAX: .00003},\n    {Purpose: 'HBSch_Sc', X1MAX: 10, X2MIN: 10, X2MAX: 40 , X3MIN: 40 , X3MAX: 100, Y2MAX: .003, Y3MAX: .00003},\n    {Purpose: 'NHBW',     X1MAX: 20, X2MIN: 20, X2MAX: 100, X3MIN: 100, X3MAX: 230, Y2MAX: .040, Y3MAX: .001  },\n    {Purpose: 'NHBNW',    X1MAX: 20, X2MIN: 20, X2MAX: 100, X3MIN: 100, X3MAX: 230, Y2MAX: .040, Y3MAX: .001  },\n    {Purpose: 'LT',       X1MAX: 10, X2MIN: 10, X2MAX: 60 , X3MIN: 60 , X3MAX: 120, Y2MAX: .040, Y3MAX: .001  },\n    {Purpose: 'MD',       X1MAX: 10, X2MIN: 10, X2MAX: 60 , X3MIN: 60 , X3MAX: 120, Y2MAX: .040, Y3MAX: .001  },\n    {Purpose: 'HV',       X1MAX: 10, X2MIN: 10, X2MAX: 60 , X3MIN: 60 , X3MAX: 120, Y2MAX: .040, Y3MAX: .001  },\n    {Purpose: 'IX',       X1MAX: 80, X2MIN: 80, X2MAX: 200, X3MIN: 200, X3MAX: 300, Y2MAX: .060, Y3MAX: .03   },\n    {Purpose: 'IX_LT',    X1MAX: 80, X2MIN: 80, X2MAX: 200, X3MIN: 200, X3MAX: 300, Y2MAX: .060, Y3MAX: .03   },\n    {Purpose: 'IX_MD',    X1MAX: 80, X2MIN: 80, X2MAX: 200, X3MIN: 200, X3MAX: 300, Y2MAX: .060, Y3MAX: .03   },\n    {Purpose: 'IX_HV',    X1MAX: 80, X2MIN: 80, X2MAX: 200, X3MIN: 200, X3MAX: 300, Y2MAX: .060, Y3MAX: .03   },\n    {Purpose: 'XI',       X1MAX: 25, X2MIN: 20, X2MAX: 120, X3MIN: 80 , X3MAX: 280, Y2MAX: .080, Y3MAX: .008  },\n    {Purpose: 'XI_LT',    X1MAX: 25, X2MIN: 20, X2MAX: 120, X3MIN: 80 , X3MAX: 280, Y2MAX: .080, Y3MAX: .008  },\n    {Purpose: 'XI_MD',    X1MAX: 25, X2MIN: 20, X2MAX: 120, X3MIN: 80 , X3MAX: 280, Y2MAX: .080, Y3MAX: .008  },\n    {Purpose: 'XI_HV',    X1MAX: 25, X2MIN: 20, X2MAX: 120, X3MIN: 80 , X3MAX: 280, Y2MAX: .080, Y3MAX: .008  }\n]\n\ndomainFilter= domainVals.filter(function(data) {\n  return selectFF == data.Purpose; \n});\n\nx1max = domainFilter[0].X1MAX;\nx2min = domainFilter[0].X2MIN;\nx2max = domainFilter[0].X2MAX;\nx3min = domainFilter[0].X3MIN;\nx3max = domainFilter[0].X3MAX;\ny2max = domainFilter[0].Y2MAX;\ny3max = domainFilter[0].Y3MAX;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nhtml`&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Version Display&lt;/title&gt;\n    &lt;style&gt;\n        .green-text {\n            color: green;\n            font-size: 12px;\n            font-weight: bold;\n            padding-left: 60px;\n        }\n\n        .blue-text {\n            color: #376092;\n            font-size: 12px;\n            font-weight: bold;\n            padding-left: -20px;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;span class=\"green-text\"&gt; —— Version 8&lt;/span&gt;\n    &lt;span class=\"blue-text\"&gt; —— Version 9&lt;/span&gt;\n&lt;/body&gt;\n&lt;/html&gt;`\n\n\n\n\n\n\n\n\n\nCode\nPlot.plot({\n  grid: true,\n  aspectRatio: 0.5,\n  x: { label: 'Bin', tickFormat: d =&gt; d , domain:[0,x1max]},\n  y: { label: 'Distribution', tickFormat: f =&gt; f, domain: [0, 1] },\n  marginRight: 60,\n  marginLeft: 60,\n  color: { type: \"categorical\", legend: true, legendStyle: { fontSize: 23 } },\n  style: {\n    fontSize: 23\n  },\n  marginTop: 10,\n  marginBottom: 60,\n  height: 700,\n  marks: [\n    Plot.line(\n      ff_v9, { x: 'Bin', y: 'Distribution', stroke: \"#376092\", strokeWidth: 4, color: { legend: 'Version' } }),\n    Plot.line(\n      ff_v8, { x: 'Bin', y: 'Distribution', stroke: \"#77933c\", strokeWidth: 4, color: { legend: 'Version' } }),\n    Plot.frame({ strokeOpacity: 0.2 }),\n      [\n      Plot.text([`\\n   ——   Current Projection \\n\\n   —  — Previous Projection`], {frameAnchor: \"top-right\", fontSize: 24})\n  ]]\n});\nPlot.plot({\n  grid: true,\n  aspectRatio: 0.5,\n  x: { label: 'Bin', tickFormat: d =&gt; d , domain:[x2min,x2max]},\n  y: { label: 'Distribution', tickFormat: f =&gt; f, domain: [0, y2max] },\n  marginRight: 60,\n  marginLeft: 60,\n  color: { type: \"categorical\", legend: true, legendStyle: { fontSize: 23 } },\n  style: {\n    fontSize: 23\n  },\n  marginTop: 10,\n  marginBottom: 60,\n  height: 700,\n  marks: [\n    Plot.line(\n      ff_v9, { x: 'Bin', y: 'Distribution', stroke: \"#376092\", strokeWidth: 4, color: { legend: 'Version' } }),\n    Plot.line(\n      ff_v8, { x: 'Bin', y: 'Distribution', stroke: \"#77933c\", strokeWidth: 4, color: { legend: 'Version' } }),\n    Plot.frame({ strokeOpacity: 0.2 }),\n  ]\n});\nPlot.plot({\n  grid: true,\n  aspectRatio: 0.5,\n  x: { label: 'Bin', tickFormat: d =&gt; d , domain:[x3min,x3max]},\n  y: { label: 'Distribution', tickFormat: f =&gt; f, domain: [0, y3max] },\n  marginRight: 60,\n  marginLeft: 60,\n  color: { type: \"categorical\", legend: true, legendStyle: { fontSize: 23 } },\n  style: {\n    fontSize: 23\n  },\n  marginTop: 10,\n  marginBottom: 60,\n  height: 700,\n  marks: [\n    Plot.line(\n      ff_v9, { x: 'Bin', y: 'Distribution', stroke: \"#376092\", strokeWidth: 4, color: { legend: 'Version' } }),\n    Plot.line(\n      ff_v8, { x: 'Bin', y: 'Distribution', stroke: \"#77933c\", strokeWidth: 4, color: { legend: 'Version' } }),\n    Plot.frame({ strokeOpacity: 0.2 }),\n  ]\n});\n\n\n\n\n\n\n\n\n\n(a) Beginning of Curve\n\n\n\n\n\n\n\n(b) Middle of Curve\n\n\n\n\n\n\n\n(c) End of Curve\n\n\n\nFigure 10: Friction Factors\n\n\n\n\n\nK-Factors\nK-factor variables were expanded by trip purpose to allow for more flexibility in calibrating the distribution model. However, no K-factors were needed for calibration. All K-factors were reset to 1.\n\n\n\n\n\n\n\n\n\nTable 12: Reset K-Factors\n\n\n\n\n\n\n\n\n\nArea\nv9 Parameter\nv9 Value\nv8 Parameter\nv8 Value\n\n\n\n\nbetween Salt Lake and Utah counties\nSL_UT_KFAC_Wrk\n1\nSL_UT_KFAC\n0.85\n\n\n\nSL_UT_KFAC_Oth\n1\n\n\n\n\n\nSL_UT_KFAC_Trk\n1\n\n\n\n\n\nSL_UT_KFAC_Ext\n1\n\n\n\n\nbetween Salt Lake and Davis counties\nSL_DA_KFAC_Wrk\n1\nSL_DA_KFAC\n0.95\n\n\n\nSL_DA_KFAC_Oth\n1\n\n\n\n\n\nSL_DA_KFAC_Trk\n1\n\n\n\n\n\nSL_DA_KFAC_Ext\n1\n\n\n\n\nbetween Box Elder and Weber counties\nWE_BE_KFAC_Wrk\n1\nWE_BE_KFAC\n1.00\n\n\n\nWE_BE_KFAC_Oth\n1\n\n\n\n\n\nWE_BE_KFAC_Trk\n1\n\n\n\n\n\nWE_BE_KFAC_Ext\n1\n\n\n\n\n\n\n\n\n\n\n\n\nMode Choice Constants\nMode choice constants were updated in version 9 as part of the model’s base year calibration.\nIn addition, the parameter used to set the Core Bus constant was renamed and lowered to 0.33. The effect of this change makes mode 5 in the model a little less attractive in version 9 than it was in version 8.\n\n\n\n\n\n\n\n\n\nTable 13: Core Bus Constant Multiplier\n\n\n\n\n\n\n\n\n\nv9 Parameter\nv9 Value\nv8 Parameter\nv8 Value\nNotes\n\n\n\n\nRAIL2COR_MULTIPLIER\n0.33\nRAIL2BRT_MULTIPLIER\n0.4\nfactor to set Core Route constant relative to LRT constant\n\n\n\n\n\n\n\n\nAdjustment factors were added to the mode choice logit model to adjust CRT ridership in Davis and Utah counties. The parameters are applied in the utility calculation and represent a penalty/incentive in equivalent minutes."
  },
  {
    "objectID": "v9x/v900/validation/4-assignhwy.html",
    "href": "v9x/v900/validation/4-assignhwy.html",
    "title": "Highway Assignment",
    "section": "",
    "text": "Validation of final highway assignment was done comparing model outputs from the final loaded networks with observed data. The comparisons were done with volumes and speeds."
  },
  {
    "objectID": "v9x/v900/validation/4-assignhwy.html#volumes",
    "href": "v9x/v900/validation/4-assignhwy.html#volumes",
    "title": "Highway Assignment",
    "section": "Volumes",
    "text": "Volumes\nThe validation results for the Highway Assignment portion of the model are shown in this section. The observed data for 2019 volumes is taken from the Utah Department of Transportation (UDOT) Average Annual Daily Traffic (AADT) History and associated with their respective model segments. The traffic model data is taken from segment summary report for the 2019 base year model: v9_SE19_Net19_Summary_SEGID.csv. The results are divided into three sections:\n\nSummary Comparison\nDetailed Comparison\nMap Comparison\n\n\n\nCode\nimport {GroupedBarChart} from \"@d3/grouped-bar-chart\"\nimport {Legend, Swatches} from \"@d3/color-legend\"\nimport {howto, altplot} from \"@d3/example-components\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSummary Comparison\nThe summary comparison shows region and county-wide differences between model and observed for Average Daily Volume and Vehicle-Miles Traveled (VMT) by vehicle type. The values for Box Elder and Weber counties are only the portions within the MPO planning area. Validation was checked comparing the average daily volume at the region and county levels. Figure 1, below, contains an interactive view of model vs observed differences by roadway class and vehicle type.\n\n\nCode\nhtml`&lt;br/&gt;`\n\n\n\n\n\n\n\n\n\nCode\nviewof bSummaryFuncClass = Inputs.select(new Map([['All Roadways','All Roadways'], ['Freeway','Freeway'], ['Principal','Principal'], ['Minor', 'Minor'], ['Collector', 'Collector']]), {value: 'All Roadways', label: \"Roadway Class:\"})\nviewof bSummaryVehType = Inputs.select(new Map([['All Vehicles','All Vehicles'], ['Passenger Cars', 'Passenger Cars'], ['Medium Trucks','Medium Trucks'], ['Heavy Trucks','Heavy Trucks']]), {value: 'All Vehicles', label: \"Vehicle Type:\"})\nviewof bSummaryDiffType = Inputs.select(new Map([['Percent Difference','DiffPct'], ['Difference','Diff']]), {value: 'DiffPct', label: \"Display:\"})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nvolDiffLongT = transpose(volDiffLong)\nvmtDiffLongT = transpose(vmtDiffLong)\n\nvolDiffLongT_filtered = volDiffLongT.filter(function(dataL) {\n    return bSummaryFuncClass == dataL.funcClass &&\n           bSummaryVehType == dataL.vehType &&\n           (('vol' + bSummaryDiffType) == dataL.View);\n})\nvmtDiffLongT_filtered = vmtDiffLongT.filter(function(dataL) {\n    return bSummaryFuncClass == dataL.funcClass &&\n           bSummaryVehType == dataL.vehType &&\n           (('vmt' + bSummaryDiffType) == dataL.View);\n})\n\nvvp = transpose(vvpct)\nvvpL = transpose(vvpctLong)\nvvaL = transpose(vvabsLong)\nvvaLR = transpose(vvabsLongR)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nimport {DivergingBarChart} from \"@d3/diverging-bar-chart\"\n\nfunction getXDomainVol(bSummaryDiffType) {\n    if (bSummaryDiffType === \"Diff\") {\n        return [max_abs_value_volDiff * -1, max_abs_value_volDiff];\n    } else {\n        return [max_abs_value_volDiffPct * -1, max_abs_value_volDiff]; // -100% to 100%\n    }\n}\n\nfunction getXDomainVmt(bSummaryDiffType) {\n    if (bSummaryDiffType === \"Diff\") {\n        return [max_abs_value_vmtDiff * -1, max_abs_value_vmtDiff];\n    } else {\n        return [max_abs_value_vmtDiffPct * -1, max_abs_value_vmtDiff]; // -100% to 100%\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nhtml`&lt;br/&gt;&lt;h4&gt;Average Daily Volume&lt;/h4&gt;`\n\n\n\n\n\n\n\n\n\nCode\nchartVolDiff = DivergingBarChart(volDiffLongT_filtered, {\n    x: d =&gt; d.ViewValue,\n    y: d =&gt; d.coFips,\n    xFormat: bSummaryDiffType === \"Diff\" ? \"+,d\" : \"+.1%\",\n    xLabel: \"Model vs Observed Differences\",\n    width: 440,\n    xDomain: bSummaryDiffType === \"Diff\" ? [max_abs_value_volDiff * -1, max_abs_value_volDiff] : [max_abs_value_volDiffPct * -1, max_abs_value_volDiffPct],\n    yDomain:  ['Region','Box Elder County - WFRC','Weber County - WFRC','Davis County','Salt Lake County','Utah County'],\n    colors: d3.schemeRdBu[3]\n})\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nhtml`&lt;br/&gt;&lt;h4&gt;Vehicle-Miles Traveled&lt;/h4&gt;`\n\n\n\n\n\n\n\n\n\nCode\nchartVmtDiff = DivergingBarChart(vmtDiffLongT_filtered, {\n    x: d =&gt; d.ViewValue,\n    y: d =&gt; d.coFips,\n    xFormat: bSummaryDiffType === \"Diff\" ? \"+,d\" : \"+.1%\",\n    xLabel: \"Model vs Observed Differences\",\n    width: 440,\n    xDomain: bSummaryDiffType === \"Diff\" ? [max_abs_value_vmtDiff * -1, max_abs_value_vmtDiff] : [max_abs_value_vmtDiffPct * -1, max_abs_value_vmtDiffPct],\n    yDomain:  ['Region','Box Elder County - WFRC','Weber County - WFRC','Davis County','Salt Lake County','Utah County'],\n    colors: d3.schemeRdBu[3]\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ntbEmptyCell1 = 1\n\n\n\n\n\n\nFigure 1: Highway Assignment Summary Comparison\n\n\n\nAt the region level model volume is 0.4% lower than observed volume. The four more urban counties (Weber, Davis, Salt Lake, and Davis) were all within 5% of observed volumes with Salt Lake County being the closest. Weber and Davis were slightly lower and Utah County was slightly higher. Box Elder County is more rural than the other counties. Box Elder model volumes are about 10% lower than observed. Time did not allow for further calibration of the volumes in Box Elder area to account for the larger differences.\nOne important observation at the Collector and All Vehicles level is that Utah County shows a much higher difference than the other counties. Upon further investigation of observed Collector volumes in Utah County, many roadway segments had very low volumes compared to what was expected. Utah County is one of the highest growth areas in the region. For this reason, we expect that the observed count data may be underrepresenting actual volumes. We also anticipate observed volumes in Utah County to improve in the near-term. Within the last several years, a large investment in continuous count station in Utah County has been made. The new counters will add additional information to generate observed volumes for all roadway segments.\nThe largest differences in model vs observed volumes occur in the Medium Truck and Heavy Truck vehicle types. A good amount of time was spent attempting to bring model truck volumes closer to observed. However, due to the limited data sources for truck information, further need to investigate observed truck volumes, and a desire to not over-calibrate the model, further calibration was stopped. Truck modeling remains a future priority for model improvement.\n\n\nDetailed Comparison\nThe model vs observed details in this section are presented by volume and Vehicle-Miles Traveled (VMT) through the comparison of model and observed data facility type by region and also by county. Figure 2 allows for the interactive visual comparison of model and observed values for the region and each county for all vehicles, cars, medium trucks, and heavy trucks. The comparisons are shown in four different types of charts and tables:\n\nAverage Daily Volume by Roadway Class (2a): The daily volume is averaged across all segments within their respective geography and vehicle type.\nTotal VMT by Roadway Class (2b): For each segment*, the daily volume is multiplied by segment distance and then summed across all segments within their respective geography and vehicle type.\nModel vs Count Segment Volume (2c): This is a scatter plot of segment daily volume with the x-axis as the observed volume and the y-axis as the model volume. The red line shows the location of where model and observed volumes are equal. The dashed blue line shows a least-squares linear regression. The further the blue line moved away from the red line, the further the model is from observed.\nSegment Percent Error (2d): This is a scatter plot showing the amount of error (percent difference) between the observed volume and the model volume. The observed volume is the x-axis and the percent error is the y-axis. The red lines are a bounding box that shows the control target. As volume increases, it is expected that the percent error should decrease.\n\n\n\nCode\nhtml`&lt;br/&gt;`\n\n\n\n\n\n\n\n\n\nCode\nviewof bCountySelect = Inputs.select(new Map([['Region', 'Region'], ['Box Elder County - WFRC',3], ['Weber County - WFRC',57], ['Davis County',11], ['Salt Lake County',35], ['Utah County',49]]), {value: 'All', label: \"Geography:\"})\nviewof bVehType = Inputs.select(new Map([['All Vehicles','All Vehicles'], ['Passenger Cars', 'Passenger Cars'], ['Medium Trucks','Medium Trucks'], ['Heavy Trucks','Heavy Trucks']]), {value: 'All Vehicles', label: \"Vehicle Type:\"})\n\nsortOrder = ['Freeway', 'Principal', 'Minor', 'Collector', 'All Roadways'];\n\nvolT = transpose(vol)\nvmtT = transpose(vmt)\nfiltered_volData = volT.filter(function(dataL) {\n    return bCountySelect == dataL.coFips &&\n           bVehType == dataL.vehType;\n}).sort((a, b) =&gt; sortOrder.indexOf(a.funcClass) - sortOrder.indexOf(b.funcClass));\nfiltered_vmtData = vmtT.filter(function(dataL){\n    return bCountySelect == dataL.coFips &&\n           bVehType == dataL.vehType;\n}).sort((a, b) =&gt; sortOrder.indexOf(a.funcClass) - sortOrder.indexOf(b.funcClass));\n\nvolTL = transpose(volLong)\nvmtTL = transpose(vmtLong)\nfiltered_volDataL = volTL.filter(function(dataL) {\n    return bCountySelect == dataL.coFips &&\n           bVehType == dataL.vehType;\n}).sort((a, b) =&gt; sortOrder.indexOf(a.funcClass) - sortOrder.indexOf(b.funcClass));\nfiltered_vmtDataL = vmtTL.filter(function(dataL){\n    return bCountySelect == dataL.coFips &&\n           bVehType == dataL.vehType;\n}).sort((a, b) =&gt; sortOrder.indexOf(a.funcClass) - sortOrder.indexOf(b.funcClass));\n\n\nallvehplotT = transpose(allvehplot)\nfiltered_allvehplotData = allvehplotT.filter(function(dataL) {\n    return bCountySelect == dataL.coFips &&\n           bVehType == dataL.vehType;\n});\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nfunction formatNumber(value, isPercentage=false) {\n    if (typeof value === 'undefined') {\n        return '';  // or return a default value or message\n    }\n    \n    if (isPercentage) {\n        return (Number(value) * 100).toFixed(1) + '%';\n    }\n    return Number(value.toFixed(0)).toLocaleString();\n}\n\nwidthsVol = ['100px', '52px', '70px', '70px', '73px', '73px', '63px', '63px']; // Define the widths\nwidthsVmt = ['100px', '88px', '88px', '88px', '88px'];\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nhtml`\n&lt;h4&gt;2a. Average Daily Volume by Roadway Class&lt;/h4&gt;\n&lt;table&gt;\n    &lt;thead&gt;\n    &lt;tr&gt;\n        ${[\"Roadway Class\", \"# Segs\", \"Volume\", \"Observed\", \"Difference\", \"Percent Difference\", \"RMSE\", \"Percent RMSE\"].map((d, i) =&gt; {\n            return html`&lt;th style='text-align: ${i === 0 ? \"left\" : \"right\"}; padding: 5px; width: ${widthsVol[i]};'&gt;${d}&lt;/th&gt;`;\n        })}\n    &lt;/tr&gt;\n    &lt;/thead&gt;\n    &lt;tbody&gt;\n        ${filtered_volData.map(row =&gt; {\n            const isBold = row['funcClass'] === 'All Roadways';\n            return html`&lt;tr style='border-bottom: 1px solid lightgrey;'&gt;\n                ${[\"funcClass\", \"numSegs\", \"volMod\", \"volObs\", \"volDiff\", \"volDiffPct\", \"volRmse\", \"volRmsePct\"].map((d, i) =&gt; {\n                    // Check if the current cell is one of the numeric columns that need formatting\n                    let formattedValue;\n                    if (i === 5 || i === 7) {\n                        formattedValue = formatNumber(row[d], true);  // True for percentage formatting\n                    } else if ((i &gt;= 1 && i &lt;= 4) || i==6) {\n                        formattedValue = formatNumber(row[d]);\n                    } else {\n                        formattedValue = row[d];\n                    }\n                    return html`&lt;td style='text-align: ${i === 0 ? \"left\" : \"right\"}; padding: 5px; font-weight: ${isBold ? 'bold' : 'normal'};'&gt;${formattedValue}&lt;/td&gt;`;\n                })}\n            &lt;/tr&gt;`;\n        })}\n    &lt;/tbody&gt;\n&lt;/table&gt;`\n\n\n\n\n\n\n\n\n\n\nCode\nhtml`&lt;h4&gt;&nbsp;&lt;/h4&gt;`\n\n\n\n\n\n\n\n\n\nCode\nkeyVol = Legend(bChartVol.scales.color, {title: \"Data Source\"})\n\nbChartVol = GroupedBarChart(filtered_volDataL, {\n    x: d =&gt; d.funcClass,\n    y: d =&gt; d.ViewValue,\n    z: d =&gt; d.DataSource,\n    xDomain: ['Freeway','Principal','Minor','Collector','All Roadways'],\n    yLabel: \"Volume (thousands)\",\n    zDomain: ['Model','Observed'],\n    width: 320,\n    height: 175,\n    colors: [\"#376092\", \"#77933c\"]\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nhtml`\n&lt;h4&gt;2b. Total Daily VMT by Roadway Class&lt;/h4&gt;\n&lt;table&gt;\n    &lt;thead&gt;\n    &lt;tr&gt;\n        ${[\"Roadway Class\", \"Model\", \"Observed\", \"Difference\", \"Percent Difference\"].map((d, i) =&gt; {\n            return html`&lt;th style='text-align: ${i === 0 ? \"left\" : \"right\"}; padding: 5px; width: ${widthsVmt[i]};'&gt;${d}&lt;/th&gt;`;\n        })}\n    &lt;/tr&gt;\n    &lt;/thead&gt;\n    &lt;tbody&gt;\n        ${filtered_vmtData.map(row =&gt; {\n            const isBold = row['funcClass'] === 'All Roadways';\n            return html`&lt;tr style='border-bottom: 1px solid lightgrey;'&gt;\n                ${[\"funcClass\", \"vmtMod\", \"vmtObs\", \"vmtDiff\", \"vmtDiffPct\"].map((d, i) =&gt; {\n                    // Check if the current cell is one of the numeric columns that need formatting\n                    let formattedValue;\n                    if (i === 4 || i === 6) {\n                        formattedValue = formatNumber(row[d], true);  // True for percentage formatting\n                    } else if ((i &gt;= 1 && i &lt;= 3) || i==5) {\n                        formattedValue = formatNumber(row[d]);\n                    } else {\n                        formattedValue = row[d];\n                    }\n                    return html`&lt;td style='text-align: ${i === 0 ? \"left\" : \"right\"}; padding: 5px; font-weight: ${isBold ? 'bold' : 'normal'};'&gt;${formattedValue}&lt;/td&gt;`;\n                })}\n            &lt;/tr&gt;`;\n        })}\n    &lt;/tbody&gt;\n&lt;/table&gt;`\n\n\n\n\n\n\n\n\n\n\nCode\nhtml`&lt;h4&gt;&nbsp;&lt;/h4&gt;`\n\n\n\n\n\n\n\n\n\nCode\nkeyVmt = Legend(bChartVmt.scales.color, {title: \"Data Source\"})\n\nbChartVmt = GroupedBarChart(filtered_vmtDataL, {\n    x: d =&gt; d.funcClass,\n    y: d =&gt; d.ViewValue,\n    z: d =&gt; d.DataSource,\n    xDomain: ['Freeway','Principal','Minor','Collector','All Roadways'],\n    yLabel: \"VMT (millions)\",\n    zDomain: ['Model','Observed'],\n    width: 320,\n    height: 175,\n    colors: [\"#376092\", \"#77933c\"]\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nimport {max} from 'd3-array';\n\n\n\n\n\n\n\n\n\nCode\nmaxVal = {\n  return Math.max(\n    d3.max(filtered_allvehplotData, d =&gt; d.volObs),\n    d3.max(filtered_allvehplotData, d =&gt; d.volMod)\n  );\n}\n\n\n\n\n\n\n\n\n\nCode\nhtml`&lt;h4&gt;2c. Model vs Observed Volumes&lt;/h4&gt;`\n\n\n\n\n\n\n\n\n\nCode\nPlot.plot({\n  grid: true,\n  width: 460,\n  height: 300,\n  marginRight: 40,\n  x: {\n    label: \"Observed Volume (thousands)\",\n    domain: [0, maxVal]\n  },\n  y: {\n    label: \"Model Volume (thousands)\",\n    domain: [0, maxVal]\n  },\n  marks: [\n    Plot.dot(filtered_allvehplotData, {\n      x: \"volObs\",\n      y: \"volMod\",\n      r: 1,\n      fill: \"rgb(80, 116, 230)\",\n      fillOpacity: 0.5,\n      stroke: \"none\"\n    }),\n    Plot.link([0.6, 0.7, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4], {\n      x1: 0,\n      y1: 0,\n      x2: maxVal,\n      y2: (k) =&gt; maxVal * k,\n      strokeOpacity: (k) =&gt; k === 1 ? 1 : 0.2,\n      stroke: \"red\",\n      strokeWidth: (k) =&gt; k === 1 ? 2 : 1.5\n    }),\n    Plot.text([0.6, 0.7, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4], {\n      x: maxVal,\n      y: (k) =&gt; maxVal * k,\n      text: ((f) =&gt; (k) =&gt; k === 1 ? \"Equal\" : f(k - 1))(d3.format(\"+.0%\")),\n      textAnchor: \"start\",\n      dx: 6\n    }),\n    Plot.linearRegressionY(filtered_allvehplotData, {\n        x: \"volObs\",\n        y: \"volMod\",\n        stroke: \"rgb(80, 116, 230)\",\n        strokeDasharray: \"4 4\",  // This creates a dashed line pattern,\n        strokeWidth: 2 \n    })\n  ]\n})\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nhtml`&lt;h4&gt;2d. Segment Percent Error&lt;/h4&gt;`\n\n\n\n\n\n\n\n\n\nCode\nPlot.plot({\n  grid: true,\n  width: 460,\n  height: 300,\n  marginRight: 40,\n  x: {\n    label: \"Observed Volume (thousands)\",\n    domain: [0, maxVal]\n  },\n  y: {\n    label: \"Percent Error\",\n    domain: [-2, 2],\n    tickFormat: d3.format(\".0%\")\n  },\n  marks: [\n    Plot.dot(filtered_allvehplotData, {\n      x: \"volObs\",\n      y: \"volErrorPct\",\n      r: 1,\n      fill: \"rgb(80, 116, 230)\",\n      fillOpacity: 0.5,\n      stroke: \"none\"\n    }),\n    Plot.ruleY([2], {\n      x1: 0,\n      x2: 1,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleX([1], {\n      y1: 1,\n      y2: 2,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleY([1], {\n      x1: 1,\n      x2: 2.5,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleX([2.5], {\n      y1: 0.5,\n      y2: 1.0,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleY([0.5], {\n      x1: 2.5,\n      x2: 5,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleX([5], {\n      y1: 0.25,\n      y2: 0.50,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleY([0.25], {\n      x1: 5,\n      x2: 10,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleX([10], {\n      y1: 0.20,\n      y2: 0.25,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleY([0.20], {\n      x1: 10,\n      x2: 25,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleX([25], {\n      y1: 0.15,\n      y2: 0.20,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleY([0.15], {\n      x1: 25,\n      x2: 50,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleX([50], {\n      y1: 0.10,\n      y2: 0.15,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleY([0.10], {\n      x1: 50,\n      x2: 300,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleY([-2], {\n      x1: 0,\n      x2: 1,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleX([1], {\n      y1: -1,\n      y2: -2,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleY([-1], {\n      x1: 1,\n      x2: 2.5,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleX([2.5], {\n      y1: -0.5,\n      y2: -1.0,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleY([-0.5], {\n      x1: 2.5,\n      x2: 5,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleX([5], {\n      y1: -0.25,\n      y2: -0.50,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleY([-0.25], {\n      x1: 5,\n      x2: 10,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleX([10], {\n      y1: -0.20,\n      y2: -0.25,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleY([-0.20], {\n      x1: 10,\n      x2: 25,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleX([25], {\n      y1: -0.15,\n      y2: -0.20,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleY([-0.15], {\n      x1: 25,\n      x2: 50,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleX([50], {\n      y1: -0.10,\n      y2: -0.15,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleY([-0.10], {\n      x1: 50,\n      x2: 300,\n      stroke: \"red\",\n      strokeWidth: 2\n    })\n  ]\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ntbEmptyCell2 = 1\n\n\n\n\n\n\nFigure 2: Detailed Model vs Observed Comparison of Highway Assignment\n\n\n\n\n\nMap Comparison\nThe maps in Figure 3 shows a comparison of segment level model vs observed volumes by vehicle types. Blue represents model lower than observed and red represent model volume higher than observed.\n\n\n\nFigure 3: Segment-Level Model vs Observed Volume Comparison by Vehicle Type\n\n\nLooking at the All Vehicles map, the model volumes are lower than observed for by more than 15,000 vehicles per day for the east side of I-215 and for I-15 through northern Utah County. Model volumes are higher than observed volumes by more than than 15,000 vehicles for I-15 in southern Salt lake County and for I-15 in Utah County between Springville and Spanish Fork. When looking at these areas by vehicle type, the drop in Cars and Light Trucks are actual greater since the Medium Trucks and Heavy Trucks in these areas are greater in the model vs observed. Outside of these areas, the volume differences between model and observed are relatively minor.\nThe lower arterial model vs observed volumes of Heavy Trucks on 9000 South in Salt Lake County was further investigated. The Heavy Truck observed volume for this roadway seemed much higher than expected for this roadway. The lower volumes are likely due to the observed data and not anything in the model."
  },
  {
    "objectID": "v9x/v900/validation/4-assignhwy.html#speeds",
    "href": "v9x/v900/validation/4-assignhwy.html#speeds",
    "title": "Highway Assignment",
    "section": "Speeds",
    "text": "Speeds\nComparisons were made between model and observed for a sample of OD pairs. Observed speeds come from sampled data at various time periods in 2019 for the WFRC area using the Google API for reported travel times between coordinates for an origin and destination. Model speeds come from the final network skims that report travel times between all TAZs in the model for each period of the day. The two data sets were joined using a coordinate to TAZ spatial join to locate Google end points to match their respective TAZ.\n\n\n\n\n\n\n\nCode\nhtml`&lt;br/&gt;`\n\n\n\n\n\n\n\n\n\nCode\nviewof vPeriod = Inputs.select(new Map([['AM','AM'], ['Midday','MD'], ['PM','PM'], ['Evening', 'EV']]), {value: 'AM', label: \"Period:\"})\n\nspeedT = transpose(speed)\n\nspeedT_filtered = speedT.filter(function(dataSpd) {\n    return vPeriod == dataSpd.Period;\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nhtml`&lt;h4&gt;Model vs Observed Speeds&lt;/h4&gt;`\n\n\n\n\n\n\n\n\n\nCode\nPlot.plot({\n  grid: true,\n  width: 460,\n  height: 300,\n  marginRight: 40,\n  x: {\n    label: \"Observed Speed (mph)\",\n    domain: [0, 70]\n  },\n  y: {\n    label: \"Model Speed (mph)\",\n    domain: [0, 70]\n  },\n  marks: [\n    Plot.dot(speedT_filtered, {\n      x: \"spdObs\",\n      y: \"spdMod\",\n      r: 1,\n      fill: \"rgb(80, 116, 230)\",\n      fillOpacity: 0.5,\n      stroke: \"none\"\n    }),\n    Plot.linearRegressionY(speedT_filtered, {\n        x: \"spdObs\",\n        y: \"spdMod\",\n        stroke: \"rgb(80, 116, 230)\",\n        strokeDasharray: \"4 4\",  // This creates a dashed line pattern,\n        strokeWidth: 2 \n    })\n  ]\n})\n\n\n\n\n\n\n\n\n\n:::"
  },
  {
    "objectID": "v9x/v900/whats-new/1-overview.html",
    "href": "v9x/v900/whats-new/1-overview.html",
    "title": "Overview",
    "section": "",
    "text": "The vast majority of the changes made to the Wasatch Front Travel Demand Model (WF TDM) in version 9 represent refinements to prepare the model for use in developing MAG and WFRC’s 2023 Regional Transportation Plans. These refinements include:\n\nUpdates to the traffic analysis zones\nUpdates to the socioeconomic county control totals and TAZ-level forecasts\nUpdates to the highway and transit input files to reflect the 2023-2050 Regional Transportation Plan (RTP) and 2023-2028 Transportation Improvement Program (TIP) projects\nUpdates to the parameters and input files to reflect the model’s new 2019 base year\n\nOther changes made to the WF TDM were to improve the model’s capability and to perform regular maintenance of the model’s code base and processing."
  },
  {
    "objectID": "v9x/v900/whats-new/2-taz.html",
    "href": "v9x/v900/whats-new/2-taz.html",
    "title": "Traffic Analysis Zone Updates",
    "section": "",
    "text": "Major changes were made to the version 9 Traffic Analysis Zones (TAZ), including:\n\nInternal TAZ were split to increase the model’s geographic resolution.\nTAZ boundaries were modified to better align with underlying land uses and planning boundaries.\nThe geographic coverage area was expanded to encompass the entire county for Davis, Salt Lake, and Utah counties. Weber County was expanded up to the ridgeline of the east canyon/mountain areas of the WFRC planning domain but does not include the Ogden Valley area. Box Elder was expanded to encompass up to the ridgeline of the east canyon/mountain areas of the WFRC planning domain.\n\nFigure 1 and Figure 2 show the expanded geographic area and the difference in TAZ boundaries between version 9 and version 8.\n\n\n\nFigure 1: Version 9 Expanded Geographic Area\n\n\n\n\nCode\nmapTaz = {\n\n  let container = DOM.element('div', { style: `width:${width}px;height:${width/1.6}px` });\n  yield container;\n  \n  let map = L.map(container).setView([40.7608, -111.8910], 8.25);\n\n  let greyLayer = L.tileLayer('https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png', {\n    attribution: '&copy; &lt;a href=\"https://www.openstreetmap.org/copyright\"&gt;OpenStreetMap&lt;/a&gt; contributors'\n  }).addTo(map);\n\n  let lcolors = ['#0000FF'    ,'red'   ]\n  let llabels = ['v8.3.2 TAZ' ,'v9.0.0 TAZ'];\n\n  let lyrTAZOld = L.geoJson(geojsonTazOld, { weight: 3.00, color: lcolors[0], fillOpacity: 0}).addTo(map);\n  let lyrTAZNew = L.geoJson(geojsonTazNew, { weight: 1.50, color: lcolors[1], fillOpacity: 0}).addTo(map);\n\n  var legend = L.control({position: 'bottomleft'});\n    legend.onAdd = function (map) {\n      var div = L.DomUtil.create('div', 'legend');\n      div.innerHTML = '';\n      for (var i = 0; i &lt; llabels.length; i++) {\n        div.innerHTML += '&lt;i style=\"background:' + lcolors[i] + '\"&gt;&nbsp;&lt;/i&gt; ' + llabels[i] + '&lt;br/&gt;';\n      }\n\n      // Add CSS style for the background color\n      div.style.backgroundColor = 'lightgray';\n      div.style.padding = '10px';\n      \n      return div;\n    };\n    legend.addTo(map);\n}\n\n\n\n\n\n\nFigure 2: TAZ Geography Comparison Map\n\n\n\nThe changes resulted in the addition of 688 internal TAZ. The new internal TAZID range for each county was updated to account for the new zone configuration. A buffer of 54 zones was inserted after the last internal TAZ to allow for future internal TAZ expansion within the max used-zone value.\n\n\n\n\n\n\n\n\n\nTable 1: Internal TAZ Comparison\n\n\n\n\n\n\n\n\n\n\nCounty\nv9 Count\nv8 Count\nChange\nv9 TAZID Range\nv8 TAZID Range\n\n\n\n\nBox Elder\n153\n135\n18\n-152\n-134\n\n\nWeber\n428\n280\n148\n-427\n-279\n\n\nDavis\n324\n231\n93\n-323\n-230\n\n\nSalt Lake\n1311\n1127\n184\n-1310\n-1126\n\n\nUtah\n1330\n1085\n245\n-1329\n-1084\n\n\nTotal\n3546\n2858\n688\n-3545\n-2872\n\n\nUnused Zones\n54\n0\n54\n-53\nNA\n\n\n\n\n\n\n\n\nThe locations and numbering of the external TAZ gateways were revised to reflect the changes of the expanded internal TAZ coverage area and new internal numbering. The external TAZ numbering was grouped and placed after the internal TAZ and a unused zone buffer. For reference, version 8 external TAZ were ordered by county and shuffled in the internal TAZ range, (e.g. Box Elder externals TAZ following after the Box Elder internal TAZ, Weber external TAZ following the Weber internal TAZ, etc.). The external TAZ changes resulted in the addition of 6 external TAZ. (See Changes to External Location and Numbering for more information on external zones.)\n\n\n\n\n\n\n\n\n\nTable 2: External TAZ Comparison\n\n\n\n\n\n\n\n\n\n\nCounty\nv9 Count\nv8 Count\nChange\nv9 TAZID Range\nv8 TAZID Range\n\n\n\n\nBox Elder\n6\n5\n1\n3601-3606\n136-140\n\n\nWeber\n3\n3\n0\n3607-3609\n421-423\n\n\nDavis\n0\n0\n0\n\n\n\n\nSalt Lake\n6\n7\n-1\n3610-3615\n1782-1788\n\n\nUtah\n14\n8\n6\n3616-3629\n2874-2881\n\n\nTotal\n29\n23\n6\n3601-3629\n137-140, 421-423, 1782-1788, 2874-2881\n\n\n\n\n\n\n\n\nIn addition, the following changes were made to the TAZ shapefile:\n\nThe TAZ UTM NAD83 projection was fixed to use the standard for Utah rather than the ArcGIS default.\nAll TAZ boundaries were realigned to county boundaries from the most recent UGRC county dataset.\nAll internal TAZ topology was checked and corrected to exclude slivers, gaps, and overlaps.\nExternal zone polygons (i.e. the arbitrary polygons representing the external zones) were removed in the TAZ shapefile.\nPRKCSTPERM and PRKCSTTEMP fields were updated (see Parking Costs for additional information)\nLarge, medium, and small district definitions were updated. There are now 26 large districts, 73 medium districts, and 110 small districts. Medium districts still nest within large districts. Small districts were defined based on city area definitions and do not nest within medium districts. All districts were renamed and no longer include commas in the text string.\nCITY, COUNTY, and EXTERNAL fields were removed. All model scripts referencing CITY and COUNTY were updated to use CITY_FIPS and CO_FIPS.\nA REMM field was added to indicate which TAZs are included in the Real Estate Market Model (REMM), as shown in Figure 3. A value of 1 indicates that the TAZ is part of the REMM area.\n\n\n\nCode\nL = require('leaflet@1.2.0')\nhtml`&lt;link href='${resolve('leaflet@1.2.0/dist/leaflet.css')}' rel='stylesheet' /&gt;`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ngeojsonTazOld    = FileAttachment(\"data/tazOld.geojson\"   ).json()\ngeojsonTazNew    = FileAttachment(\"data/tazNew.geojson\"   ).json()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nmapTazRemmSpace = {\n\n  let container = DOM.element('div', { style: `width:${width}px;height:${width/1.6}px` });\n  yield container;\n  \n  let map = L.map(container).setView([40.7608, -111.8910], 8.25);\n\n  let greyLayer = L.tileLayer('https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png', {\n    attribution: '&copy; &lt;a href=\"https://www.openstreetmap.org/copyright\"&gt;OpenStreetMap&lt;/a&gt; contributors'\n  }).addTo(map);\n\n  let remmColors = ['#00887F'   ,'#BD0026'       ]\n  let remmLabels = ['REMM Space','Non-REMM Space'];\n  \n  let lyrTAZNew = L.geoJson(geojsonTazNew, {\n                            style: function(feature) {\n                              var d = feature.properties.REMM;\n                              return d==1 ? {color:remmColors[0], weight:1, opacity:0.95} :\n                                     d==0 ? {color:remmColors[1], weight:1, opacity:0.95} : \n                                            {color:    '#000000', weight:1, opacity:0.95} ;\n                            }\n  }).addTo(map);\n  \n  var legend = L.control({position: 'bottomleft'});\n  legend.onAdd = function (map) {\n    var div = L.DomUtil.create('div', 'legend');\n    div.innerHTML = '';\n    for (var i = 0; i &lt; remmLabels.length; i++) {\n      div.innerHTML += '&lt;i style=\"background:' + remmColors[i] + '\"&gt;&nbsp;&lt;/i&gt; ' + remmLabels[i] + '&lt;br/&gt;';\n    }\n\n    // Add CSS style for the background color\n    div.style.backgroundColor = 'lightgray';\n    div.style.padding = '10px';\n    \n    return div;\n  };\n  legend.addTo(map);\n}\n\n\n\n\n\n\nFigure 3: TAZ REMM Space\n\n\n\n\n\nThe following TAZ-related parameters, located in the0_GeneralParameters.block file, were changed to reflect the version 9 TAZ updates. For comparison purposes, version 8 parameters are also presented.\nUsed Zones\n\n\n\n\n\n\n\n\n\nTable 3: Updated Used Zones\n\n\n\n\n\n\n\n\nParameter\nv9 Value\nv8 Value\nNotes\n\n\n\n\nUsedZones\n3629\n2881\nHighest TAZ number used by model\n\n\n\n\n\n\n\n\nTAZ Ranges\n\n\n\n\n\n\n\n\n\nTable 4: Renumbered TAZ Ranges\n\n\n\n\n\n\n\n\nParameter\nv9 Value\nv8 Value\nNotes\n\n\n\n\nUsedZones\n3629\n2881\nHighest TAZ number used by model\n\n\nBoxElderRange\n1-153\n1-140\nBox Elder County Range\n\n\nWeberRange\n154-581\n141-423\nWeber County Range\n\n\nDavisRange\n582-905\n424-654\nDavis County Range\n\n\nSLRange\n906-2216\n655-1788\nSalt Lake County Range\n\n\nUtahRange\n2217-3546\n1789-2881\nUtah County Range\n\n\nDummyzones\n3547-3600\n2882-3400 (note these are outside of UsedZones)\nPlaceholder for future TAZ splits\n\n\nExternalzones\n3601-3629\n136-140, 421-423, 1782-1788, 2874-2881\nExternal zones\n\n\nNorthBC\n3604-3606\n138, 139, 140\nNorth Brigham City external zones\n\n\n\n\n\n\n\n\nCollege Zones\nWhere noted, several colleges were effectively removed from the model in version 9. References to these schools are still in the code base but enrollment was set to zero.\n\n\n\n\n\n\n\n\n\nTable 5: Renumbered College Zones\n\n\n\n\n\n\n\n\n\nArea\nParameter\nv9 Value\nv8 Value\nNotes\n\n\n\n\nWFRC Colleges\nEnsign (was LDSBC)\n1029\n950\nEnsign College\n\n\n\nWestmin\n1263\n1150\nWestminster College\n\n\n\nUOFU_Main\n1051\n1075\nUniversity of Utah - Main\n\n\n\nUOFU_Med\n(removed)\n1076\nUniversity of Utah - Medical\n\n\n\nWSU_Main (was WSU_OGDEN)\n437\n383\nWeber State University - Main\n\n\n\nWSU_Davis\n693\n525\nWeber State University - Davis\n\n\n\nWSU_West\n(removed)\n290\nWeber State University - West\n\n\n\nSLCC_Main (was SLCC_TL)\n1580\n897\nSalt Lake Community College - Main\n\n\n\nSLCC_SC\n1231\n1126\nSalt Lake Community College - South City\n\n\n\nSLCC_JD\n1776\n1493\nSalt Lake Community College - Jordan\n\n\n\nSLCC_Mead\n(removed)\n1206\nSalt Lake Community College - Meadbrook\n\n\n\nSLCC_ML\n1886\n1516\nSalt Lake Community College - Miller\n\n\n\nSLCC_LB\n(removed)\n989\nSalt Lake Community College - Library\n\n\n\nSLCC_HL\n(removed)\n1294\nSalt Lake Community College - Highland\n\n\n\nSLCC_Airp\n(removed)\n746\nSalt Lake Community College - Airport\n\n\n\nSLCC_West\n(removed)\n745\nSalt Lake Community College - Westpointe\n\n\n\nSLCC_HM\n(removed)\n1607\nSalt Lake Community College - Herriman\n\n\nMAG Colleges\nBYU\n2939\n2384\nBrigham Young University - Main\n\n\n\nUVU_Main\n2848\n2326\nUtah Valley University - Main\n\n\n\nUVU_Geneva\n(removed)\n2280\nUtah Valley University - Geneva\n\n\n\nUVU_Lehi (was UVU_THANKP)\n2606\n2099\nUtah Valley University - Lehi\n\n\n\nUVU_Vine\n2809\n2259\nUtah Valley University - Vineyard\n\n\n\nUVU_Payson\n3336\n2690\nUtah Valley University - Payson\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTable 6: Updated Colleges (Range)\n\n\n\n\n\n\n\nParameter\nv9 Value\nv8 Value\n\n\n\n\ncolleges\n437, 521, 693, 959, 979, 1007, 1029, 1051, 1085, 1231, 1263, 1491, 1525, 1580, 1776, 1886, 2031, 2606, 2809, 2848, 2882, 2939, 3336\n290, 383, 525, 897, 950, 989, 1075, 1076, 1126, 1150, 1294, 1493, 1516, 1607, 2099, 2259, 2280, 2326, 2384, 2690\n\n\n\n\n\n\n\n\nZones with Off-line (Exogenous) Trip Tables\n\n\n\n\n\n\n\n\n\nTable 7: Renumbered Off-line Trip Table Zones\n\n\nParameter\nv9 Value\nv8 Value\n\n\n\n\nLagoon\n781\n562\n\n\nAirport\n965\n742\n\n\n\n\n\n\n\n\nSpecial Generator Zones\n\n\n\n\n\n\n\n\n\nTable 8: Renumbered Special Generator Zones\n\n\nParameter\nv9 Value\nv8 Value\n\n\n\n\nTempleSquare\n1035\n966\n\n\nSLC_Library\n1147\n1015\n\n\n\n\n\n\n\n\nRemoved Parameters\nThe following TAZ parameters were removed from the general parameters file as they were not being used in the WF TDM:\n\nRegionRange\nWFRCRange\nMAGRange\n\n\n\n\nThe following changes were made in the 1_Inputs\\1_TAZ folder:\n\nAdded _Source folder which includes the following shapefile datasets:\n\nCities shapefile\nCounties shapefile\nEnvironmental constraints shapefile (just the Wasatch Front model space)\nPrevious version 8.3.2 TAZ\n\nAdded _ViewTAZDistricts folder containing an ArcGIS Pro project with predefined symbology for viewing TAZ and district shapefiles.\nIn the Districts folder:\n\nUpdated the large, medium, and small district shapefiles based on the new TAZ delineations and district definitions.\nAdded new shapefiles representing the Wasatch Front subarea, the REMM area, and super districts."
  },
  {
    "objectID": "v9x/v900/whats-new/2-taz.html#changes-to-taz-geometry-and-attributes",
    "href": "v9x/v900/whats-new/2-taz.html#changes-to-taz-geometry-and-attributes",
    "title": "Traffic Analysis Zone Updates",
    "section": "",
    "text": "Major changes were made to the version 9 Traffic Analysis Zones (TAZ), including:\n\nInternal TAZ were split to increase the model’s geographic resolution.\nTAZ boundaries were modified to better align with underlying land uses and planning boundaries.\nThe geographic coverage area was expanded to encompass the entire county for Davis, Salt Lake, and Utah counties. Weber County was expanded up to the ridgeline of the east canyon/mountain areas of the WFRC planning domain but does not include the Ogden Valley area. Box Elder was expanded to encompass up to the ridgeline of the east canyon/mountain areas of the WFRC planning domain.\n\nFigure 1 and Figure 2 show the expanded geographic area and the difference in TAZ boundaries between version 9 and version 8.\n\n\n\nFigure 1: Version 9 Expanded Geographic Area\n\n\n\n\nCode\nmapTaz = {\n\n  let container = DOM.element('div', { style: `width:${width}px;height:${width/1.6}px` });\n  yield container;\n  \n  let map = L.map(container).setView([40.7608, -111.8910], 8.25);\n\n  let greyLayer = L.tileLayer('https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png', {\n    attribution: '&copy; &lt;a href=\"https://www.openstreetmap.org/copyright\"&gt;OpenStreetMap&lt;/a&gt; contributors'\n  }).addTo(map);\n\n  let lcolors = ['#0000FF'    ,'red'   ]\n  let llabels = ['v8.3.2 TAZ' ,'v9.0.0 TAZ'];\n\n  let lyrTAZOld = L.geoJson(geojsonTazOld, { weight: 3.00, color: lcolors[0], fillOpacity: 0}).addTo(map);\n  let lyrTAZNew = L.geoJson(geojsonTazNew, { weight: 1.50, color: lcolors[1], fillOpacity: 0}).addTo(map);\n\n  var legend = L.control({position: 'bottomleft'});\n    legend.onAdd = function (map) {\n      var div = L.DomUtil.create('div', 'legend');\n      div.innerHTML = '';\n      for (var i = 0; i &lt; llabels.length; i++) {\n        div.innerHTML += '&lt;i style=\"background:' + lcolors[i] + '\"&gt;&nbsp;&lt;/i&gt; ' + llabels[i] + '&lt;br/&gt;';\n      }\n\n      // Add CSS style for the background color\n      div.style.backgroundColor = 'lightgray';\n      div.style.padding = '10px';\n      \n      return div;\n    };\n    legend.addTo(map);\n}\n\n\n\n\n\n\nFigure 2: TAZ Geography Comparison Map\n\n\n\nThe changes resulted in the addition of 688 internal TAZ. The new internal TAZID range for each county was updated to account for the new zone configuration. A buffer of 54 zones was inserted after the last internal TAZ to allow for future internal TAZ expansion within the max used-zone value.\n\n\n\n\n\n\n\n\n\nTable 1: Internal TAZ Comparison\n\n\n\n\n\n\n\n\n\n\nCounty\nv9 Count\nv8 Count\nChange\nv9 TAZID Range\nv8 TAZID Range\n\n\n\n\nBox Elder\n153\n135\n18\n-152\n-134\n\n\nWeber\n428\n280\n148\n-427\n-279\n\n\nDavis\n324\n231\n93\n-323\n-230\n\n\nSalt Lake\n1311\n1127\n184\n-1310\n-1126\n\n\nUtah\n1330\n1085\n245\n-1329\n-1084\n\n\nTotal\n3546\n2858\n688\n-3545\n-2872\n\n\nUnused Zones\n54\n0\n54\n-53\nNA\n\n\n\n\n\n\n\n\nThe locations and numbering of the external TAZ gateways were revised to reflect the changes of the expanded internal TAZ coverage area and new internal numbering. The external TAZ numbering was grouped and placed after the internal TAZ and a unused zone buffer. For reference, version 8 external TAZ were ordered by county and shuffled in the internal TAZ range, (e.g. Box Elder externals TAZ following after the Box Elder internal TAZ, Weber external TAZ following the Weber internal TAZ, etc.). The external TAZ changes resulted in the addition of 6 external TAZ. (See Changes to External Location and Numbering for more information on external zones.)\n\n\n\n\n\n\n\n\n\nTable 2: External TAZ Comparison\n\n\n\n\n\n\n\n\n\n\nCounty\nv9 Count\nv8 Count\nChange\nv9 TAZID Range\nv8 TAZID Range\n\n\n\n\nBox Elder\n6\n5\n1\n3601-3606\n136-140\n\n\nWeber\n3\n3\n0\n3607-3609\n421-423\n\n\nDavis\n0\n0\n0\n\n\n\n\nSalt Lake\n6\n7\n-1\n3610-3615\n1782-1788\n\n\nUtah\n14\n8\n6\n3616-3629\n2874-2881\n\n\nTotal\n29\n23\n6\n3601-3629\n137-140, 421-423, 1782-1788, 2874-2881\n\n\n\n\n\n\n\n\nIn addition, the following changes were made to the TAZ shapefile:\n\nThe TAZ UTM NAD83 projection was fixed to use the standard for Utah rather than the ArcGIS default.\nAll TAZ boundaries were realigned to county boundaries from the most recent UGRC county dataset.\nAll internal TAZ topology was checked and corrected to exclude slivers, gaps, and overlaps.\nExternal zone polygons (i.e. the arbitrary polygons representing the external zones) were removed in the TAZ shapefile.\nPRKCSTPERM and PRKCSTTEMP fields were updated (see Parking Costs for additional information)\nLarge, medium, and small district definitions were updated. There are now 26 large districts, 73 medium districts, and 110 small districts. Medium districts still nest within large districts. Small districts were defined based on city area definitions and do not nest within medium districts. All districts were renamed and no longer include commas in the text string.\nCITY, COUNTY, and EXTERNAL fields were removed. All model scripts referencing CITY and COUNTY were updated to use CITY_FIPS and CO_FIPS.\nA REMM field was added to indicate which TAZs are included in the Real Estate Market Model (REMM), as shown in Figure 3. A value of 1 indicates that the TAZ is part of the REMM area.\n\n\n\nCode\nL = require('leaflet@1.2.0')\nhtml`&lt;link href='${resolve('leaflet@1.2.0/dist/leaflet.css')}' rel='stylesheet' /&gt;`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ngeojsonTazOld    = FileAttachment(\"data/tazOld.geojson\"   ).json()\ngeojsonTazNew    = FileAttachment(\"data/tazNew.geojson\"   ).json()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nmapTazRemmSpace = {\n\n  let container = DOM.element('div', { style: `width:${width}px;height:${width/1.6}px` });\n  yield container;\n  \n  let map = L.map(container).setView([40.7608, -111.8910], 8.25);\n\n  let greyLayer = L.tileLayer('https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png', {\n    attribution: '&copy; &lt;a href=\"https://www.openstreetmap.org/copyright\"&gt;OpenStreetMap&lt;/a&gt; contributors'\n  }).addTo(map);\n\n  let remmColors = ['#00887F'   ,'#BD0026'       ]\n  let remmLabels = ['REMM Space','Non-REMM Space'];\n  \n  let lyrTAZNew = L.geoJson(geojsonTazNew, {\n                            style: function(feature) {\n                              var d = feature.properties.REMM;\n                              return d==1 ? {color:remmColors[0], weight:1, opacity:0.95} :\n                                     d==0 ? {color:remmColors[1], weight:1, opacity:0.95} : \n                                            {color:    '#000000', weight:1, opacity:0.95} ;\n                            }\n  }).addTo(map);\n  \n  var legend = L.control({position: 'bottomleft'});\n  legend.onAdd = function (map) {\n    var div = L.DomUtil.create('div', 'legend');\n    div.innerHTML = '';\n    for (var i = 0; i &lt; remmLabels.length; i++) {\n      div.innerHTML += '&lt;i style=\"background:' + remmColors[i] + '\"&gt;&nbsp;&lt;/i&gt; ' + remmLabels[i] + '&lt;br/&gt;';\n    }\n\n    // Add CSS style for the background color\n    div.style.backgroundColor = 'lightgray';\n    div.style.padding = '10px';\n    \n    return div;\n  };\n  legend.addTo(map);\n}\n\n\n\n\n\n\nFigure 3: TAZ REMM Space\n\n\n\n\n\nThe following TAZ-related parameters, located in the0_GeneralParameters.block file, were changed to reflect the version 9 TAZ updates. For comparison purposes, version 8 parameters are also presented.\nUsed Zones\n\n\n\n\n\n\n\n\n\nTable 3: Updated Used Zones\n\n\n\n\n\n\n\n\nParameter\nv9 Value\nv8 Value\nNotes\n\n\n\n\nUsedZones\n3629\n2881\nHighest TAZ number used by model\n\n\n\n\n\n\n\n\nTAZ Ranges\n\n\n\n\n\n\n\n\n\nTable 4: Renumbered TAZ Ranges\n\n\n\n\n\n\n\n\nParameter\nv9 Value\nv8 Value\nNotes\n\n\n\n\nUsedZones\n3629\n2881\nHighest TAZ number used by model\n\n\nBoxElderRange\n1-153\n1-140\nBox Elder County Range\n\n\nWeberRange\n154-581\n141-423\nWeber County Range\n\n\nDavisRange\n582-905\n424-654\nDavis County Range\n\n\nSLRange\n906-2216\n655-1788\nSalt Lake County Range\n\n\nUtahRange\n2217-3546\n1789-2881\nUtah County Range\n\n\nDummyzones\n3547-3600\n2882-3400 (note these are outside of UsedZones)\nPlaceholder for future TAZ splits\n\n\nExternalzones\n3601-3629\n136-140, 421-423, 1782-1788, 2874-2881\nExternal zones\n\n\nNorthBC\n3604-3606\n138, 139, 140\nNorth Brigham City external zones\n\n\n\n\n\n\n\n\nCollege Zones\nWhere noted, several colleges were effectively removed from the model in version 9. References to these schools are still in the code base but enrollment was set to zero.\n\n\n\n\n\n\n\n\n\nTable 5: Renumbered College Zones\n\n\n\n\n\n\n\n\n\nArea\nParameter\nv9 Value\nv8 Value\nNotes\n\n\n\n\nWFRC Colleges\nEnsign (was LDSBC)\n1029\n950\nEnsign College\n\n\n\nWestmin\n1263\n1150\nWestminster College\n\n\n\nUOFU_Main\n1051\n1075\nUniversity of Utah - Main\n\n\n\nUOFU_Med\n(removed)\n1076\nUniversity of Utah - Medical\n\n\n\nWSU_Main (was WSU_OGDEN)\n437\n383\nWeber State University - Main\n\n\n\nWSU_Davis\n693\n525\nWeber State University - Davis\n\n\n\nWSU_West\n(removed)\n290\nWeber State University - West\n\n\n\nSLCC_Main (was SLCC_TL)\n1580\n897\nSalt Lake Community College - Main\n\n\n\nSLCC_SC\n1231\n1126\nSalt Lake Community College - South City\n\n\n\nSLCC_JD\n1776\n1493\nSalt Lake Community College - Jordan\n\n\n\nSLCC_Mead\n(removed)\n1206\nSalt Lake Community College - Meadbrook\n\n\n\nSLCC_ML\n1886\n1516\nSalt Lake Community College - Miller\n\n\n\nSLCC_LB\n(removed)\n989\nSalt Lake Community College - Library\n\n\n\nSLCC_HL\n(removed)\n1294\nSalt Lake Community College - Highland\n\n\n\nSLCC_Airp\n(removed)\n746\nSalt Lake Community College - Airport\n\n\n\nSLCC_West\n(removed)\n745\nSalt Lake Community College - Westpointe\n\n\n\nSLCC_HM\n(removed)\n1607\nSalt Lake Community College - Herriman\n\n\nMAG Colleges\nBYU\n2939\n2384\nBrigham Young University - Main\n\n\n\nUVU_Main\n2848\n2326\nUtah Valley University - Main\n\n\n\nUVU_Geneva\n(removed)\n2280\nUtah Valley University - Geneva\n\n\n\nUVU_Lehi (was UVU_THANKP)\n2606\n2099\nUtah Valley University - Lehi\n\n\n\nUVU_Vine\n2809\n2259\nUtah Valley University - Vineyard\n\n\n\nUVU_Payson\n3336\n2690\nUtah Valley University - Payson\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTable 6: Updated Colleges (Range)\n\n\n\n\n\n\n\nParameter\nv9 Value\nv8 Value\n\n\n\n\ncolleges\n437, 521, 693, 959, 979, 1007, 1029, 1051, 1085, 1231, 1263, 1491, 1525, 1580, 1776, 1886, 2031, 2606, 2809, 2848, 2882, 2939, 3336\n290, 383, 525, 897, 950, 989, 1075, 1076, 1126, 1150, 1294, 1493, 1516, 1607, 2099, 2259, 2280, 2326, 2384, 2690\n\n\n\n\n\n\n\n\nZones with Off-line (Exogenous) Trip Tables\n\n\n\n\n\n\n\n\n\nTable 7: Renumbered Off-line Trip Table Zones\n\n\nParameter\nv9 Value\nv8 Value\n\n\n\n\nLagoon\n781\n562\n\n\nAirport\n965\n742\n\n\n\n\n\n\n\n\nSpecial Generator Zones\n\n\n\n\n\n\n\n\n\nTable 8: Renumbered Special Generator Zones\n\n\nParameter\nv9 Value\nv8 Value\n\n\n\n\nTempleSquare\n1035\n966\n\n\nSLC_Library\n1147\n1015\n\n\n\n\n\n\n\n\nRemoved Parameters\nThe following TAZ parameters were removed from the general parameters file as they were not being used in the WF TDM:\n\nRegionRange\nWFRCRange\nMAGRange\n\n\n\n\nThe following changes were made in the 1_Inputs\\1_TAZ folder:\n\nAdded _Source folder which includes the following shapefile datasets:\n\nCities shapefile\nCounties shapefile\nEnvironmental constraints shapefile (just the Wasatch Front model space)\nPrevious version 8.3.2 TAZ\n\nAdded _ViewTAZDistricts folder containing an ArcGIS Pro project with predefined symbology for viewing TAZ and district shapefiles.\nIn the Districts folder:\n\nUpdated the large, medium, and small district shapefiles based on the new TAZ delineations and district definitions.\nAdded new shapefiles representing the Wasatch Front subarea, the REMM area, and super districts."
  },
  {
    "objectID": "v9x/v900/whats-new/3-sedata.html",
    "href": "v9x/v900/whats-new/3-sedata.html",
    "title": "Socioeconomic Data Updates",
    "section": "",
    "text": "The WF TDM version 9’s socioeconomic county control totals were updated based on the Gardner Policy Institute (GPI) 2021 release of the state’s residential and employment county forecasts. Significant changes were made relative to the 2017 release. A comparison between version 9 and version 8 of the model’s socioeconomic control totals can be found in Figure 1 and Figure 2.\n\n\n\n\n\n\n\nCode\nfaControlTotals = FileAttachment(\"data/controltotal.csv\").csv({ typed: true });\nfaCounties      = FileAttachment(\"data/counties.csv\"    ).csv({ typed: true });\n\ncats = new Map([//['Total Population'               , 'TOTPOP'    ],\n                //['Group Quarter Population'       , 'GQ_Pop'    ],\n                ['Population'                     , 'HH_Pop'    ],\n                ['Households'                     , 'HH'        ],\n                //['Household Size'                 , 'HH_Size'   ],\n                //['Population 0-17'                , 'POP_00_17' ],\n                //['Population 18-64'               , 'POP_18_64' ],\n                //['Population 65+'                 , 'POP_65P'   ],\n                ['All Employment'                 , 'ALLEMP'    ],\n                ['Retail Employment'              , 'RETL'      ],\n                ['Food Employment'                , 'FOOD'      ],\n                ['Manufacturing Employment'       , 'MANU'      ],\n                ['Wholesale Employment'           , 'WSLE'      ],\n                ['Office Employment'              , 'OFFI'      ],\n                ['Government/Education Employment', 'GVED'      ],\n                ['Health Employment'              , 'HLTH'      ],\n                ['Other Employment'               , 'OTHR'      ],\n                //['Agriculture Employment'         , 'AGRI'      ],\n                //['Mining Employment'              , 'MING'      ],\n                //['Construction Employment'        , 'CONS'      ],\n                ['Home-Based Job Employment'      , 'HBJ'       ]\n                //['Jobs per Household'             , 'Job_HH'    ],\n                //['Working Population per Job'     , 'WrkPop_Job']\n                ])\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nfilteredControlTotals = faControlTotals.filter(function(ct) {\n  return selectCounty   == ct.CO_NAME &&\n         selectCategory == ct.Category;\n});\nviewof selectCategory = Inputs.select(cats, {value: 'HH_Pop', label: 'Category: '});\n\nviewof metric = Inputs.radio(new Map([[\"Difference\", \"Difference\"], [\"Percent Difference\", \"DifferencePct\"]]), {value: \"Difference\", label: \"Display:\"})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndataCTDiff50 = transpose(diffConTot2050long)\nfiltered_dataCTDiff50 = dataCTDiff50.filter(function(dataL) {\n    return selectCategory == dataL.Category  &&\n           metric == dataL.View;\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nimport {DivergingBarChart} from \"@d3/diverging-bar-chart\"\n\nfunction getXFormat() {\n  if (metric === \"DifferencePct\") {\n    return \"+%\";\n  } else if (selectCategory === 'HH_Size' && metric === \"Difference\") {\n    return \".2f\";\n  } else {\n    return \"+,d\";\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nchart3 = DivergingBarChart(filtered_dataCTDiff50, {\n    x: d =&gt; d.ViewValue,\n    y: d =&gt; d.CO_NAME,\n    xFormat: getXFormat(),\n    xLabel: \"2050 Difference\",\n    aspectRatio: 0.5,\n    colors: d3.schemeRdBu[3],\n    yDomain: ['Weber','Davis','Salt Lake','Utah', 'Wasatch Front']\n})\n\n\n\n\n\n\nFigure 1: 2050 Differences in Control Totals for Selected Category (v9.0 vs v8.3.2)\n\n\n\n\n\nCode\nviewof selectCounty = Inputs.select(new Map(['Wasatch Front', 'Weber', 'Davis', 'Salt Lake', 'Utah'].map(county =&gt; [county, county])), {value: 'Wasatch Front', label: 'County: '});\n\n// FILTER DATA\nfilteredCTPlot = faControlTotals.filter(function(ct) {\n  return selectCounty   == ct.CO_NAME; //&&\n         //selectCategoryPlot == ct.Category;\n});\nmaxY1 = Math.max(...filteredCTPlot.map(item =&gt; item.ControlTotal));\n\n// FILTER DATA for employment control totals\nfilteredCTPlot2 = faControlTotals.filter(function(ct) {\n  return selectCounty   == ct.CO_NAME &&\n         [\"Typical\", \"Retail\", \"Industrial\", \"Other\"].includes(ct.Category);\n});\nmaxY2 = Math.max(...filteredCTPlot2.map(item =&gt; item.ControlTotal));\n\n// FILTER DATA for control totals ratios\nfilteredCTPlot3 = faControlTotals.filter(function(ct) {\n  return selectCounty   == ct.CO_NAME &&\n         [\"HH_Size\", \"Job_HH\", \"WrkPop_Job\"].includes(ct.Category);\n});\nmaxY3 = Math.max(...filteredCTPlot3.map(item =&gt; item.ControlTotal));\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nhhPopData8 = faControlTotals.filter(function(ct) { return selectCounty == ct.CO_NAME && \"HH_Pop\" == ct.Category && \"v8.3.2\" == ct.ModelVersion  && ct.YEAR &gt; 2020;})\nhhPopData9 = faControlTotals.filter(function(ct) { return selectCounty == ct.CO_NAME && \"HH_Pop\" == ct.Category && \"v9.0.0\" == ct.ModelVersion;})\nhhData8 = faControlTotals.filter(function(ct) { return selectCounty == ct.CO_NAME && \"HH\" == ct.Category && 'v8.3.2' == ct.ModelVersion  && ct.YEAR &gt; 2020;})\nhhData9 = faControlTotals.filter(function(ct) { return selectCounty == ct.CO_NAME && \"HH\" == ct.Category && 'v9.0.0' == ct.ModelVersion;})\n\n// data for the employment control totals\ntypicalData8 = faControlTotals.filter(function(ct) { return selectCounty == ct.CO_NAME && \"Typical\" == ct.Category && \"v8.3.2\" == ct.ModelVersion  && ct.YEAR &gt; 2020;})\ntypicalData9 = faControlTotals.filter(function(ct) { return selectCounty == ct.CO_NAME && \"Typical\" == ct.Category && \"v9.0.0\" == ct.ModelVersion;})\nretailData8 = faControlTotals.filter(function(ct) { return selectCounty == ct.CO_NAME && \"Retail\" == ct.Category && \"v8.3.2\" == ct.ModelVersion  && ct.YEAR &gt; 2020;})\nretailData9 = faControlTotals.filter(function(ct) { return selectCounty == ct.CO_NAME && \"Retail\" == ct.Category && \"v9.0.0\" == ct.ModelVersion;})\nindustrialData8 = faControlTotals.filter(function(ct) { return selectCounty == ct.CO_NAME && \"Industrial\" == ct.Category && \"v8.3.2\" == ct.ModelVersion  && ct.YEAR &gt; 2020;})\nindustrialData9 = faControlTotals.filter(function(ct) { return selectCounty == ct.CO_NAME && \"Industrial\" == ct.Category && \"v9.0.0\" == ct.ModelVersion;})\notherData8 = faControlTotals.filter(function(ct) { return selectCounty == ct.CO_NAME && \"Other\" == ct.Category && \"v8.3.2\" == ct.ModelVersion  && ct.YEAR &gt; 2020;})\notherData9 = faControlTotals.filter(function(ct) { return selectCounty == ct.CO_NAME && \"Other\" == ct.Category && \"v9.0.0\" == ct.ModelVersion;})\n\n// data for control total ratios\nhhsize8 = faControlTotals.filter(function(ct) { return selectCounty == ct.CO_NAME && \"HH_Size\" == ct.Category && \"v8.3.2\" == ct.ModelVersion  && ct.YEAR &gt; 2020;})\nhhsize9 = faControlTotals.filter(function(ct) { return selectCounty == ct.CO_NAME && \"HH_Size\" == ct.Category && \"v9.0.0\" == ct.ModelVersion;})\njobhh8 = faControlTotals.filter(function(ct) { return selectCounty == ct.CO_NAME && \"Job_HH\" == ct.Category && \"v8.3.2\" == ct.ModelVersion  && ct.YEAR &gt; 2020;})\njobhh9 = faControlTotals.filter(function(ct) { return selectCounty == ct.CO_NAME && \"Job_HH\" == ct.Category && \"v9.0.0\" == ct.ModelVersion;})\nwrkpop8 = faControlTotals.filter(function(ct) { return selectCounty == ct.CO_NAME && \"WrkPop_Job\" == ct.Category && \"v8.3.2\" == ct.ModelVersion  && ct.YEAR &gt; 2020;})\nwrkpop9 = faControlTotals.filter(function(ct) { return selectCounty == ct.CO_NAME && \"WrkPop_Job\" == ct.Category && \"v9.0.0\" == ct.ModelVersion;})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nPlot.plot({\n  grid: true,\n  aspectRatio: 0.5,\n  x: {label: 'Year', tickFormat: d =&gt; d},\n  y: {label: 'Control Total', domain: [0, maxY1]},\n  marginRight:140,\n  marginLeft: 140,\n  color: { type: \"categorical\", legend: true, legendStyle: { fontSize: 24 } },\n  style: {\n    fontSize: 24\n  },\n  marginTop: 60,\n  marginBottom: 60,\n  height: 1300,\n  marks: [\n    Plot.line(\n      hhPopData8, {x: 'YEAR', y: 'ControlTotal', stroke: '#5b859e', strokeWidth: 3, strokeDasharray: '5,5'}),\n    Plot.line(\n      hhPopData9, {x: 'YEAR', y: 'ControlTotal', stroke: '#1e395f', strokeWidth: 3, text: ['yo momma']}),\n    Plot.text(\n      hhPopData9, Plot.selectLast({x: \"YEAR\", y: \"ControlTotal\", text: \"Category\", textAnchor: \"start\", dx: 3})),\n    \n    Plot.line(\n      hhData8, {x: 'YEAR', y: 'ControlTotal', stroke: '#75884b',strokeWidth: 3,strokeDasharray: '5,5'}),\n    Plot.line(\n      hhData9, {x: 'YEAR', y: 'ControlTotal', stroke: '#1e5a46',strokeWidth: 3}),\n    Plot.text(\n      hhData9, Plot.selectLast({x: \"YEAR\", y: \"ControlTotal\", text: \"Category\", textAnchor: \"start\", dx: 3})),\n    \n    Plot.frame({strokeOpacity: 0.2}),\n    [\n      Plot.text([`\\n   ——   Current Projection \\n\\n   —  — Previous Projection`], {frameAnchor: \"top-left\", fontSize: 24})\n  ]]\n})\nPlot.plot({\n  grid: true,\n  aspectRatio: 0.5,\n  x: {label: 'Year', tickFormat: d =&gt; d},\n  y: {label: 'Control Total', domain: [0, maxY2]},\n  marginRight:140,\n  marginLeft: 140,\n  color: { type: \"categorical\", legend: true, legendStyle: { fontSize: 24 } },\n  style: {\n    fontSize: 24\n  },\n  marginTop: 60,\n  marginBottom: 60,\n  height: 1300,\n  marks: [\n    Plot.line(\n      typicalData8, {x: 'YEAR', y: 'ControlTotal', stroke: '#FF6666', strokeWidth: 3, strokeDasharray: '5,5'}),\n    Plot.line(\n      typicalData9, {x: 'YEAR', y: 'ControlTotal', stroke: '#FF0000', strokeWidth: 3}),\n    Plot.text(\n      typicalData9, Plot.selectLast({x: \"YEAR\", y: \"ControlTotal\", text: \"Category\", textAnchor: \"start\", dx: 3})),\n\n    Plot.line(\n      retailData8, {x: 'YEAR', y: 'ControlTotal', stroke: '#75884b',strokeWidth: 3,strokeDasharray: '5,5'}),\n    Plot.line(\n      retailData9, {x: 'YEAR', y: 'ControlTotal', stroke: '#1e5a46',strokeWidth: 3}),\n    Plot.text(\n      retailData9, Plot.selectLast({x: \"YEAR\", y: \"ControlTotal\", text: \"Category\", textAnchor: \"start\", dx: 3})),\n\n    Plot.line(\n      industrialData8, {x: 'YEAR', y: 'ControlTotal', stroke: '#A0A0A0', strokeWidth: 3, strokeDasharray: '5,5'}),\n    Plot.line(\n      industrialData9, {x: 'YEAR', y: 'ControlTotal', stroke: '#606060', strokeWidth: 3}),\n    Plot.text(\n      industrialData9, Plot.selectLast({x: \"YEAR\", y: \"ControlTotal\", text: \"Category\", textAnchor: \"start\", dx: 3})),\n\n    Plot.line(\n      otherData8, {x: 'YEAR', y: 'ControlTotal', stroke: '#5b859e',strokeWidth: 3,strokeDasharray: '5,5'}),\n    Plot.line(\n      otherData9, {x: 'YEAR', y: 'ControlTotal', stroke: '#1e395f',strokeWidth: 3}),\n    Plot.text(\n      otherData9, Plot.selectLast({x: \"YEAR\", y: \"ControlTotal\", text: \"Category\", textAnchor: \"start\", dx: 3})),\n\n    Plot.frame({strokeOpacity: 0.2})\n  ]\n})\nPlot.plot({\n  grid: true,\n  aspectRatio: 0.5,\n  x: {label: 'Year', tickFormat: d =&gt; d},\n  y: {label: 'Control Total', domain: [0, maxY3]},\n  marginRight:140,\n  marginLeft: 140,\n  color: { type: \"categorical\", legend: true, legendStyle: { fontSize: 24 } },\n  style: {\n    fontSize: 24\n  },\n  marginTop: 60,\n  marginBottom: 60,\n  height: 1300,\n  marks: [\n    Plot.line(\n      hhsize8, {x: 'YEAR', y: 'ControlTotal', stroke: '#5b859e', strokeWidth: 3, strokeDasharray: '5,5'}),\n    Plot.line(\n      hhsize9, {x: 'YEAR', y: 'ControlTotal', stroke: '#1e395f', strokeWidth: 3}),\n    Plot.text(\n      hhsize9, Plot.selectLast({x: \"YEAR\", y: \"ControlTotal\", text: \"Category\", textAnchor: \"start\", dx: 3})),\n\n    Plot.line(\n      jobhh8, {x: 'YEAR', y: 'ControlTotal', stroke: '#75884b',strokeWidth: 3,strokeDasharray: '5,5'}),\n    Plot.line(\n      jobhh9, {x: 'YEAR', y: 'ControlTotal', stroke: '#1e5a46',strokeWidth: 3}),\n    Plot.text(\n      jobhh9, Plot.selectLast({x: \"YEAR\", y: \"ControlTotal\", text: \"Category\", textAnchor: \"start\", dx: 3})),\n\n    Plot.line(\n      wrkpop8, {x: 'YEAR', y: 'ControlTotal', stroke: '#FFB266',strokeWidth: 3,strokeDasharray: '5,5'}),\n    Plot.line(\n      wrkpop9, {x: 'YEAR', y: 'ControlTotal', stroke: '#FF8000',strokeWidth: 3}),\n    Plot.text(\n      wrkpop9, Plot.selectLast({x: \"YEAR\", y: \"ControlTotal\", text: \"Category\", textAnchor: \"start\", dx: 3})),\n\n    Plot.frame({strokeOpacity: 0.2})\n  ]\n})\n\n\n\n\n\n\n\n\n\n(a) Residential Control Total\n\n\n\n\n\n\n\n(b) Employment Control Total\n\n\n\n\n\n\n\n(c) Control Total Ratios\n\n\n\nFigure 2: Control Total Trends for Selected County for Selected Category\n\n\n\nHousehold Population\nThe 2021 forecasted household population of the combined, 4-county Wasatch Front remained relatively consistent relative to the 2017 projection, with the exception of a slight decrease in forecasted population in the later part of the forecast (-0.7% in 2050). County population, however, is quite different in the 2021 forecast. By 2050:\n\nUtah County saw a significant decrease (-8.7%) in household population with approximately 120,000 fewer people.\nSalt Lake county saw a moderate increase (2.7%) and Davis County saw a significant increase (7.4%) in population of approximately 40,000 people in each county.\nWeber County showed a modest increase (2.6%) of approximately 9,000 people. The forecasted age make-up of each county shifted to older populations in the 2021 projections compared to the 2017 projections. By 2050:\nChildren aged population (age 0-17) in Salt Lake and Utah counties decreased significantly, with Salt Lake County having 40,000 fewer people and Utah County having 120,000 fewer people.\nAdult aged population (age 18-64) increased in Weber County by 11,000, Davis County by 24,000, and Salt Lake County by 47,000, while Utah County decreased by 50,000.\nSenior aged population (age 65+) increased in all counites with the most significant increase in Salt Lake County of just less than 28,000.\nOverall, the new projection forecasts approximately 113,000 fewer children, 30,000 more adults, and 56,000 more seniors.\n\nHouseholds\nThe 2021 projections show an initial decrease over the 2017 projections of 43,000 households along the Wasatch Front in 2020, which then transitions to be a net increase of 18,000 households by 2050. Weber, Davis, and Salt Lake counties follow a similar pattern in the 2021 projections where each has a net increase in households between 2035 and 2045 ending with 2,500 more households in Weber County, 15,000 more households in Davis County, and 23,000 more households in Salt Lake County. Utah County shows a further decrease in households beginning in 2030 trending to 23,000 fewer households by 2050.\nPopulation-Housing Balance\nThe initial population/housing balance, as shown by the average household size, was higher in the 2021 projections relative to the 2017 projections, but quickly trends down to where the average household size is similar to the 2050 projections for Weber, Salt Lake, and Davis counites. The trend in the average household size in Utah County is considerably lower. This may be due to the dramatic drop in child-age population in Utah County which tend to live in households with higher household sizes and the increase in senior population which tend to live in households with lower household sizes.\nEmployment\nThe 2021 projections show an initial increase over the 2017 projections of 65,000 jobs along the Wasatch Front after a rebound from Covid. The new projections then transition to a slight decrease of 16,000 jobs by 2050. The differences in employment forecasts are most notable between Utah and Salt Lake counties. By 2050, the 2021 projections show an increase of 37,000 jobs (3.1%) in Salt Lake County and a decrease of 50,000 jobs (-8.5%) in Utah County. By 2050, Weber and Davis counites have little change from the previous forecast. The biggest change in employment was in the “other” employment category.\nEmployment Ratios\nThe 2021 projections showed a slight increase in working population per job in Weber and Davis counties compared to the 2017 projections. The working population per jobs ratio in Salt Lake and Utah counties remained fairly constant.\nImpact of Control Total Changes on Travel Demand Model Forecasts\nThe impact on the travel demand model of the socioeconomic control total changes will be most notable in the future volume forecasts in Utah and Salt Lake counties. Utah County has significantly fewer people and jobs in 2050 which translates to fewer trips and less traffic volume than in the previous model. Similarly, Salt Lake County saw an increase in the forecasted people and jobs which translates to more trips and volume. The impact will be more noticeable in Utah County than in Salt Lake County as the socioeconomic difference represents a much higher percent change of the total socioeconomic data. Also, the shift in jobs between Utah and Salt Lake counties is primarily in the “other” employment category, which averages longer commute distances and may cause the commuting pattern between Utah and Salt Lake counties to be different than in the previous model.\nIn addition, because the average household size control total in Utah County is lower in the later years than the previous socioeconomic projection, it will require more housing units to house a comparable amount of people, implying that the new Utah County socioeconomic forecast could exhibit slightly more sprawl and longer trip lengths per capita than the previous model.\nThe overall shift to more seniors and less children in the new control totals will have an effect in the future forecasted trip generation. Seniors typically have lower trip rates per household than households with children, with work and school trip purposes being most impacted.\n\n\n\nMany changes were made to the control total source spreadsheet in the 1_Inputs\\2_SEData\\_ControlTotals folder, including:\n\nThe new control total spreadsheet combines several processes that previously were in separate source files or that are needed to create new files required by the models:\n\nCounty SE control totals\nCounty Age Group control totals\nCounty Work-At-Home control totals\nCounty SE by 3-digit NAICS (needed for freight model)\nSeparating Weber County data into Wasatch Front and Ogden Valley datasets\nSeparating Weber, Davis, Salt Lake, and Utah counties into REMM and non-REMM datasets\n\nThe order and number of the output variables were changed in the model input files to make them more consistent with how the socioeconomic data is processed in the current travel and land use models.\nHistorical data going back to 1990 was added. The control total source spreadsheet now contains a nice, consistent database that allows a look back 30 years as well as a look ahead 40+ years.\n\nNote, some of the historical data had to be estimated to fill in data gaps and convert employment from SIC to NAICS for data prior to 2001.\n\nFunctionality was added to visualize and check the data.\nThe Work-At-Home (WAH) control total calculations now include information to siphon off the home-based jobs (HBJ) from each of the 23 GPI employment categories to become the HBJ category in the travel model. With WF TDM version 9, the process now includes county-specific HBJ rates rather than one set of rates for the whole state. HBJ rates were also updated to represent 2019 data.\nSimilarly, the Work-At-Home (WAH) control total calculations now include telecommuting information for all travel demand models in the state. The telecommuting rates pivot off of historic data from the 5-year 2019 ACS and the telecommuting forecasting work done for the WF TDM v8.3.2. County-specific telecommuting rates were generated for the following counties:\n\nWeber\nDavis\nSalt Lake\nUtah\nCache\nWashington\nSummit\nWasatch\nBox Elder\nTooele\nIron\n\nThe remaining rural counties had insufficient data in the ACS to generate unique rates. These counties were grouped together to generate a composite rate to reduce the sampling margin of error.\n\nWeber County contains two sets of data: one for all of Weber County, the other that separates the Weber County data for the UDOT planning domain (index=9057) and the Wasatch Front planning domain (index=9157).\n\nIn addition, the ControlTotal_Age.csv model input file in the 1_Inputs\\2_SEData\\_ControlTotals folder was combined with ControlTotal_SE_WF.csv file and renamed ControlTotal_SE_AllCounties.csv. The 1_DemographicsAnalysis.s script was updated to read ControlTotal_SE_AllCounties.csv."
  },
  {
    "objectID": "v9x/v900/whats-new/3-sedata.html#control-totals",
    "href": "v9x/v900/whats-new/3-sedata.html#control-totals",
    "title": "Socioeconomic Data Updates",
    "section": "",
    "text": "The WF TDM version 9’s socioeconomic county control totals were updated based on the Gardner Policy Institute (GPI) 2021 release of the state’s residential and employment county forecasts. Significant changes were made relative to the 2017 release. A comparison between version 9 and version 8 of the model’s socioeconomic control totals can be found in Figure 1 and Figure 2.\n\n\n\n\n\n\n\nCode\nfaControlTotals = FileAttachment(\"data/controltotal.csv\").csv({ typed: true });\nfaCounties      = FileAttachment(\"data/counties.csv\"    ).csv({ typed: true });\n\ncats = new Map([//['Total Population'               , 'TOTPOP'    ],\n                //['Group Quarter Population'       , 'GQ_Pop'    ],\n                ['Population'                     , 'HH_Pop'    ],\n                ['Households'                     , 'HH'        ],\n                //['Household Size'                 , 'HH_Size'   ],\n                //['Population 0-17'                , 'POP_00_17' ],\n                //['Population 18-64'               , 'POP_18_64' ],\n                //['Population 65+'                 , 'POP_65P'   ],\n                ['All Employment'                 , 'ALLEMP'    ],\n                ['Retail Employment'              , 'RETL'      ],\n                ['Food Employment'                , 'FOOD'      ],\n                ['Manufacturing Employment'       , 'MANU'      ],\n                ['Wholesale Employment'           , 'WSLE'      ],\n                ['Office Employment'              , 'OFFI'      ],\n                ['Government/Education Employment', 'GVED'      ],\n                ['Health Employment'              , 'HLTH'      ],\n                ['Other Employment'               , 'OTHR'      ],\n                //['Agriculture Employment'         , 'AGRI'      ],\n                //['Mining Employment'              , 'MING'      ],\n                //['Construction Employment'        , 'CONS'      ],\n                ['Home-Based Job Employment'      , 'HBJ'       ]\n                //['Jobs per Household'             , 'Job_HH'    ],\n                //['Working Population per Job'     , 'WrkPop_Job']\n                ])\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nfilteredControlTotals = faControlTotals.filter(function(ct) {\n  return selectCounty   == ct.CO_NAME &&\n         selectCategory == ct.Category;\n});\nviewof selectCategory = Inputs.select(cats, {value: 'HH_Pop', label: 'Category: '});\n\nviewof metric = Inputs.radio(new Map([[\"Difference\", \"Difference\"], [\"Percent Difference\", \"DifferencePct\"]]), {value: \"Difference\", label: \"Display:\"})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndataCTDiff50 = transpose(diffConTot2050long)\nfiltered_dataCTDiff50 = dataCTDiff50.filter(function(dataL) {\n    return selectCategory == dataL.Category  &&\n           metric == dataL.View;\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nimport {DivergingBarChart} from \"@d3/diverging-bar-chart\"\n\nfunction getXFormat() {\n  if (metric === \"DifferencePct\") {\n    return \"+%\";\n  } else if (selectCategory === 'HH_Size' && metric === \"Difference\") {\n    return \".2f\";\n  } else {\n    return \"+,d\";\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nchart3 = DivergingBarChart(filtered_dataCTDiff50, {\n    x: d =&gt; d.ViewValue,\n    y: d =&gt; d.CO_NAME,\n    xFormat: getXFormat(),\n    xLabel: \"2050 Difference\",\n    aspectRatio: 0.5,\n    colors: d3.schemeRdBu[3],\n    yDomain: ['Weber','Davis','Salt Lake','Utah', 'Wasatch Front']\n})\n\n\n\n\n\n\nFigure 1: 2050 Differences in Control Totals for Selected Category (v9.0 vs v8.3.2)\n\n\n\n\n\nCode\nviewof selectCounty = Inputs.select(new Map(['Wasatch Front', 'Weber', 'Davis', 'Salt Lake', 'Utah'].map(county =&gt; [county, county])), {value: 'Wasatch Front', label: 'County: '});\n\n// FILTER DATA\nfilteredCTPlot = faControlTotals.filter(function(ct) {\n  return selectCounty   == ct.CO_NAME; //&&\n         //selectCategoryPlot == ct.Category;\n});\nmaxY1 = Math.max(...filteredCTPlot.map(item =&gt; item.ControlTotal));\n\n// FILTER DATA for employment control totals\nfilteredCTPlot2 = faControlTotals.filter(function(ct) {\n  return selectCounty   == ct.CO_NAME &&\n         [\"Typical\", \"Retail\", \"Industrial\", \"Other\"].includes(ct.Category);\n});\nmaxY2 = Math.max(...filteredCTPlot2.map(item =&gt; item.ControlTotal));\n\n// FILTER DATA for control totals ratios\nfilteredCTPlot3 = faControlTotals.filter(function(ct) {\n  return selectCounty   == ct.CO_NAME &&\n         [\"HH_Size\", \"Job_HH\", \"WrkPop_Job\"].includes(ct.Category);\n});\nmaxY3 = Math.max(...filteredCTPlot3.map(item =&gt; item.ControlTotal));\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nhhPopData8 = faControlTotals.filter(function(ct) { return selectCounty == ct.CO_NAME && \"HH_Pop\" == ct.Category && \"v8.3.2\" == ct.ModelVersion  && ct.YEAR &gt; 2020;})\nhhPopData9 = faControlTotals.filter(function(ct) { return selectCounty == ct.CO_NAME && \"HH_Pop\" == ct.Category && \"v9.0.0\" == ct.ModelVersion;})\nhhData8 = faControlTotals.filter(function(ct) { return selectCounty == ct.CO_NAME && \"HH\" == ct.Category && 'v8.3.2' == ct.ModelVersion  && ct.YEAR &gt; 2020;})\nhhData9 = faControlTotals.filter(function(ct) { return selectCounty == ct.CO_NAME && \"HH\" == ct.Category && 'v9.0.0' == ct.ModelVersion;})\n\n// data for the employment control totals\ntypicalData8 = faControlTotals.filter(function(ct) { return selectCounty == ct.CO_NAME && \"Typical\" == ct.Category && \"v8.3.2\" == ct.ModelVersion  && ct.YEAR &gt; 2020;})\ntypicalData9 = faControlTotals.filter(function(ct) { return selectCounty == ct.CO_NAME && \"Typical\" == ct.Category && \"v9.0.0\" == ct.ModelVersion;})\nretailData8 = faControlTotals.filter(function(ct) { return selectCounty == ct.CO_NAME && \"Retail\" == ct.Category && \"v8.3.2\" == ct.ModelVersion  && ct.YEAR &gt; 2020;})\nretailData9 = faControlTotals.filter(function(ct) { return selectCounty == ct.CO_NAME && \"Retail\" == ct.Category && \"v9.0.0\" == ct.ModelVersion;})\nindustrialData8 = faControlTotals.filter(function(ct) { return selectCounty == ct.CO_NAME && \"Industrial\" == ct.Category && \"v8.3.2\" == ct.ModelVersion  && ct.YEAR &gt; 2020;})\nindustrialData9 = faControlTotals.filter(function(ct) { return selectCounty == ct.CO_NAME && \"Industrial\" == ct.Category && \"v9.0.0\" == ct.ModelVersion;})\notherData8 = faControlTotals.filter(function(ct) { return selectCounty == ct.CO_NAME && \"Other\" == ct.Category && \"v8.3.2\" == ct.ModelVersion  && ct.YEAR &gt; 2020;})\notherData9 = faControlTotals.filter(function(ct) { return selectCounty == ct.CO_NAME && \"Other\" == ct.Category && \"v9.0.0\" == ct.ModelVersion;})\n\n// data for control total ratios\nhhsize8 = faControlTotals.filter(function(ct) { return selectCounty == ct.CO_NAME && \"HH_Size\" == ct.Category && \"v8.3.2\" == ct.ModelVersion  && ct.YEAR &gt; 2020;})\nhhsize9 = faControlTotals.filter(function(ct) { return selectCounty == ct.CO_NAME && \"HH_Size\" == ct.Category && \"v9.0.0\" == ct.ModelVersion;})\njobhh8 = faControlTotals.filter(function(ct) { return selectCounty == ct.CO_NAME && \"Job_HH\" == ct.Category && \"v8.3.2\" == ct.ModelVersion  && ct.YEAR &gt; 2020;})\njobhh9 = faControlTotals.filter(function(ct) { return selectCounty == ct.CO_NAME && \"Job_HH\" == ct.Category && \"v9.0.0\" == ct.ModelVersion;})\nwrkpop8 = faControlTotals.filter(function(ct) { return selectCounty == ct.CO_NAME && \"WrkPop_Job\" == ct.Category && \"v8.3.2\" == ct.ModelVersion  && ct.YEAR &gt; 2020;})\nwrkpop9 = faControlTotals.filter(function(ct) { return selectCounty == ct.CO_NAME && \"WrkPop_Job\" == ct.Category && \"v9.0.0\" == ct.ModelVersion;})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nPlot.plot({\n  grid: true,\n  aspectRatio: 0.5,\n  x: {label: 'Year', tickFormat: d =&gt; d},\n  y: {label: 'Control Total', domain: [0, maxY1]},\n  marginRight:140,\n  marginLeft: 140,\n  color: { type: \"categorical\", legend: true, legendStyle: { fontSize: 24 } },\n  style: {\n    fontSize: 24\n  },\n  marginTop: 60,\n  marginBottom: 60,\n  height: 1300,\n  marks: [\n    Plot.line(\n      hhPopData8, {x: 'YEAR', y: 'ControlTotal', stroke: '#5b859e', strokeWidth: 3, strokeDasharray: '5,5'}),\n    Plot.line(\n      hhPopData9, {x: 'YEAR', y: 'ControlTotal', stroke: '#1e395f', strokeWidth: 3, text: ['yo momma']}),\n    Plot.text(\n      hhPopData9, Plot.selectLast({x: \"YEAR\", y: \"ControlTotal\", text: \"Category\", textAnchor: \"start\", dx: 3})),\n    \n    Plot.line(\n      hhData8, {x: 'YEAR', y: 'ControlTotal', stroke: '#75884b',strokeWidth: 3,strokeDasharray: '5,5'}),\n    Plot.line(\n      hhData9, {x: 'YEAR', y: 'ControlTotal', stroke: '#1e5a46',strokeWidth: 3}),\n    Plot.text(\n      hhData9, Plot.selectLast({x: \"YEAR\", y: \"ControlTotal\", text: \"Category\", textAnchor: \"start\", dx: 3})),\n    \n    Plot.frame({strokeOpacity: 0.2}),\n    [\n      Plot.text([`\\n   ——   Current Projection \\n\\n   —  — Previous Projection`], {frameAnchor: \"top-left\", fontSize: 24})\n  ]]\n})\nPlot.plot({\n  grid: true,\n  aspectRatio: 0.5,\n  x: {label: 'Year', tickFormat: d =&gt; d},\n  y: {label: 'Control Total', domain: [0, maxY2]},\n  marginRight:140,\n  marginLeft: 140,\n  color: { type: \"categorical\", legend: true, legendStyle: { fontSize: 24 } },\n  style: {\n    fontSize: 24\n  },\n  marginTop: 60,\n  marginBottom: 60,\n  height: 1300,\n  marks: [\n    Plot.line(\n      typicalData8, {x: 'YEAR', y: 'ControlTotal', stroke: '#FF6666', strokeWidth: 3, strokeDasharray: '5,5'}),\n    Plot.line(\n      typicalData9, {x: 'YEAR', y: 'ControlTotal', stroke: '#FF0000', strokeWidth: 3}),\n    Plot.text(\n      typicalData9, Plot.selectLast({x: \"YEAR\", y: \"ControlTotal\", text: \"Category\", textAnchor: \"start\", dx: 3})),\n\n    Plot.line(\n      retailData8, {x: 'YEAR', y: 'ControlTotal', stroke: '#75884b',strokeWidth: 3,strokeDasharray: '5,5'}),\n    Plot.line(\n      retailData9, {x: 'YEAR', y: 'ControlTotal', stroke: '#1e5a46',strokeWidth: 3}),\n    Plot.text(\n      retailData9, Plot.selectLast({x: \"YEAR\", y: \"ControlTotal\", text: \"Category\", textAnchor: \"start\", dx: 3})),\n\n    Plot.line(\n      industrialData8, {x: 'YEAR', y: 'ControlTotal', stroke: '#A0A0A0', strokeWidth: 3, strokeDasharray: '5,5'}),\n    Plot.line(\n      industrialData9, {x: 'YEAR', y: 'ControlTotal', stroke: '#606060', strokeWidth: 3}),\n    Plot.text(\n      industrialData9, Plot.selectLast({x: \"YEAR\", y: \"ControlTotal\", text: \"Category\", textAnchor: \"start\", dx: 3})),\n\n    Plot.line(\n      otherData8, {x: 'YEAR', y: 'ControlTotal', stroke: '#5b859e',strokeWidth: 3,strokeDasharray: '5,5'}),\n    Plot.line(\n      otherData9, {x: 'YEAR', y: 'ControlTotal', stroke: '#1e395f',strokeWidth: 3}),\n    Plot.text(\n      otherData9, Plot.selectLast({x: \"YEAR\", y: \"ControlTotal\", text: \"Category\", textAnchor: \"start\", dx: 3})),\n\n    Plot.frame({strokeOpacity: 0.2})\n  ]\n})\nPlot.plot({\n  grid: true,\n  aspectRatio: 0.5,\n  x: {label: 'Year', tickFormat: d =&gt; d},\n  y: {label: 'Control Total', domain: [0, maxY3]},\n  marginRight:140,\n  marginLeft: 140,\n  color: { type: \"categorical\", legend: true, legendStyle: { fontSize: 24 } },\n  style: {\n    fontSize: 24\n  },\n  marginTop: 60,\n  marginBottom: 60,\n  height: 1300,\n  marks: [\n    Plot.line(\n      hhsize8, {x: 'YEAR', y: 'ControlTotal', stroke: '#5b859e', strokeWidth: 3, strokeDasharray: '5,5'}),\n    Plot.line(\n      hhsize9, {x: 'YEAR', y: 'ControlTotal', stroke: '#1e395f', strokeWidth: 3}),\n    Plot.text(\n      hhsize9, Plot.selectLast({x: \"YEAR\", y: \"ControlTotal\", text: \"Category\", textAnchor: \"start\", dx: 3})),\n\n    Plot.line(\n      jobhh8, {x: 'YEAR', y: 'ControlTotal', stroke: '#75884b',strokeWidth: 3,strokeDasharray: '5,5'}),\n    Plot.line(\n      jobhh9, {x: 'YEAR', y: 'ControlTotal', stroke: '#1e5a46',strokeWidth: 3}),\n    Plot.text(\n      jobhh9, Plot.selectLast({x: \"YEAR\", y: \"ControlTotal\", text: \"Category\", textAnchor: \"start\", dx: 3})),\n\n    Plot.line(\n      wrkpop8, {x: 'YEAR', y: 'ControlTotal', stroke: '#FFB266',strokeWidth: 3,strokeDasharray: '5,5'}),\n    Plot.line(\n      wrkpop9, {x: 'YEAR', y: 'ControlTotal', stroke: '#FF8000',strokeWidth: 3}),\n    Plot.text(\n      wrkpop9, Plot.selectLast({x: \"YEAR\", y: \"ControlTotal\", text: \"Category\", textAnchor: \"start\", dx: 3})),\n\n    Plot.frame({strokeOpacity: 0.2})\n  ]\n})\n\n\n\n\n\n\n\n\n\n(a) Residential Control Total\n\n\n\n\n\n\n\n(b) Employment Control Total\n\n\n\n\n\n\n\n(c) Control Total Ratios\n\n\n\nFigure 2: Control Total Trends for Selected County for Selected Category\n\n\n\nHousehold Population\nThe 2021 forecasted household population of the combined, 4-county Wasatch Front remained relatively consistent relative to the 2017 projection, with the exception of a slight decrease in forecasted population in the later part of the forecast (-0.7% in 2050). County population, however, is quite different in the 2021 forecast. By 2050:\n\nUtah County saw a significant decrease (-8.7%) in household population with approximately 120,000 fewer people.\nSalt Lake county saw a moderate increase (2.7%) and Davis County saw a significant increase (7.4%) in population of approximately 40,000 people in each county.\nWeber County showed a modest increase (2.6%) of approximately 9,000 people. The forecasted age make-up of each county shifted to older populations in the 2021 projections compared to the 2017 projections. By 2050:\nChildren aged population (age 0-17) in Salt Lake and Utah counties decreased significantly, with Salt Lake County having 40,000 fewer people and Utah County having 120,000 fewer people.\nAdult aged population (age 18-64) increased in Weber County by 11,000, Davis County by 24,000, and Salt Lake County by 47,000, while Utah County decreased by 50,000.\nSenior aged population (age 65+) increased in all counites with the most significant increase in Salt Lake County of just less than 28,000.\nOverall, the new projection forecasts approximately 113,000 fewer children, 30,000 more adults, and 56,000 more seniors.\n\nHouseholds\nThe 2021 projections show an initial decrease over the 2017 projections of 43,000 households along the Wasatch Front in 2020, which then transitions to be a net increase of 18,000 households by 2050. Weber, Davis, and Salt Lake counties follow a similar pattern in the 2021 projections where each has a net increase in households between 2035 and 2045 ending with 2,500 more households in Weber County, 15,000 more households in Davis County, and 23,000 more households in Salt Lake County. Utah County shows a further decrease in households beginning in 2030 trending to 23,000 fewer households by 2050.\nPopulation-Housing Balance\nThe initial population/housing balance, as shown by the average household size, was higher in the 2021 projections relative to the 2017 projections, but quickly trends down to where the average household size is similar to the 2050 projections for Weber, Salt Lake, and Davis counites. The trend in the average household size in Utah County is considerably lower. This may be due to the dramatic drop in child-age population in Utah County which tend to live in households with higher household sizes and the increase in senior population which tend to live in households with lower household sizes.\nEmployment\nThe 2021 projections show an initial increase over the 2017 projections of 65,000 jobs along the Wasatch Front after a rebound from Covid. The new projections then transition to a slight decrease of 16,000 jobs by 2050. The differences in employment forecasts are most notable between Utah and Salt Lake counties. By 2050, the 2021 projections show an increase of 37,000 jobs (3.1%) in Salt Lake County and a decrease of 50,000 jobs (-8.5%) in Utah County. By 2050, Weber and Davis counites have little change from the previous forecast. The biggest change in employment was in the “other” employment category.\nEmployment Ratios\nThe 2021 projections showed a slight increase in working population per job in Weber and Davis counties compared to the 2017 projections. The working population per jobs ratio in Salt Lake and Utah counties remained fairly constant.\nImpact of Control Total Changes on Travel Demand Model Forecasts\nThe impact on the travel demand model of the socioeconomic control total changes will be most notable in the future volume forecasts in Utah and Salt Lake counties. Utah County has significantly fewer people and jobs in 2050 which translates to fewer trips and less traffic volume than in the previous model. Similarly, Salt Lake County saw an increase in the forecasted people and jobs which translates to more trips and volume. The impact will be more noticeable in Utah County than in Salt Lake County as the socioeconomic difference represents a much higher percent change of the total socioeconomic data. Also, the shift in jobs between Utah and Salt Lake counties is primarily in the “other” employment category, which averages longer commute distances and may cause the commuting pattern between Utah and Salt Lake counties to be different than in the previous model.\nIn addition, because the average household size control total in Utah County is lower in the later years than the previous socioeconomic projection, it will require more housing units to house a comparable amount of people, implying that the new Utah County socioeconomic forecast could exhibit slightly more sprawl and longer trip lengths per capita than the previous model.\nThe overall shift to more seniors and less children in the new control totals will have an effect in the future forecasted trip generation. Seniors typically have lower trip rates per household than households with children, with work and school trip purposes being most impacted.\n\n\n\nMany changes were made to the control total source spreadsheet in the 1_Inputs\\2_SEData\\_ControlTotals folder, including:\n\nThe new control total spreadsheet combines several processes that previously were in separate source files or that are needed to create new files required by the models:\n\nCounty SE control totals\nCounty Age Group control totals\nCounty Work-At-Home control totals\nCounty SE by 3-digit NAICS (needed for freight model)\nSeparating Weber County data into Wasatch Front and Ogden Valley datasets\nSeparating Weber, Davis, Salt Lake, and Utah counties into REMM and non-REMM datasets\n\nThe order and number of the output variables were changed in the model input files to make them more consistent with how the socioeconomic data is processed in the current travel and land use models.\nHistorical data going back to 1990 was added. The control total source spreadsheet now contains a nice, consistent database that allows a look back 30 years as well as a look ahead 40+ years.\n\nNote, some of the historical data had to be estimated to fill in data gaps and convert employment from SIC to NAICS for data prior to 2001.\n\nFunctionality was added to visualize and check the data.\nThe Work-At-Home (WAH) control total calculations now include information to siphon off the home-based jobs (HBJ) from each of the 23 GPI employment categories to become the HBJ category in the travel model. With WF TDM version 9, the process now includes county-specific HBJ rates rather than one set of rates for the whole state. HBJ rates were also updated to represent 2019 data.\nSimilarly, the Work-At-Home (WAH) control total calculations now include telecommuting information for all travel demand models in the state. The telecommuting rates pivot off of historic data from the 5-year 2019 ACS and the telecommuting forecasting work done for the WF TDM v8.3.2. County-specific telecommuting rates were generated for the following counties:\n\nWeber\nDavis\nSalt Lake\nUtah\nCache\nWashington\nSummit\nWasatch\nBox Elder\nTooele\nIron\n\nThe remaining rural counties had insufficient data in the ACS to generate unique rates. These counties were grouped together to generate a composite rate to reduce the sampling margin of error.\n\nWeber County contains two sets of data: one for all of Weber County, the other that separates the Weber County data for the UDOT planning domain (index=9057) and the Wasatch Front planning domain (index=9157).\n\nIn addition, the ControlTotal_Age.csv model input file in the 1_Inputs\\2_SEData\\_ControlTotals folder was combined with ControlTotal_SE_WF.csv file and renamed ControlTotal_SE_AllCounties.csv. The 1_DemographicsAnalysis.s script was updated to read ControlTotal_SE_AllCounties.csv."
  },
  {
    "objectID": "v9x/v900/whats-new/3-sedata.html#taz-level-forecasts",
    "href": "v9x/v900/whats-new/3-sedata.html#taz-level-forecasts",
    "title": "Socioeconomic Data Updates",
    "section": "TAZ-Level Forecasts",
    "text": "TAZ-Level Forecasts\nA new TAZ-level distribution of the updated county socioeconomic control totals was performed for WF TDM version 9. Updates to Weber, Davis, Salt Lake, and Utah counties TAZ-level socioeconomic forecasts were generated by REMM and included the following:\n\nBase and future year land use capacities based on updated city/county general plans, zoning, and centers (vision) location details.\nBase year residential dwelling units by type (single family, multi-family), household allocation, and population synthesis\nBase year commercial building square foot and employment allocation by employment category\n\nA detailed review of the TAZ-level socioeconomic forecasts was performed by an independent consultant. In addition, knowledgeable parties provided feedback for major development areas, including Falcon Hill, Day Break, Olympia Hills, and Point of the Mountain. A high-level review was also performed by local governments. Updates to socioeconomic data in Box Elder were provided by UDOT which included similar base year data updates and local review. The updated TAZ socioeconomic forecasts can be visualized with the Household and Job Forecasts Web App. Changes in the forecasts between versions 8 and 9 can be seen by clicking on View Advanced Version in the header and then selecting New vs. Old. You can explore the data in the embedded web application in Figure 3.\n\n\nCode\nhtml`&lt;div style=\"width: 765px; height: 680px; transform: scale(0.85); transform-origin: 0 0;\"&gt;\n         &lt;iframe width=\"900\" height=\"800\" src=\"https://wfrc.org/household-job-forecast-map/\" title=\"Household and Job Forecast\"&gt;&lt;/iframe&gt;\n     &lt;/div&gt;`\n\n\n\n\n\n\nFigure 3: Household and Job Forecast WebApp"
  },
  {
    "objectID": "v9x/v900/whats-new/3-sedata.html#base-year-taz-age-percent-lookup-file",
    "href": "v9x/v900/whats-new/3-sedata.html#base-year-taz-age-percent-lookup-file",
    "title": "Socioeconomic Data Updates",
    "section": "Base-Year TAZ Age Percent Lookup File",
    "text": "Base-Year TAZ Age Percent Lookup File\nThe TAZ-level age percent parameters were updated using 2020 Census block and 2020 ACS block group data. This update was done statewide by UDOT and provided for use in each travel model area in Utah. The Wasatch Front updated parameters are found in the 1_Inputs\\0_GlobalData\\1_HHDisag_AutoOwn \\Lookup - BYTAZAgePct - AllCo.csv lookup file."
  },
  {
    "objectID": "v9x/v900/whats-new/4-networks.html",
    "href": "v9x/v900/whats-new/4-networks.html",
    "title": "Highway & Transit Networks Updates",
    "section": "",
    "text": "The highway network in version 9 was updated to reflect the 2023-2050 RTP and the 2023-2028 TIP. The updated projects were coded into a set of fields in the Master highway network using the same field naming convention1 as version 8, but field names were updated to reflect the new 2023 RTP:\nAttribute Type Identifying Prefix\n\nLink\n\nLN – lane\nFT – functional type\nTSPD – transit speed (coded on rail links and transit only links)\nHOT – marker on general purpose lane indicating presence of adjacent HOV/HOT lane\nREL – marker to identify reliability lane project (e.g. managed lanes on arterials or reversible freeway lanes, etc.)\nOP – marker to identify operational project (i.e. enhancements to improve the operations of a roadway without adding physical capacity, such as signal timing optimization, access management, ramp metering etc.)\nGIS – contains ID or key to link to GIS mapping and project information (currently only includes the ‘23_32’, ‘23_42’, and ‘23_50’ scenarios)\n\nNode\n\nPNR – park-and-ride\nFARZN – commuter rail fare zone\n\n\nScenario Identifying Suffix\n\n_2015\n_2019 – model base year\n_2023 – RTP opening year\n_2028 – end of 2023-2028 TIP\n23_32 – 2023 RTP end-of-phase 1 (2032), fiscally-constrained\n23_42 – 2023 RTP end-of-phase 2 (2042), fiscally-constrained\n23_50 – 2023 RTP end-of-phase 3 (2050), fiscally-constrained\n23_32UF – 2023 RTP end-of-phase 1 (2032), unfunded need\n23_42UF – 2023 RTP end-of-phase 2 (2042), unfunded need\n23_50UF – 2023 RTP end-of-phase 3 (2050), unfunded need\n23_50UFM - 2023 RTP end-of-phase 3 (2050), unfunded need MAG alternate (includes different assumption related to Lehi freeway project at the Point of the Mountain), currently only includes “LN” attribute\nNote, TSPD unfunded need scenario fields use “U” instead of “UF” due to the 10-character field width limitation.\n\nChanges to the number of lanes in version 9 can be seen in Figure 1, Figure 2, and Figure 3.\n\nPhase 1Phase 2Phase 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 1: Changes to Highway Project List (Phase 1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 2: Changes to Highway Project List (Phase 2)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 3: Changes to Highway Project List (Phase 3)\n\n\n\n\n\n\n\n\nIn addition, the following edits were made to the highway network:\n\nThe distance exception fields (DISTEXCEPT) were set to 0. DISTEXCEPT was used in previous model versions at external links to account for the distance from the external to the county boundary for air quality VMT calculations. Since version 9 model boundaries correspond to county boundaries, this field is no longer needed in the model.\nThe “TSP” fields were updated to reflect recent UTA light rail and commuter rail studies.\nThe MAG_LINK/MAG_NODE fields identify links and node in the MAG planning area and are used when snapping together changes to the WFRC and MAG master networks. Version 8 included WFRC_LINK/WFRC_NODE fields to identify links/nodes in the WFRC area. These WFRC fields were redundant and dropped from the master network since the MAG and WFRC areas are mutually exclusive.\nThe commuter rail Fare Zone for the Vineyard and Orem stations was updated to be the same fare zone, similar to the fare zone for the North Temple and Salt Lake Central stations. There is no additional fare cost for traveling between the new Vineyard and Orem stations.\nSEGID on the highway links was updated and made consistent with the most recent segment shapefile. SEGID exception fields (SEGEX_RTP, SEGEX_NEED) were also created to account for links with future SEGIDs that differ with existing SEGIDs, primarily for the frontage road system in Salt Lake and Utah counties. These new fields are under development and values for these fields will be forthcoming.\n\n\n\n\nVersion 9 highway network was expanded to incorporate the new model areas (see Changes to TAZ Geometry and Attributes). The expansion to these mountainous areas meant the inclusion of many very curvy roadways. The curvature of these roadways is maintained by the link shapefile in the associated 1_Inputs\\3_Highway\\GIS folder. Edits made to the link/node geometry in the highway network in these areas should be done with True Shape turned on in Cube Base in order to maintain the link/node association with the underlying shapefile. In addition, True Shape will be required when exporting the link shapefile or the shape geometry in the mountain areas will be lost.\n\n\n\nThe version 9 highway network node numbering scheme was updated, as shown in Table 1.\n\n\n\n\n\n\n\n\n\nTable 1: New Master Network Node Numbering\n\n\n\n\n\n\n\n\nMPO\nTransit Nodes\nHighway Nodes\nv9 Expansion Area Nodes\n\n\n\n\nWFRC\n10,000-19,999\n20,000-49,999\n90,000-94,999\n\n\nMAG\n50,000-59,999\n60,000-89,999\n95,000-99,999\n\n\n\n\n\n\n\n\nThe “HwyNodes” parameter in the 0_GeneralParameters.block file was updated to reflect the new highway node numbering.\n\n\n\n\n\n\n\n\n\nTable 2: Renumbered Master Network Highway Node Range\n\n\n\n\n\n\n\n\nParameter\nv9Value\nv8Value\nNotes\n\n\n\n\nHwyNodes\n10000-99999\n3401-999999\nHighway and transit node range\n\n\n\n\n\n\n\n\nHighway node references in the PT_Parameter \\...FAC files and the 3_TurnPenalty.s script were updated to reflect the new TAZ and highway node numbering. Array indices found in the 5_AssignHwy\\05_RemoveManagedLanes.s script were also updated from &lt;=20,000 to 1,000,000 to account for the new highway network numbering scheme.\n\n\n\nDetails on the location and numbering of the new external nodes on the master highway network are shown in Figure 4 and Table 3. (See Changes to TAZ Geometry and Attributes and Changes to TAZ Parameters for more information on external zones.)\n\n\nCode\ngeojsonExternalOld   = FileAttachment(\"data/externalold.geojson\"  ).json()\ngeojsonExternalNew   = FileAttachment(\"data/externalnew.geojson\"  ).json()\ngeojsonMasterNetLink = FileAttachment(\"data/masternetlink.geojson\").json()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nmapExternals = {\n\n  let container = DOM.element('div', { style: `width:${width}px;height:${width/1.6}px` });\n  yield container;\n  \n  let map = L.map(container).setView([40.7608, -111.8910], 8.25);\n\n  let osmLayer = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '&copy; &lt;a href=\"https://www.openstreetmap.org/copyright\"&gt;OpenStreetMap&lt;/a&gt; contributors'\n  }).addTo(map); \n\n  var cNew = \"#FF0000\";\n  var cOld = \"#00FF00\";\n\n  var squareIcon_New = L.icon({\n    iconUrl: 'https://wfrc.org/wftdm-docs/_pictures/square_green.png',  // Replace with the path to your square-like icon image\n    iconSize: [15, 15],          // Adjust the size of the square-like icon\n    iconAnchor: [5, 5],          // Adjust the anchor point if needed\n  });\n\n  var squareIcon_Old = L.icon({\n    iconUrl: 'https://wfrc.org/wftdm-docs/_pictures/square_red.png',       // Replace with the path to your square-like icon image\n    iconSize: [15, 15],          // Adjust the size of the square-like icon\n    iconAnchor: [5, 5],          // Adjust the anchor point if needed\n  });\n\n  var cCommon = \"#FF0000\"\n  var cAdded  = \"#00FF00\"\n  var cOther  = \"#888888\"\n\n  var geolineCommon = {\n      color: cCommon,\n      weight: 2,\n      opacity: 1,\n  };\n\n  var geoLineAdded = {\n      color: cAdded,\n      weight: 2,\n      opacity: 1,\n  };\n  var geoLineOther = {\n      color: cOther,\n      weight: 2,\n      opacity: 1,\n  };\n            \n  // function to use different icons based on number of stations\n  function markerByNewNet(feature) {\n    if (feature.properties.FLG_NEWNET==3) {\n      return geolineCommon;\n    } else if (feature.properties.FLG_NEWNET==23){\n      return geoLineAdded;\n    } else{\n      return geoLineOther;\n    }\n  };\n\n  function getColor(c) {\n    if        (c=='Common') {\n      return cCommon;\n    } else if (c=='Added') {\n      return cAdded;\n    } else if (c=='Other') {\n      return cOther;\n    }\n  };\n\n  //let lyrNetwork = L.geoJson(geojsonMasterNetLink, { weight: 0.75, color: \"#888888\", fillOpacity: 0}).addTo(map);\n\n  // create the GeoJSON layer and call the styling function with each marker\n//  var lyrNetwork = L.geoJson(geojsonMasterNetLink,  { function (markerByNewNet(feature))}).addTo(map);\n\n  // create the GeoJSON layer and call the styling function with each marker\n  var externalNewLayer = L.geoJSON(geojsonExternalNew, {\n    pointToLayer: function (feature, latlng) {\n      var mypopup = L.popup().setContent(\"&lt;b&gt;Node: \" + feature.properties.N + \"&lt;/b&gt;\");\n      var mymarker = L.marker(latlng, { icon: squareIcon_New });\n      mymarker.bindPopup(mypopup);\n      return mymarker;\n    }\n  }).addTo(map);\n\n  // create the GeoJSON layer and call the styling function with each marker\n  var externalOldLayer = L.geoJSON(geojsonExternalOld, {\n    pointToLayer: function (feature, latlng) {\n      var mypopup = L.popup().setContent(\"&lt;b&gt;Node: \" + feature.properties.N + \"&lt;/b&gt;\");\n      var mymarker = L.marker(latlng, { icon: squareIcon_Old });\n      mymarker.bindPopup(mypopup);\n      return mymarker;\n    }\n  }).addTo(map);\n\n  var legend = L.control({position: 'bottomleft'});\n    legend.onAdd = function (map) {\n      var div = L.DomUtil.create('div', 'info legend');\n      var labelsBill = []; // legend title\n      var lcategories = ['v8.3.2','v9.0.0'];\n      var lcolors     = [cOld    ,cNew    ];\n\n      for (var i = 0; i &lt; lcategories.length; i++) {\n        div.innerHTML += \n          labelsBill.push(\n            '&lt;i style=\"background:' + lcolors[i] + '\"&gt;&nbsp;&lt;/i&gt; ' +\n          (lcategories[i] ? lcategories[i] : '+'));\n      }\n      div.innerHTML = labelsBill.join('&lt;br&gt;');\n\n      // Add CSS style for the background color\n      div.style.backgroundColor = 'lightgray';\n      div.style.padding = '10px';\n      \n      return div;\n    };\n    legend.addTo(map);  \n}\n\n\n\n\n\n\nFigure 4: Location of External Nodes\n\n\n\n\n\n\n\n\n\n\n\n\nTable 3: External Number & Description\n\n\n\n\n\n\n\n\n\nCounty\nv9 Value\nv8 Value\nLocation\nNotes\n\n\n\n\nBox Elder\n3601\n136\nFAR-1082 Bird Refuge\n\n\n\n\n3602\n137\nSR-13/83 to Corinne\n\n\n\n\n3603\nnan\nFAR-1112 to Bear River\nNew External\n\n\n\n3604\n138\nI-15 to Tremonton\n\n\n\n\n3605\n139\nSR-38 to Riverside\n\n\n\n\n3606\n140\nSR-91 to Logan\nMoved for Area Expansion\n\n\nWeber\n3607\n421\nFAR-3462 N Ogden Pass\nMoved for Area Expansion\n\n\n\n3608\n422\nSR-39 Ogden Canyon\nMoved for Area Expansion\n\n\n\n3609\n423\nI-84 to Summit\nMoved for Area Expansion\n\n\nSalt Lake\n3610\nnan\nFAR-2688 Butterfield Cyn to Tooele\nNew External\n\n\n\n3611\n1783\nSR-201 to Tooele\n\n\n\n\n3612\n1782\nI-80 to Tooele\n\n\n\n\n3613\n1784\nSR-65 Mountain Dell Canyon\nMoved for Area Expansion\n\n\n\n3614\n1785\nI-80 East Parley’s\nMoved for Area Expansion\n\n\n\nnan\n1786\nFAR-2193 Millcreek Canyon\nRemoved for Area Expansion\n\n\n\n3615\n1787\nSR-190 Guardsman Pass\n\n\n\n\nnan\n1788\nSR-210 Little Cottonwood\nRemoved for Area Expansion\n\n\nUtah\n3616\nnan\nFAR-1828 Goshen Canyon\nNew External\n\n\n\n3617\n2880\nUS-6 Eureka\n\n\n\n\n3618\n2881\nSR-73 Rush Valley\n\n\n\n\n3619\n2874\nFAR-3108 Cascade Spring\nMoved for Area Expansion\n\n\n\n3620\n2875\nSR-189 Provo Canyon\nMoved for Area Expansion\n\n\n\n3621\n2876\nFAR-2865 Sixth Water / Horse Creek\nMoved for Area Expansion\n\n\n\n3622\nnan\nFAR-2863 Sheep Creek\nNew External\n\n\n\n3623\n2877\nUS-6 Price Canyon\nMoved for Area Expansion\n\n\n\n3624\nnan\nSR-96 Scofield\nNew External\n\n\n\n3625\nnan\nFAR-2495 Skyline Dr\nNew External\n\n\n\n3626\nnan\nUS-89 Thistle\nNew External\n\n\n\n3627\n2878\nFAR-1822 N Nebo Loop\nMoved for Area Expansion\n\n\n\n3628\n2879\nI-15 to Juab\n\n\n\n\n3629\nnan\nFAR-1826 South Ridge Farms\nNew External\n\n\n\n\n\n\n\n\n\n\n\nAdditional highway network updates in version 9 include:\n\nA fix for a small network error in Box Elder where a local road was drawn to the centroid of a TAZ\nA phase change for Managed Motorways in WFRC area\nSignificant updates to centroid connectors in the MAG area"
  },
  {
    "objectID": "v9x/v900/whats-new/4-networks.html#highway-network",
    "href": "v9x/v900/whats-new/4-networks.html#highway-network",
    "title": "Highway & Transit Networks Updates",
    "section": "",
    "text": "The highway network in version 9 was updated to reflect the 2023-2050 RTP and the 2023-2028 TIP. The updated projects were coded into a set of fields in the Master highway network using the same field naming convention1 as version 8, but field names were updated to reflect the new 2023 RTP:\nAttribute Type Identifying Prefix\n\nLink\n\nLN – lane\nFT – functional type\nTSPD – transit speed (coded on rail links and transit only links)\nHOT – marker on general purpose lane indicating presence of adjacent HOV/HOT lane\nREL – marker to identify reliability lane project (e.g. managed lanes on arterials or reversible freeway lanes, etc.)\nOP – marker to identify operational project (i.e. enhancements to improve the operations of a roadway without adding physical capacity, such as signal timing optimization, access management, ramp metering etc.)\nGIS – contains ID or key to link to GIS mapping and project information (currently only includes the ‘23_32’, ‘23_42’, and ‘23_50’ scenarios)\n\nNode\n\nPNR – park-and-ride\nFARZN – commuter rail fare zone\n\n\nScenario Identifying Suffix\n\n_2015\n_2019 – model base year\n_2023 – RTP opening year\n_2028 – end of 2023-2028 TIP\n23_32 – 2023 RTP end-of-phase 1 (2032), fiscally-constrained\n23_42 – 2023 RTP end-of-phase 2 (2042), fiscally-constrained\n23_50 – 2023 RTP end-of-phase 3 (2050), fiscally-constrained\n23_32UF – 2023 RTP end-of-phase 1 (2032), unfunded need\n23_42UF – 2023 RTP end-of-phase 2 (2042), unfunded need\n23_50UF – 2023 RTP end-of-phase 3 (2050), unfunded need\n23_50UFM - 2023 RTP end-of-phase 3 (2050), unfunded need MAG alternate (includes different assumption related to Lehi freeway project at the Point of the Mountain), currently only includes “LN” attribute\nNote, TSPD unfunded need scenario fields use “U” instead of “UF” due to the 10-character field width limitation.\n\nChanges to the number of lanes in version 9 can be seen in Figure 1, Figure 2, and Figure 3.\n\nPhase 1Phase 2Phase 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 1: Changes to Highway Project List (Phase 1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 2: Changes to Highway Project List (Phase 2)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 3: Changes to Highway Project List (Phase 3)\n\n\n\n\n\n\n\n\nIn addition, the following edits were made to the highway network:\n\nThe distance exception fields (DISTEXCEPT) were set to 0. DISTEXCEPT was used in previous model versions at external links to account for the distance from the external to the county boundary for air quality VMT calculations. Since version 9 model boundaries correspond to county boundaries, this field is no longer needed in the model.\nThe “TSP” fields were updated to reflect recent UTA light rail and commuter rail studies.\nThe MAG_LINK/MAG_NODE fields identify links and node in the MAG planning area and are used when snapping together changes to the WFRC and MAG master networks. Version 8 included WFRC_LINK/WFRC_NODE fields to identify links/nodes in the WFRC area. These WFRC fields were redundant and dropped from the master network since the MAG and WFRC areas are mutually exclusive.\nThe commuter rail Fare Zone for the Vineyard and Orem stations was updated to be the same fare zone, similar to the fare zone for the North Temple and Salt Lake Central stations. There is no additional fare cost for traveling between the new Vineyard and Orem stations.\nSEGID on the highway links was updated and made consistent with the most recent segment shapefile. SEGID exception fields (SEGEX_RTP, SEGEX_NEED) were also created to account for links with future SEGIDs that differ with existing SEGIDs, primarily for the frontage road system in Salt Lake and Utah counties. These new fields are under development and values for these fields will be forthcoming.\n\n\n\n\nVersion 9 highway network was expanded to incorporate the new model areas (see Changes to TAZ Geometry and Attributes). The expansion to these mountainous areas meant the inclusion of many very curvy roadways. The curvature of these roadways is maintained by the link shapefile in the associated 1_Inputs\\3_Highway\\GIS folder. Edits made to the link/node geometry in the highway network in these areas should be done with True Shape turned on in Cube Base in order to maintain the link/node association with the underlying shapefile. In addition, True Shape will be required when exporting the link shapefile or the shape geometry in the mountain areas will be lost.\n\n\n\nThe version 9 highway network node numbering scheme was updated, as shown in Table 1.\n\n\n\n\n\n\n\n\n\nTable 1: New Master Network Node Numbering\n\n\n\n\n\n\n\n\nMPO\nTransit Nodes\nHighway Nodes\nv9 Expansion Area Nodes\n\n\n\n\nWFRC\n10,000-19,999\n20,000-49,999\n90,000-94,999\n\n\nMAG\n50,000-59,999\n60,000-89,999\n95,000-99,999\n\n\n\n\n\n\n\n\nThe “HwyNodes” parameter in the 0_GeneralParameters.block file was updated to reflect the new highway node numbering.\n\n\n\n\n\n\n\n\n\nTable 2: Renumbered Master Network Highway Node Range\n\n\n\n\n\n\n\n\nParameter\nv9Value\nv8Value\nNotes\n\n\n\n\nHwyNodes\n10000-99999\n3401-999999\nHighway and transit node range\n\n\n\n\n\n\n\n\nHighway node references in the PT_Parameter \\...FAC files and the 3_TurnPenalty.s script were updated to reflect the new TAZ and highway node numbering. Array indices found in the 5_AssignHwy\\05_RemoveManagedLanes.s script were also updated from &lt;=20,000 to 1,000,000 to account for the new highway network numbering scheme.\n\n\n\nDetails on the location and numbering of the new external nodes on the master highway network are shown in Figure 4 and Table 3. (See Changes to TAZ Geometry and Attributes and Changes to TAZ Parameters for more information on external zones.)\n\n\nCode\ngeojsonExternalOld   = FileAttachment(\"data/externalold.geojson\"  ).json()\ngeojsonExternalNew   = FileAttachment(\"data/externalnew.geojson\"  ).json()\ngeojsonMasterNetLink = FileAttachment(\"data/masternetlink.geojson\").json()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nmapExternals = {\n\n  let container = DOM.element('div', { style: `width:${width}px;height:${width/1.6}px` });\n  yield container;\n  \n  let map = L.map(container).setView([40.7608, -111.8910], 8.25);\n\n  let osmLayer = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '&copy; &lt;a href=\"https://www.openstreetmap.org/copyright\"&gt;OpenStreetMap&lt;/a&gt; contributors'\n  }).addTo(map); \n\n  var cNew = \"#FF0000\";\n  var cOld = \"#00FF00\";\n\n  var squareIcon_New = L.icon({\n    iconUrl: 'https://wfrc.org/wftdm-docs/_pictures/square_green.png',  // Replace with the path to your square-like icon image\n    iconSize: [15, 15],          // Adjust the size of the square-like icon\n    iconAnchor: [5, 5],          // Adjust the anchor point if needed\n  });\n\n  var squareIcon_Old = L.icon({\n    iconUrl: 'https://wfrc.org/wftdm-docs/_pictures/square_red.png',       // Replace with the path to your square-like icon image\n    iconSize: [15, 15],          // Adjust the size of the square-like icon\n    iconAnchor: [5, 5],          // Adjust the anchor point if needed\n  });\n\n  var cCommon = \"#FF0000\"\n  var cAdded  = \"#00FF00\"\n  var cOther  = \"#888888\"\n\n  var geolineCommon = {\n      color: cCommon,\n      weight: 2,\n      opacity: 1,\n  };\n\n  var geoLineAdded = {\n      color: cAdded,\n      weight: 2,\n      opacity: 1,\n  };\n  var geoLineOther = {\n      color: cOther,\n      weight: 2,\n      opacity: 1,\n  };\n            \n  // function to use different icons based on number of stations\n  function markerByNewNet(feature) {\n    if (feature.properties.FLG_NEWNET==3) {\n      return geolineCommon;\n    } else if (feature.properties.FLG_NEWNET==23){\n      return geoLineAdded;\n    } else{\n      return geoLineOther;\n    }\n  };\n\n  function getColor(c) {\n    if        (c=='Common') {\n      return cCommon;\n    } else if (c=='Added') {\n      return cAdded;\n    } else if (c=='Other') {\n      return cOther;\n    }\n  };\n\n  //let lyrNetwork = L.geoJson(geojsonMasterNetLink, { weight: 0.75, color: \"#888888\", fillOpacity: 0}).addTo(map);\n\n  // create the GeoJSON layer and call the styling function with each marker\n//  var lyrNetwork = L.geoJson(geojsonMasterNetLink,  { function (markerByNewNet(feature))}).addTo(map);\n\n  // create the GeoJSON layer and call the styling function with each marker\n  var externalNewLayer = L.geoJSON(geojsonExternalNew, {\n    pointToLayer: function (feature, latlng) {\n      var mypopup = L.popup().setContent(\"&lt;b&gt;Node: \" + feature.properties.N + \"&lt;/b&gt;\");\n      var mymarker = L.marker(latlng, { icon: squareIcon_New });\n      mymarker.bindPopup(mypopup);\n      return mymarker;\n    }\n  }).addTo(map);\n\n  // create the GeoJSON layer and call the styling function with each marker\n  var externalOldLayer = L.geoJSON(geojsonExternalOld, {\n    pointToLayer: function (feature, latlng) {\n      var mypopup = L.popup().setContent(\"&lt;b&gt;Node: \" + feature.properties.N + \"&lt;/b&gt;\");\n      var mymarker = L.marker(latlng, { icon: squareIcon_Old });\n      mymarker.bindPopup(mypopup);\n      return mymarker;\n    }\n  }).addTo(map);\n\n  var legend = L.control({position: 'bottomleft'});\n    legend.onAdd = function (map) {\n      var div = L.DomUtil.create('div', 'info legend');\n      var labelsBill = []; // legend title\n      var lcategories = ['v8.3.2','v9.0.0'];\n      var lcolors     = [cOld    ,cNew    ];\n\n      for (var i = 0; i &lt; lcategories.length; i++) {\n        div.innerHTML += \n          labelsBill.push(\n            '&lt;i style=\"background:' + lcolors[i] + '\"&gt;&nbsp;&lt;/i&gt; ' +\n          (lcategories[i] ? lcategories[i] : '+'));\n      }\n      div.innerHTML = labelsBill.join('&lt;br&gt;');\n\n      // Add CSS style for the background color\n      div.style.backgroundColor = 'lightgray';\n      div.style.padding = '10px';\n      \n      return div;\n    };\n    legend.addTo(map);  \n}\n\n\n\n\n\n\nFigure 4: Location of External Nodes\n\n\n\n\n\n\n\n\n\n\n\n\nTable 3: External Number & Description\n\n\n\n\n\n\n\n\n\nCounty\nv9 Value\nv8 Value\nLocation\nNotes\n\n\n\n\nBox Elder\n3601\n136\nFAR-1082 Bird Refuge\n\n\n\n\n3602\n137\nSR-13/83 to Corinne\n\n\n\n\n3603\nnan\nFAR-1112 to Bear River\nNew External\n\n\n\n3604\n138\nI-15 to Tremonton\n\n\n\n\n3605\n139\nSR-38 to Riverside\n\n\n\n\n3606\n140\nSR-91 to Logan\nMoved for Area Expansion\n\n\nWeber\n3607\n421\nFAR-3462 N Ogden Pass\nMoved for Area Expansion\n\n\n\n3608\n422\nSR-39 Ogden Canyon\nMoved for Area Expansion\n\n\n\n3609\n423\nI-84 to Summit\nMoved for Area Expansion\n\n\nSalt Lake\n3610\nnan\nFAR-2688 Butterfield Cyn to Tooele\nNew External\n\n\n\n3611\n1783\nSR-201 to Tooele\n\n\n\n\n3612\n1782\nI-80 to Tooele\n\n\n\n\n3613\n1784\nSR-65 Mountain Dell Canyon\nMoved for Area Expansion\n\n\n\n3614\n1785\nI-80 East Parley’s\nMoved for Area Expansion\n\n\n\nnan\n1786\nFAR-2193 Millcreek Canyon\nRemoved for Area Expansion\n\n\n\n3615\n1787\nSR-190 Guardsman Pass\n\n\n\n\nnan\n1788\nSR-210 Little Cottonwood\nRemoved for Area Expansion\n\n\nUtah\n3616\nnan\nFAR-1828 Goshen Canyon\nNew External\n\n\n\n3617\n2880\nUS-6 Eureka\n\n\n\n\n3618\n2881\nSR-73 Rush Valley\n\n\n\n\n3619\n2874\nFAR-3108 Cascade Spring\nMoved for Area Expansion\n\n\n\n3620\n2875\nSR-189 Provo Canyon\nMoved for Area Expansion\n\n\n\n3621\n2876\nFAR-2865 Sixth Water / Horse Creek\nMoved for Area Expansion\n\n\n\n3622\nnan\nFAR-2863 Sheep Creek\nNew External\n\n\n\n3623\n2877\nUS-6 Price Canyon\nMoved for Area Expansion\n\n\n\n3624\nnan\nSR-96 Scofield\nNew External\n\n\n\n3625\nnan\nFAR-2495 Skyline Dr\nNew External\n\n\n\n3626\nnan\nUS-89 Thistle\nNew External\n\n\n\n3627\n2878\nFAR-1822 N Nebo Loop\nMoved for Area Expansion\n\n\n\n3628\n2879\nI-15 to Juab\n\n\n\n\n3629\nnan\nFAR-1826 South Ridge Farms\nNew External\n\n\n\n\n\n\n\n\n\n\n\nAdditional highway network updates in version 9 include:\n\nA fix for a small network error in Box Elder where a local road was drawn to the centroid of a TAZ\nA phase change for Managed Motorways in WFRC area\nSignificant updates to centroid connectors in the MAG area"
  },
  {
    "objectID": "v9x/v900/whats-new/4-networks.html#transit-networks",
    "href": "v9x/v900/whats-new/4-networks.html#transit-networks",
    "title": "Highway & Transit Networks Updates",
    "section": "Transit Networks",
    "text": "Transit Networks\n\nChanges to Transit Line Files\nThe transit line files were updated to correspond with the 2023-2050 RTP and the 2023-2028 TIP. Specific changes to these files for each plan year include:\n\nLin_2019 – files were thoroughly vetted to represent Aug 2019 change day.\nLin_2023 – route alignment, headways and stops were updated to the August 2022 change day.\nLin_2028 – route alignment, headways and stops were updated to the UTA 5-Year Service Plan.\nLin_2032, Lin_2042, Lin_2050 – changes from 2028 were rolled forward into plan phased years and updated based on 2023 fiscally constrained plan.\nLin_2032_Needs, Lin_2042_Needs, Lin_2050_Needs – changes from 2028 were rolled forward into plan phased years and updated based on 2023 unfunded needs plan.\nLin_2032_Needs_MAG, Lin_2042_Needs_MAG, Lin_2050_Needs_MAG – these are copies of the “Needs” transit plans and edited to reflect changes in the MAG 2023 unfunded needs plan at the Point of the Mountain.\n\nIn addition, route S902 in Salt Lake County was shortened to exclude the I-80 Parleys Canyon external node and route LittleCott which provides access up Little Cottonwood Canyon was added to the model.\n\n\nChanges to General Hand-Coded Support Links\nThe 1_Inputs\\4_Transit\\General_hand_coded_walk_links.NTL file was updated to be consistent with the new TAZ structure and to ensure all hand coded walk links are realistic.\n\n\nAdded Transit Route Tester Folder\nA _chk Transit Compile on Net folder was added in the 1_Inputs\\4_Transit folder. This folder contains a script to check if the transit line files compile on the related scenario highway network from the Master network. The script helps review transit line edits outside of the model stream. Any transit line compiling issues are reported in the check - 1 – {ScenarioName}.txt text file created by the script."
  },
  {
    "objectID": "v9x/v900/whats-new/4-networks.html#segment-shapefile",
    "href": "v9x/v900/whats-new/4-networks.html#segment-shapefile",
    "title": "Highway & Transit Networks Updates",
    "section": "Segment Shapefile",
    "text": "Segment Shapefile\nThe Wasatch Front segment shapefile (found in 1_Inputs\\6_Segment) was updated to reflect the updated highway and transit networks. These changes include:\n\nSegments were adjusted to reflect new highway projects coded on the master highway network.\nSEGIDs were added to rail links to allow for easier transit result visualization."
  },
  {
    "objectID": "v9x/v900/whats-new/4-networks.html#footnotes",
    "href": "v9x/v900/whats-new/4-networks.html#footnotes",
    "title": "Highway & Transit Networks Updates",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nField names are composed of a prefix and a suffix. The prefix indicates the type of the network attribute (e.g. lane, functional type, etc.). The suffix identifies the scenarios coded into the network. If the scenario is part of a plan phase year, a 2-digit plan-opening-year is included in the suffix name. All field names are limited to 10 characters in length.↩︎"
  },
  {
    "objectID": "v9x/v900/whats-new/6-modelenhancements.html",
    "href": "v9x/v900/whats-new/6-modelenhancements.html",
    "title": "Model Enhancements",
    "section": "",
    "text": "The convergence criteria in the 1_Distribution.s script was updated.\nTrip Table Convergence\nFor trip table convergence, the percent change threshold was tightened from 10% to 7.5%. For each iteration, only cells where the trips in the current iterations are greater than zero are considered. Also, cells with trips greater than zero are counted as significant trips and form the denominator in the percent converged calculation. A cell in the trip matrix is now considered converged if either of the following conditions is met:\n\nThe percent change from previous iteration is within 7.5%.\nTrips from the current iteration are less than 1, except when trips from the current iteration are greater than zero and the trips from the previous iteration equals zero.\n\nLink Convergence\nFor link volume convergence, the percent change threshold was loosened from 5% to 7.5%. Centroid connectors were removed from consideration when determining convergence. Only cells where the trips in the current iterations are greater than zero are considered and are counted as significant trips forming the denominator in the percent converged calculation. A link is now considered converged if either of the following conditions is met:\n\nThe percent change from previous iteration is within 7.5%.\nVolume from current iteration equals zero and volume from previous iteration equals zero, except when the volume from the current iteration is greater than zero and the volume from the previous iteration equals zero, or the volume from the current iteration is zero and the volume from the previous iteration is greater than zero.\n\nCheck Criteria\nThe requirement for a minimum of 5 iterations was removed from the check convergence criteria.\nCheck Network\nA loaded network file (@unloadednetprefix@_@n@_convg.net) was added to Temp\\3_Distribute folder to track link convergence between the distribution feedback loop iterations. A network is output for each distribution feedback loop iteration after the first iteration. The link attributes include the volume changes from the current and previous iteration for each time period.\n\n\n\nThe RelGapCriteria parameter was moved from block\\4pd_mainbody_distribution.block to 1_Distribution.s and placed before each assignment call in order to accommodate a stricter RGAP threshold for the evening period. For the evening period, the RGAP parameter value is now divided by 10 increasing the network assignment stability and reducing the RMSE for the evening period.\n\n\n\nThe following reports were added to the scenarios 3_Distribute output folder to better track convergence in the model:\n\n_Stats - Distrib Assign - @RID@.csv – Combines the highway assignment convergence reports for each feedback loop iteration, time period, and assignment iteration into one file.\n_Stats - Distrib Loaded Net - @RID@.csv – Provides summary statistics of the number and percent of converged links in the assigned network as well as the total VMT, VHT, and average speed by major functional class (freeways, arterials, and total).\n_Stats - Distrib Trip Table - @RID@.csv – Provides summary statistics of the number and percent of converged trip table cells as well as the total number of trips by purpose for each feedback loop iteration."
  },
  {
    "objectID": "v9x/v900/whats-new/6-modelenhancements.html#distribution",
    "href": "v9x/v900/whats-new/6-modelenhancements.html#distribution",
    "title": "Model Enhancements",
    "section": "",
    "text": "The convergence criteria in the 1_Distribution.s script was updated.\nTrip Table Convergence\nFor trip table convergence, the percent change threshold was tightened from 10% to 7.5%. For each iteration, only cells where the trips in the current iterations are greater than zero are considered. Also, cells with trips greater than zero are counted as significant trips and form the denominator in the percent converged calculation. A cell in the trip matrix is now considered converged if either of the following conditions is met:\n\nThe percent change from previous iteration is within 7.5%.\nTrips from the current iteration are less than 1, except when trips from the current iteration are greater than zero and the trips from the previous iteration equals zero.\n\nLink Convergence\nFor link volume convergence, the percent change threshold was loosened from 5% to 7.5%. Centroid connectors were removed from consideration when determining convergence. Only cells where the trips in the current iterations are greater than zero are considered and are counted as significant trips forming the denominator in the percent converged calculation. A link is now considered converged if either of the following conditions is met:\n\nThe percent change from previous iteration is within 7.5%.\nVolume from current iteration equals zero and volume from previous iteration equals zero, except when the volume from the current iteration is greater than zero and the volume from the previous iteration equals zero, or the volume from the current iteration is zero and the volume from the previous iteration is greater than zero.\n\nCheck Criteria\nThe requirement for a minimum of 5 iterations was removed from the check convergence criteria.\nCheck Network\nA loaded network file (@unloadednetprefix@_@n@_convg.net) was added to Temp\\3_Distribute folder to track link convergence between the distribution feedback loop iterations. A network is output for each distribution feedback loop iteration after the first iteration. The link attributes include the volume changes from the current and previous iteration for each time period.\n\n\n\nThe RelGapCriteria parameter was moved from block\\4pd_mainbody_distribution.block to 1_Distribution.s and placed before each assignment call in order to accommodate a stricter RGAP threshold for the evening period. For the evening period, the RGAP parameter value is now divided by 10 increasing the network assignment stability and reducing the RMSE for the evening period.\n\n\n\nThe following reports were added to the scenarios 3_Distribute output folder to better track convergence in the model:\n\n_Stats - Distrib Assign - @RID@.csv – Combines the highway assignment convergence reports for each feedback loop iteration, time period, and assignment iteration into one file.\n_Stats - Distrib Loaded Net - @RID@.csv – Provides summary statistics of the number and percent of converged links in the assigned network as well as the total VMT, VHT, and average speed by major functional class (freeways, arterials, and total).\n_Stats - Distrib Trip Table - @RID@.csv – Provides summary statistics of the number and percent of converged trip table cells as well as the total number of trips by purpose for each feedback loop iteration."
  },
  {
    "objectID": "v9x/v900/whats-new/6-modelenhancements.html#mode-choice",
    "href": "v9x/v900/whats-new/6-modelenhancements.html#mode-choice",
    "title": "Model Enhancements",
    "section": "Mode Choice",
    "text": "Mode Choice\n\nMode Name Change\nIn version 9, names for the following modes were changed:\n\nMode 5\n\nLONGNAME: from ‘Bus Rapid Transit’ to ‘Core Bus’\nNAME: from ‘BRT’ to ‘CoreBus’\n\nMode 9\n\nLONGNAME: from ‘Mode 9 Bus Rapid Transit’ to ‘Bus Rapid Transit’\nNAME: from ‘BRT9’ to ‘BRT’\n\n\n\n\nPrefixes for Transit Skims\nPrefixes to identify transit skim output files have been coded directly into the scripts in version 9. As such, the following parameters were removed from the 0_GeneralParameters.block file.\n\nW_LCL_skims = ‘skm_w4’ ;walk-to-local skims\nD_LCL_skims = ‘skm_d4’ ;drive-to-local skims\nW_BRT_skims = ‘skm_w5’ ;walk-to-BRT skims\nD_BRT_skims = ‘skm_d5’ ;drive-to-BRT skims\nW_EXP_skims = ‘skm_w6’ ;walk-to-express bus skims\nD_EXP_skims = ‘skm_d6’ ;drive-to-express bus skims\nW_LRT_skims = ‘skm_w7’ ;walk-to-light rail skims\nD_LRT_skims = ‘skm_d7’ ;drive-to-light rail skims\nW_CRT_skims = ‘skm_w8’ ;walk-to-commuter rail skims\nD_CRT_skims = ‘skm_d8’ ;drive-to-commuter rail skims\nW_mode9_skims = ‘skm_w9’\nD_mode9_skims = ‘skm_d9’"
  },
  {
    "objectID": "v9x/v900/whats-new/6-modelenhancements.html#assignment",
    "href": "v9x/v900/whats-new/6-modelenhancements.html#assignment",
    "title": "Model Enhancements",
    "section": "Assignment",
    "text": "Assignment\n\nDiurnal Factors\nDiurnal (time-of-day) factors were updated in version 9 for the internal-external (IX) and external-internal (XI) trip purposes based on 2019 StreetLight origin-destination data. IX and XI diurnal factors in version 8 were inherited from previous model versions which were derived using observed truck count data and an averaged factor was used for IX and XI. A comparison of version 8 and 9 IX and XI diurnal factors can be seen in Table 1.\n\n\n\n\n\n\n\n\n\nTable 1: IX & XI Diurnal Factors\n\n\nFactor\nv9 Value\nv8 Value\nChange\n\n\n\n\nIX_AM_PCT\n0.1909\n0.1786\n0.0123\n\n\nIX_MD_PCT\n0.3136\n0.3291\n-0.0155\n\n\nIX_PM_PCT\n0.2567\n0.2604\n-0.0037\n\n\nIX_EV_PCT\n0.2388\n0.2319\n0.0069\n\n\nXI_AM_PCT\n0.1969\n0.1786\n0.0183\n\n\nXI_MD_PCT\n0.3263\n0.3291\n-0.0028\n\n\nXI_PM_PCT\n0.2617\n0.2604\n0.0013\n\n\nXI_EV_PCT\n0.2151\n0.2319\n-0.0168\n\n\nIX_AM_PA\n0.6604\n0.8563\n-0.1959\n\n\nIX_MD_PA\n0.5593\n0.5627\n-0.0034\n\n\nIX_PM_PA\n0.4044\n0.3288\n0.0756\n\n\nIX_EV_PA\n0.3968\n0.329\n0.0678\n\n\nXI_AM_PA\n0.7709\n0.8563\n-0.0854\n\n\nXI_MD_PA\n0.6087\n0.5627\n0.046\n\n\nXI_PM_PA\n0.3111\n0.3288\n-0.0177\n\n\nXI_EV_PA\n0.317\n0.329\n-0.012\n\n\n\n\n\n\n\n\nDiurnal factors were removed from the 0_GeneralParameters.block file in version 9 and are now read in via an input file (1_Inputs\\0_GlobalData\\5_Assignment\\Time Of Day Factors.csv). A source spreadsheet (_source - Time Of Day Factors.xlsb) is also included in the input folder. The new factors file includes factors for additional trip purposes (e.g. home-based college stratified by campus), although the model code has not yet been modified to account for the additional factors.\nA new script (2_ModelScripts\\0_InputProcessing\\e_TimeOfDayFactors\\1_CalculateTimeOfDayFac.s) was added to the model stream, which included an update to the “HailMary.s” script. This script reads in the Time Of Day Factors.csv file and writes out a text file (0_InputProcessing\\_TimeOfDayFactors.txt) containing the diurnal factors expressed as parameters for use in the model. Scripts that use diurnal parameters in version 9 were updated to read in the text file containing the diurnal parameters.\n\n\nRGAP in Assignment\nThe “RelGapCriteria” parameter was moved from the block\\4pd_mainbody_managedlanes.block and 4pd_mainbody_managedlanes_SelectLink.block files and placed in the 02_Assign_AM_MD_PM_EV.s and 03_Assign_PM1Hr.s scripts to accommodate a stricter RGAP threshold for the evening period. For the evening period, the RGAP parameter value is now divided by 10 increasing the network assignment stability and reducing the RMSE for the evening period.\n\n\nAssigned Network\nMedium and heavy truck speed and time and buffer time index (BTI) calculations were added to the 04_SummarizeLoadedNetworks.s script (calculations were previously in the 5_AssignHwy\\07_PerformFinalNetSkim.s script). Weighted average daily summaries were also added. The following fields were added to the assigned output network:\n\nWeighted average daily values for:\n\nRamp Penalties (DY_RAMPPEN)\nBuffer Time Index (DY_BTI_TME)\n\nMedium Truck Speed\n\nFF_TKSPD_M\nAM_TKSPD_M\nMD_TKSPD_M\nPM_TKSPD_M\nEV_TKSPD_M\nDY_TKSPD_M\n\nMedium Truck Time\n\nFF_TKTME_M\nAM_TKTME_M\nMD_TKTME_M\nPM_TKTME_M\nEV_TKTME_M\nDY_TKTME_M\n\nHeavy Truck Speed\n\nFF_TKSPD_H\nAM_TKSPD_H\nMD_TKSPD_H\nPM_TKSPD_H\nEV_TKSPD_H\nDY_TKSPD_H\n\nHeavy Truck Time\n\nFF_TKTME_H\nAM_TKTME_H\nMD_TKTME_H\nPM_TKTME_H\nEV_TKTME_H\nDY_TKTME_H\n\n\nThe following fields were removed from the assigned output network:\n\nlw_Spd_Auto_1\nlw_TrkSpd_MD_1\nlw_TrkSpd_HV_1\nlw_Time_Auto_1\nlw_TrkTime_MD_1\nlw_TrkTime_HV_1\n\n\n\nFinal Skims\nThe 5_AssignHwy\\07_PerformFinalNetSkim.s script was updated in version 9 to include ramp penalty information for general purpose (GP), managed lane (ML), medium truck (MD), and heavy truck (HV) for each time period. The version 9 script also produces a daily skim matrix with the same attributes as the period skim matrices.\n\n\nReports\nThe following report was added to the scenarios 5_AssignHwy\\0_ConvergeReports output folder to better track convergence in the model:\n\n_Stats - Final Assign - @RID@.csv – Combines the highway assignment convergence reports for each time period and assignment iteration into one file."
  },
  {
    "objectID": "v9x/v900/whats-new/6-modelenhancements.html#miscellaneous-updates",
    "href": "v9x/v900/whats-new/6-modelenhancements.html#miscellaneous-updates",
    "title": "Model Enhancements",
    "section": "Miscellaneous Updates",
    "text": "Miscellaneous Updates\nThe following changes were also made to the model in version 9:\n\nThe following parameters were removed from the 0_GeneralParameters.block file in version 9 because they were no longer being used in the model. These are in addition to the other parameter changes identified in other sections of this report.\n\nCounty Identification Parameters\n\nCountyRange = ‘1-5’\nCountyName1 = ‘Weber’\nCountyName2 = ‘Davis’\nCountyName3 = ‘SaltLake’\nCountyName4 = ‘Utah’\nCountyName5 = ‘BoxElder’\nCO_Name1 = ‘WE’\nCO_Name2 = ‘DA’\nCO_Name3 = ‘SL’\nCO_Name4 = ‘UT’\nCO_Name5 = ‘BE’\n\nAir Quality Conformity Report Parameters\n\nRE_ID = 0 ;Entire region\nWE_ID = 1 ;Weber\nDA_ID = 2 ;Davis\nSL_ID = 3 ;Salt Lake\nUT_ID = 4 ;Utah\nBE_ID = 5 ;BoxElder\nOC_ID = 55980 ;Ogden\nSC_ID = 67000 ;Salt Lake City\nPC_ID = 62470 ;Provo\n\nAssignment Type Flag\n\nAssignType = ‘managed’\n\n\nThe folder setup routine was integrated into the HailMary.s script to run automatically. It is no longer necessary to copy empty folders or run the _CreateOutputFolders.s prior to running the model.\nThe 3_Distribute\\1_Distribution.s script was updated so that initializing the summary statistics variables that will be printed to the log file is no longer needed and the section to initialize these variables was removed. In addition, the trip table and link convergence reports in the log file were updated based on information generated in the new summary statistics reports.\nThe 04_SummarizeLoadedNetworks.s script was modified to point the geometry input reference to the input processing output folder instead of the highway inputs folder.\nThe PrintProgress code block found in various scripts throughout the model was updated to account for multithread processing. This code block provides percent complete progress updates for specific, matrix-based Voyager modules.\n\n\nBug Fixes\n\nA bug in the Connected and Autonomous Vehicle (CAV) calculation was fixed where the column index needed to be incremented by 1 to link up with lookup tables.\nA bug was fixed in the portion of the “04_SummarizeLoadedNetworks.s” script that consolidates the select link trip tables. The total trips were being summarized into a matrix that was not being assigned to the output matrix. The correct working matrices have been updated with the correct index for the output file."
  },
  {
    "objectID": "v9x/v900/whats-new/7-modelresults.html",
    "href": "v9x/v900/whats-new/7-modelresults.html",
    "title": "Compare Model Results",
    "section": "",
    "text": "This section compares the model results between version 9 and version 8."
  },
  {
    "objectID": "v9x/v900/whats-new/7-modelresults.html#road-volume-comparisons",
    "href": "v9x/v900/whats-new/7-modelresults.html#road-volume-comparisons",
    "title": "Compare Model Results",
    "section": "Road Volume Comparisons",
    "text": "Road Volume Comparisons\nThe comparison between daily volumes at the segment level can be found in Figure 1 for 2019 and 2050. Decreases in volume in version 9 compared to version 8 are shown in blue, while increases are shown in red.\nFor 2019, Salt Lake and northern Davis counties display a drop in roadway volumes, most apparent on I-15. Weber, southern Davis, and Utah Counties show increases. Most of the changes are relatively minor, with the largest decreases occurring on the freeways in Salt Lake County. However, given the large daily volume for these roadways, the percent change is relatively low.\nFor 2050, there are decreases in volumes on I-15 in Salt Lake and northern Davis counties. Weber and northern Davis counties show overall increase in roadway volumes. Utah County shows the most change with the two Utah Lake crossings not part of the 2050 fiscally constrained scenario. The resulting drop in volumes is evident with increases on I-15.\nThe comparison of daily medium and heavy truck volumes is found in Figure 2 for 2019 and 2050. Truck volumes decreased in the northwest portion of Salt Lake County.\n\nVolume Change - All VehiclesVolume Change - Truck\n\n\n\n\n\n\n\n\n\n(a) 2019\n\n\n\n\n\n\n\n(b) 2050 Fiscally Constrained\n\n\n\n\n\n\n\nFigure 1: Model Daily Volumes Comparison - All Vehicles (version 9 vs version 8)\n\n\n\n\n\n\n\n\n\n\n\n(a) 2019\n\n\n\n\n\n\n\n(b) 2050 Fiscally Constrained\n\n\n\n\n\n\n\nFigure 2: Model Daily Volumes Comparison - Trucks (version 9 vs version 8)"
  },
  {
    "objectID": "v9x/v900/whats-new/7-modelresults.html#transit-comparisons",
    "href": "v9x/v900/whats-new/7-modelresults.html#transit-comparisons",
    "title": "Compare Model Results",
    "section": "Transit Comparisons",
    "text": "Transit Comparisons\nTransit comparisons were done with ridership, trips mode share, and boardings mode share. Overall ridership increases significantly in version 9, and Core Bus ridership takes a larger share of trips and boardings than in version 8.\n\nTransit Ridership\nTransit ridership in version 9 compared to version 8 shows significant increase in 2032, 2042, and 2050. See Figure 3 through Figure 9. The total ridership in 2050 for version 9 is 327,000 daily trips compared to the version 8 model that showed 258,000 daily trips, which equates to 26% more trips. The additional trips is largely due to the improvements in commuter rail with increased frequency and speed together with the change in the model sensitivity to changes in headway.\nTransit ridership by modes are shown in the following set of figures. Light-Rail Transit sees an increase through 2028 and then a large decrease in 2032. This large decrease can be explained by the shift of riders from Light Rail to Core Bus routes, with a large number of core routes coming online in 2032.\n\nAll ModesCommuter RailLight RailBus Rapid TransitExpress BusCore BusLocal Bus\n\n\n\n\n\n\n                                                \nFigure 3: Daily Transit Ridership - All Modes\n\n\n\n\n\n\n\n\n\n                                                \nFigure 4: Daily Transit Ridership - Commuter-Rail Transit\n\n\n\n\n\n\n\n\n\n                                                \nFigure 5: Daily Transit Ridership - Light-Rail Transit\n\n\n\n\n\n\n\n\n\n                                                \nFigure 6: Daily Transit Ridership - Bus Rapid Transit\n\n\n\n\n\n\n\n\n\n                                                \nFigure 7: Daily Transit Ridership - Express Bus\n\n\n\n\n\n\n\n\n\n                                                \nFigure 8: Daily Transit Ridership - Core Bus\n\n\n\n\n\n\n\n\n\n                                                \nFigure 9: Daily Transit Ridership - Local Bus\n\n\n\n\n\n\n\n\nTransit Share\nA comparison of the share of trips amongst the various modes of transit was done for both Trips and Boardings.\nThe transit ridership trip shares by mode can be found in Figure 10 for version 9 and Figure 11 for version 8. The main difference in version 9 trip share by mode is the large increase in Core Bus trips in 2032 from almost nothing in 2028, while in version 8 the increase in Core Bus trips is spread out between 2024 and 2030. This large increase is consistent with the transit inputs into the model with a large number of Core Bus routes coming into production in 2032, replacing mostly local bus service. The new Core Buy takes most of the local bus ridership it is replacing, but also quite a lot of ridership from Light Rail Transit (Mode 7).\nTransit boardings for version 9 are found in Figure 12 and for version 8 are found in Figure 13. Boardings follow the same pattern as trips, but boardings are able to differentiate between modes better than trips that are categorized hierarchically.\n\nTrips - version 9Trips - version 8Boardings - version 9Boardings - version 8\n\n\n\n\n\n\n                                                \nFigure 10: Transit Trips Share by Mode - Version 9\n\n\n\n\n\n\n\n\n\n                                                \nFigure 11: Transit Trips Share by Mode - Version 8\n\n\n\n\n\n\n\n\n\n                                                \nFigure 12: Transit Boardings Share by Mode - Version 9\n\n\n\n\n\n\n\n\n\n                                                \nFigure 13: Transit Boardings Share by Mode - Version 8\n\n\n\n\n\n\n\nCommuter Rail Station Boardings\nThe comparison of base year (2019) station-level boardings for commuter-rail transit (CRT) is found in Figure 14. CRT boardings were found to be higher than observed for Davis County and lower than observed for Utah County. An adjustment of 5 additional minutes to in-vehicle-time for trips to/from Davis County and 5 fewer minute to in-vehicle-time for Utah County was made to attempt to bring the model more in-line with observations.\nAdditional investigation was conducted into why Provo and Lehi were particularly low in the model. The findings did not turn up any obvious errors in the transit or model network. So, the conclusion is that further adjustments to CRT will be possible in the Mode Choice Update project that is currently being undertaken for the next release of the model.\n\n\n\n\n                                                \nFigure 14: 2019 Daily CRT Boardings by Station - Model vs Observed"
  },
  {
    "objectID": "v9x/v900/whats-new/A-whats-new-doc-prep.html",
    "href": "v9x/v900/whats-new/A-whats-new-doc-prep.html",
    "title": "Figure Prep for What’s New Word Doc",
    "section": "",
    "text": "Code\nimport matplotlib.pyplot as plt\nimport geopandas as gpd\nimport matplotlib.pyplot as plt\n\n\nc:\\Users\\cday\\Anaconda3\\lib\\site-packages\\geopandas\\_compat.py:123: UserWarning: The Shapely GEOS version (3.8.0-CAPI-1.13.1) is incompatible with the GEOS version PyGEOS was compiled with (3.10.4-CAPI-1.16.2). Conversions between both will be slow.\n  warnings.warn(\nC:\\Users\\cday\\AppData\\Local\\Temp\\ipykernel_5664\\4197195985.py:2: UserWarning: Shapely 2.0 is installed, but because PyGEOS is also installed, GeoPandas will still use PyGEOS by default for now. To force to use and test Shapely 2.0, you have to set the environment variable USE_PYGEOS=0. You can do this before starting the Python process, or in your code before importing geopandas:\n\nimport os\nos.environ['USE_PYGEOS'] = '0'\nimport geopandas\n\nIn a future release, GeoPandas will switch to using Shapely by default. If you are using PyGEOS directly (calling PyGEOS functions on geometries from GeoPandas), this will then stop working and you are encouraged to migrate from PyGEOS to Shapely 2.0 (https://shapely.readthedocs.io/en/latest/migration_pygeos.html).\n  import geopandas as gpd\n\n\n\n\nCode\n# Define a function to generate CO_FIPS attribute based on CO_TAZID\ndef assign_fips(co_tazid):\n    co_tazid_str = str(co_tazid)\n    if co_tazid_str.startswith('30'):\n        return '3'\n    elif co_tazid_str.startswith('11'):\n        return '11'\n    elif co_tazid_str.startswith('35'):\n        return '35'\n    elif co_tazid_str.startswith('57'):\n        return '57'\n    elif co_tazid_str.startswith('49'):\n        return '49'\n    else:\n        return None  # Handle other cases if needed\n\ndef plot_geo_data_by_fips(data_taz_new, data_taz_old, co_fips_value, line_color_new, line_color_old, line_width):    \n    # Create the figure and axes\n    fig, ax = plt.subplots(figsize=(15, 15))\n    \n    # Filter GeoDataFrames based on CO_FIPS value\n    data_taz_new_filtered = data_taz_new.loc[data_taz_new['CO_FIPS'] == co_fips_value]\n    data_taz_old_filtered = data_taz_old.loc[data_taz_old['CO_FIPS'] == co_fips_value]\n    \n    # Plot the filtered GeoDataFrames with different line colors and line width\n    data_taz_new_filtered.plot(ax=ax, facecolor='none', edgecolor=line_color_new, linewidth=line_width)\n    data_taz_old_filtered.plot(ax=ax, facecolor='none', edgecolor=line_color_old, linewidth=line_width)\n    \n    legend_ax = fig.add_axes([0.85, 0.5, 0.1, 0.1])\n    legend_elements = [\n        plt.Line2D([0], [0], color=line_color_new, linewidth=line_width, label='v9.0.0'),\n        plt.Line2D([0], [0], color=line_color_old, linewidth=line_width, label='v8.3.2')\n    ]\n    legend_ax.legend(handles=legend_elements, loc='center')\n    legend_ax.axis('off')\n    \n    # Display the plot\n    plt.savefig(\"\".join(['_pictures/doc-taz-',co_fips_value]), bbox_inches='tight')\n    #plt.show()\n\n\n\n\nCode\n# Read the GeoJSON files\ndata_taz_new = gpd.read_file(r'data\\tazNew.geojson')\ndata_taz_old = gpd.read_file(r'data\\tazOld.geojson')\n\n# Apply the function to create the CO_FIPS attribute\ndata_taz_new['CO_FIPS'] = data_taz_new['CO_TAZID'].apply(assign_fips)\ndata_taz_old['CO_FIPS'] = data_taz_old['CO_TAZID'].apply(assign_fips)\n\n# Set the line colors and line width\nline_color_new = '#0B2842'\nline_color_old = '#789d4b'\nline_width = 0.5\n\n\n\n\nCode\nplot_geo_data_by_fips(data_taz_new, data_taz_old, '57', line_color_new, line_color_old, line_width)\n\n\n\n\n\n\n\nCode\nplot_geo_data_by_fips(data_taz_new, data_taz_old, '11', line_color_new, line_color_old, line_width)\n\n\n\n\n\n\n\nCode\nplot_geo_data_by_fips(data_taz_new, data_taz_old, '35', line_color_new, line_color_old, line_width)\n\n\n\n\n\n\n\nCode\nplot_geo_data_by_fips(data_taz_new, data_taz_old, '49', line_color_new, line_color_old, line_width)"
  },
  {
    "objectID": "v9x/v900/whats-new/A-whats-new-doc-prep.html#difference-in-v9-and-v832-taz",
    "href": "v9x/v900/whats-new/A-whats-new-doc-prep.html#difference-in-v9-and-v832-taz",
    "title": "Figure Prep for What’s New Word Doc",
    "section": "",
    "text": "Code\nimport matplotlib.pyplot as plt\nimport geopandas as gpd\nimport matplotlib.pyplot as plt\n\n\nc:\\Users\\cday\\Anaconda3\\lib\\site-packages\\geopandas\\_compat.py:123: UserWarning: The Shapely GEOS version (3.8.0-CAPI-1.13.1) is incompatible with the GEOS version PyGEOS was compiled with (3.10.4-CAPI-1.16.2). Conversions between both will be slow.\n  warnings.warn(\nC:\\Users\\cday\\AppData\\Local\\Temp\\ipykernel_5664\\4197195985.py:2: UserWarning: Shapely 2.0 is installed, but because PyGEOS is also installed, GeoPandas will still use PyGEOS by default for now. To force to use and test Shapely 2.0, you have to set the environment variable USE_PYGEOS=0. You can do this before starting the Python process, or in your code before importing geopandas:\n\nimport os\nos.environ['USE_PYGEOS'] = '0'\nimport geopandas\n\nIn a future release, GeoPandas will switch to using Shapely by default. If you are using PyGEOS directly (calling PyGEOS functions on geometries from GeoPandas), this will then stop working and you are encouraged to migrate from PyGEOS to Shapely 2.0 (https://shapely.readthedocs.io/en/latest/migration_pygeos.html).\n  import geopandas as gpd\n\n\n\n\nCode\n# Define a function to generate CO_FIPS attribute based on CO_TAZID\ndef assign_fips(co_tazid):\n    co_tazid_str = str(co_tazid)\n    if co_tazid_str.startswith('30'):\n        return '3'\n    elif co_tazid_str.startswith('11'):\n        return '11'\n    elif co_tazid_str.startswith('35'):\n        return '35'\n    elif co_tazid_str.startswith('57'):\n        return '57'\n    elif co_tazid_str.startswith('49'):\n        return '49'\n    else:\n        return None  # Handle other cases if needed\n\ndef plot_geo_data_by_fips(data_taz_new, data_taz_old, co_fips_value, line_color_new, line_color_old, line_width):    \n    # Create the figure and axes\n    fig, ax = plt.subplots(figsize=(15, 15))\n    \n    # Filter GeoDataFrames based on CO_FIPS value\n    data_taz_new_filtered = data_taz_new.loc[data_taz_new['CO_FIPS'] == co_fips_value]\n    data_taz_old_filtered = data_taz_old.loc[data_taz_old['CO_FIPS'] == co_fips_value]\n    \n    # Plot the filtered GeoDataFrames with different line colors and line width\n    data_taz_new_filtered.plot(ax=ax, facecolor='none', edgecolor=line_color_new, linewidth=line_width)\n    data_taz_old_filtered.plot(ax=ax, facecolor='none', edgecolor=line_color_old, linewidth=line_width)\n    \n    legend_ax = fig.add_axes([0.85, 0.5, 0.1, 0.1])\n    legend_elements = [\n        plt.Line2D([0], [0], color=line_color_new, linewidth=line_width, label='v9.0.0'),\n        plt.Line2D([0], [0], color=line_color_old, linewidth=line_width, label='v8.3.2')\n    ]\n    legend_ax.legend(handles=legend_elements, loc='center')\n    legend_ax.axis('off')\n    \n    # Display the plot\n    plt.savefig(\"\".join(['_pictures/doc-taz-',co_fips_value]), bbox_inches='tight')\n    #plt.show()\n\n\n\n\nCode\n# Read the GeoJSON files\ndata_taz_new = gpd.read_file(r'data\\tazNew.geojson')\ndata_taz_old = gpd.read_file(r'data\\tazOld.geojson')\n\n# Apply the function to create the CO_FIPS attribute\ndata_taz_new['CO_FIPS'] = data_taz_new['CO_TAZID'].apply(assign_fips)\ndata_taz_old['CO_FIPS'] = data_taz_old['CO_TAZID'].apply(assign_fips)\n\n# Set the line colors and line width\nline_color_new = '#0B2842'\nline_color_old = '#789d4b'\nline_width = 0.5\n\n\n\n\nCode\nplot_geo_data_by_fips(data_taz_new, data_taz_old, '57', line_color_new, line_color_old, line_width)\n\n\n\n\n\n\n\nCode\nplot_geo_data_by_fips(data_taz_new, data_taz_old, '11', line_color_new, line_color_old, line_width)\n\n\n\n\n\n\n\nCode\nplot_geo_data_by_fips(data_taz_new, data_taz_old, '35', line_color_new, line_color_old, line_width)\n\n\n\n\n\n\n\nCode\nplot_geo_data_by_fips(data_taz_new, data_taz_old, '49', line_color_new, line_color_old, line_width)"
  },
  {
    "objectID": "v9x/v900/whats-new/A-whats-new-doc-prep.html#remm-space",
    "href": "v9x/v900/whats-new/A-whats-new-doc-prep.html#remm-space",
    "title": "Figure Prep for What’s New Word Doc",
    "section": "REMM Space",
    "text": "REMM Space\n\n\nCode\nimport matplotlib.colors as colors\ndata_taz_new = gpd.read_file(r'data\\tazNew.geojson')\nremm_values = data_taz_new['REMM'].astype(int)\ncmap = 'Accent_r'\n\nfig, ax = plt.subplots(figsize=(10, 10))\ndata_taz_new.plot(column=remm_values, cmap=cmap, linewidth=0.5, ax=ax)\n\nlegend_ax = fig.add_axes([0.85, 0.5, 0.1, 0.1]) \nlegend_elements = [\n    plt.Line2D([0], [0], color='green', linewidth=line_width, label='REMM Space'),\n    plt.Line2D([0], [0], color='gray', linewidth=line_width, label='Non-REMM Space')\n]\nlegend_ax.legend(handles=legend_elements, loc='center')\nlegend_ax.axis('off')\n\n# Display the plot\n#plt.show()\nplt.savefig('_pictures/doc-remm', bbox_inches='tight')"
  },
  {
    "objectID": "v9x/v900/whats-new/data/crop-volume-pngs.html",
    "href": "v9x/v900/whats-new/data/crop-volume-pngs.html",
    "title": "WFTDM Documentation",
    "section": "",
    "text": "Code\nfrom PIL import Image\n\n\n\n\nCode\n# 150%, Home button, zoom out once, F11, change basemap to non-labeled --- Windows+Shift+S click upright screen\n# legend: expand legend window all the way to bottom of screen\nim = Image.open('map_pngs/comparisons/uncropped_2028_2024_MAP.png')\nim_crop = im.crop((400, 400, 800, 1600))\nim_crop.save('map_pngs/comparisons/2028_2028_MAP.png', quality=1000)\n\n\n\n\nCode\nim = Image.open('map_pngs/comparisons/uncropped_2019_LEGEND.png')\nim_crop = im.crop((480, 370, 830, 920))\nim_crop.save('map_pngs/comparisons/2019_LEGEND.png', quality=1000)\n\n\n\n\nCode\n#def cropImage(pngName):\n#    im = Image.open('map_pngs/' + pngName + '.png')\n#    im_crop = im.crop((400, 400, 800, 1600))\n#    im_crop.save('map_pngs/' + pngName + '-cropped.png', quality=1000)\n#\n#def cropLegend(pngName):\n#    im = Image.open('map_pngs/' + pngName + '.png')\n#    im_crop = im.crop((480, 370, 830, 920))\n#    im_crop.save('map_pngs/' + pngName + '-cropped.png', quality=1000)\n\n\n\n\nCode\n#cropImage('vol19')\n#cropImage('vol50')\n#cropImage('vol19-truck')\n#cropImage('vol50-truck')\n#cropLegend('vol-legend')\n#cropLegend('vol-truck-legend')"
  },
  {
    "objectID": "v9x/v901/validation/4-assignhwy.html",
    "href": "v9x/v901/validation/4-assignhwy.html",
    "title": "Highway Assignment",
    "section": "",
    "text": "Validation of final highway assignment was done comparing model outputs from the final loaded networks with observed data. The comparisons were done with volumes and speeds."
  },
  {
    "objectID": "v9x/v901/validation/4-assignhwy.html#volumes",
    "href": "v9x/v901/validation/4-assignhwy.html#volumes",
    "title": "Highway Assignment",
    "section": "Volumes",
    "text": "Volumes\nThe validation results for the Highway Assignment portion of the model are shown in this section. The observed data for 2019 volumes is taken from the Utah Department of Transportation (UDOT) Average Annual Daily Traffic (AADT) History and associated with their respective model segments. The traffic model data is taken from segment summary report for the 2019 base year model: v901_SE19_Net19_Summary_SEGID.csv. The results are divided into three sections:\n\nSummary Comparison\nDetailed Comparison\nMap Comparison\n\n\n\nCode\nimport {GroupedBarChart} from \"@d3/grouped-bar-chart\"\nimport {Legend, Swatches} from \"@d3/color-legend\"\nimport {howto, altplot} from \"@d3/example-components\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSummary Comparison\nThe summary comparison shows region and county-wide differences between model and observed for Average Daily Volume and Vehicle-Miles Traveled (VMT) by vehicle type. The values for Box Elder and Weber counties are only the portions within the MPO planning area. Validation was checked comparing the average daily volume at the region and county levels. Figure 1, below, contains an interactive view of model vs observed differences by roadway class and vehicle type.\n\n\nCode\nhtml`&lt;br/&gt;`\n\n\n\n\n\n\n\n\n\nCode\nviewof bSummaryFuncClass = Inputs.select(new Map([['All Roadways','All Roadways'], ['Freeway','Freeway'], ['Principal','Principal'], ['Minor', 'Minor'], ['Collector', 'Collector']]), {value: 'All Roadways', label: \"Roadway Class:\"})\nviewof bSummaryVehType = Inputs.select(new Map([['All Vehicles','All Vehicles'], ['Passenger Cars', 'Passenger Cars'], ['Medium Trucks','Medium Trucks'], ['Heavy Trucks','Heavy Trucks']]), {value: 'All Vehicles', label: \"Vehicle Type:\"})\nviewof bSummaryDiffType = Inputs.select(new Map([['Percent Difference','DiffPct'], ['Difference','Diff']]), {value: 'DiffPct', label: \"Display:\"})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nvolDiffLongT = transpose(volDiffLong)\nvmtDiffLongT = transpose(vmtDiffLong)\n\nvolDiffLongT_filtered = volDiffLongT.filter(function(dataL) {\n    return bSummaryFuncClass == dataL.funcClass &&\n           bSummaryVehType == dataL.vehType &&\n           (('vol' + bSummaryDiffType) == dataL.View);\n})\nvmtDiffLongT_filtered = vmtDiffLongT.filter(function(dataL) {\n    return bSummaryFuncClass == dataL.funcClass &&\n           bSummaryVehType == dataL.vehType &&\n           (('vmt' + bSummaryDiffType) == dataL.View);\n})\n\nvvp = transpose(vvpct)\nvvpL = transpose(vvpctLong)\nvvaL = transpose(vvabsLong)\nvvaLR = transpose(vvabsLongR)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nimport {DivergingBarChart} from \"@d3/diverging-bar-chart\"\n\nfunction getXDomainVol(bSummaryDiffType) {\n    if (bSummaryDiffType === \"Diff\") {\n        return [max_abs_value_volDiff * -1, max_abs_value_volDiff];\n    } else {\n        //return [max_abs_value_volDiffPct * -1, max_abs_value_volDiff]; // -100% to 100%\n        return [-100, 100]\n    }\n}\n\nfunction getXDomainVmt(bSummaryDiffType) {\n    if (bSummaryDiffType === \"Diff\") {\n        return [max_abs_value_vmtDiff * -1, max_abs_value_vmtDiff];\n    } else {\n        //return [max_abs_value_vmtDiffPct * -1, max_abs_value_vmtDiff]; // -100% to 100%\n        return [-1,1]\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nhtml`&lt;br/&gt;&lt;h4&gt;Average Daily Volume&lt;/h4&gt;`\n\n\n\n\n\n\n\n\n\nCode\nchartVolDiff = DivergingBarChart(volDiffLongT_filtered, {\n    x: d =&gt; d.ViewValue,\n    y: d =&gt; d.coFips,\n    xFormat: bSummaryDiffType === \"Diff\" ? \"+,d\" : \"+.1%\",\n    xLabel: \"Model vs Observed Differences\",\n    width: 440,\n    xDomain: bSummaryDiffType === \"Diff\" ? [max_abs_value_volDiff * -1, max_abs_value_volDiff] : [-1, 1], //[max_abs_value_volDiffPct * -1, max_abs_value_volDiffPct],\n    yDomain:  ['Region','Box Elder County - WFRC','Weber County - WFRC','Davis County','Salt Lake County','Utah County'],\n    colors: d3.schemeRdBu[3]\n})\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nhtml`&lt;br/&gt;&lt;h4&gt;Vehicle-Miles Traveled&lt;/h4&gt;`\n\n\n\n\n\n\n\n\n\nCode\nchartVmtDiff = DivergingBarChart(vmtDiffLongT_filtered, {\n    x: d =&gt; d.ViewValue,\n    y: d =&gt; d.coFips,\n    xFormat: bSummaryDiffType === \"Diff\" ? \"+,d\" : \"+.1%\",\n    xLabel: \"Model vs Observed Differences\",\n    width: 440,\n    xDomain: bSummaryDiffType === \"Diff\" ? [max_abs_value_vmtDiff * -1, max_abs_value_vmtDiff] : [-1, 1], //[max_abs_value_vmtDiffPct * -1, max_abs_value_vmtDiffPct],\n    yDomain:  ['Region','Box Elder County - WFRC','Weber County - WFRC','Davis County','Salt Lake County','Utah County'],\n    colors: d3.schemeRdBu[3]\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ntbEmptyCell1 = 1\n\n\n\n\n\n\nFigure 1: Highway Assignment Summary Comparison\n\n\n\nAt the region level model volume is 0.4% lower than observed volume. The four more urban counties (Weber, Davis, Salt Lake, and Davis) were all within 5% of observed volumes with Salt Lake County being the closest. Weber and Davis were slightly lower and Utah County was slightly higher. Box Elder County is more rural than the other counties. Box Elder model volumes are about 10% lower than observed. Time did not allow for further calibration of the volumes in Box Elder area to account for the larger differences.\nOne important observation at the Collector and All Vehicles level is that Utah County shows a much higher difference than the other counties. Upon further investigation of observed Collector volumes in Utah County, many roadway segments had very low volumes compared to what was expected. Utah County is one of the highest growth areas in the region. For this reason, we expect that the observed count data may be underrepresenting actual volumes. We also anticipate observed volumes in Utah County to improve in the near-term. Within the last several years, a large investment in continuous count station in Utah County has been made. The new counters will add additional information to generate observed volumes for all roadway segments.\nThe largest differences in model vs observed volumes occur in the Medium Truck and Heavy Truck vehicle types. A good amount of time was spent attempting to bring model truck volumes closer to observed. However, due to the limited data sources for truck information, further need to investigate observed truck volumes, and a desire to not over-calibrate the model, further calibration was stopped. Truck modeling remains a future priority for model improvement.\n\n\nDetailed Comparison\nThe model vs observed details in this section are presented by volume and Vehicle-Miles Traveled (VMT) through the comparison of model and observed data facility type by region and also by county. Figure 2 allows for the interactive visual comparison of model and observed values for the region and each county for all vehicles, cars, medium trucks, and heavy trucks. The comparisons are shown in four different types of charts and tables:\n\nAverage Daily Volume by Roadway Class (2a): The daily volume is averaged across all segments within their respective geography and vehicle type.\nTotal VMT by Roadway Class (2b): For each segment*, the daily volume is multiplied by segment distance and then summed across all segments within their respective geography and vehicle type.\nModel vs Count Segment Volume (2c): This is a scatter plot of segment daily volume with the x-axis as the observed volume and the y-axis as the model volume. The red line shows the location of where model and observed volumes are equal. The dashed blue line shows a least-squares linear regression. The further the blue line moved away from the red line, the further the model is from observed.\nSegment Percent Error (2d): This is a scatter plot showing the amount of error (percent difference) between the observed volume and the model volume. The observed volume is the x-axis and the percent error is the y-axis. The red lines are a bounding box that shows the control target. As volume increases, it is expected that the percent error should decrease.\n\n\n\nCode\nhtml`&lt;br/&gt;`\n\n\n\n\n\n\n\n\n\nCode\nviewof bCountySelect = Inputs.select(new Map([['Region', 'Region'], ['Box Elder County - WFRC',3], ['Weber County - WFRC',57], ['Davis County',11], ['Salt Lake County',35], ['Utah County',49]]), {value: 'All', label: \"Geography:\"})\nviewof bVehType = Inputs.select(new Map([['All Vehicles','All Vehicles'], ['Passenger Cars', 'Passenger Cars'], ['Medium Trucks','Medium Trucks'], ['Heavy Trucks','Heavy Trucks']]), {value: 'All Vehicles', label: \"Vehicle Type:\"})\n\nsortOrder = ['Freeway', 'Principal', 'Minor', 'Collector', 'All Roadways'];\n\nvolT = transpose(vol)\nvmtT = transpose(vmt)\nfiltered_volData = volT.filter(function(dataL) {\n    return bCountySelect == dataL.coFips &&\n           bVehType == dataL.vehType;\n}).sort((a, b) =&gt; sortOrder.indexOf(a.funcClass) - sortOrder.indexOf(b.funcClass));\nfiltered_vmtData = vmtT.filter(function(dataL){\n    return bCountySelect == dataL.coFips &&\n           bVehType == dataL.vehType;\n}).sort((a, b) =&gt; sortOrder.indexOf(a.funcClass) - sortOrder.indexOf(b.funcClass));\n\nvolTL = transpose(volLong)\nvmtTL = transpose(vmtLong)\nfiltered_volDataL = volTL.filter(function(dataL) {\n    return bCountySelect == dataL.coFips &&\n           bVehType == dataL.vehType;\n}).sort((a, b) =&gt; sortOrder.indexOf(a.funcClass) - sortOrder.indexOf(b.funcClass));\nfiltered_vmtDataL = vmtTL.filter(function(dataL){\n    return bCountySelect == dataL.coFips &&\n           bVehType == dataL.vehType;\n}).sort((a, b) =&gt; sortOrder.indexOf(a.funcClass) - sortOrder.indexOf(b.funcClass));\n\n\nallvehplotT = transpose(allvehplot)\nfiltered_allvehplotData = allvehplotT.filter(function(dataL) {\n    return bCountySelect == dataL.coFips &&\n           bVehType == dataL.vehType;\n});\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nfunction formatNumber(value, isPercentage=false) {\n    if (typeof value === 'undefined') {\n        return '';  // or return a default value or message\n    }\n    \n    if (isPercentage) {\n        return (Number(value) * 100).toFixed(1) + '%';\n    }\n    return Number(value.toFixed(0)).toLocaleString();\n}\n\nwidthsVol = ['100px', '52px', '70px', '70px', '73px', '73px', '63px', '63px']; // Define the widths\nwidthsVmt = ['100px', '88px', '88px', '88px', '88px'];\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nhtml`\n&lt;h4&gt;2a. Average Daily Volume by Roadway Class&lt;/h4&gt;\n&lt;table&gt;\n    &lt;thead&gt;\n    &lt;tr&gt;\n        ${[\"Roadway Class\", \"# Segs\", \"Volume\", \"Observed\", \"Difference\", \"Percent Difference\", \"RMSE\", \"Percent RMSE\"].map((d, i) =&gt; {\n            return html`&lt;th style='text-align: ${i === 0 ? \"left\" : \"right\"}; padding: 5px; width: ${widthsVol[i]};'&gt;${d}&lt;/th&gt;`;\n        })}\n    &lt;/tr&gt;\n    &lt;/thead&gt;\n    &lt;tbody&gt;\n        ${filtered_volData.map(row =&gt; {\n            const isBold = row['funcClass'] === 'All Roadways';\n            return html`&lt;tr style='border-bottom: 1px solid lightgrey;'&gt;\n                ${[\"funcClass\", \"numSegs\", \"volMod\", \"volObs\", \"volDiff\", \"volDiffPct\", \"volRmse\", \"volRmsePct\"].map((d, i) =&gt; {\n                    // Check if the current cell is one of the numeric columns that need formatting\n                    let formattedValue;\n                    if (i === 5 || i === 7) {\n                        formattedValue = formatNumber(row[d], true);  // True for percentage formatting\n                    } else if ((i &gt;= 1 && i &lt;= 4) || i==6) {\n                        formattedValue = formatNumber(row[d]);\n                    } else {\n                        formattedValue = row[d];\n                    }\n                    return html`&lt;td style='text-align: ${i === 0 ? \"left\" : \"right\"}; padding: 5px; font-weight: ${isBold ? 'bold' : 'normal'};'&gt;${formattedValue}&lt;/td&gt;`;\n                })}\n            &lt;/tr&gt;`;\n        })}\n    &lt;/tbody&gt;\n&lt;/table&gt;`\n\n\n\n\n\n\n\n\n\n\nCode\nhtml`&lt;h4&gt;&nbsp;&lt;/h4&gt;`\n\n\n\n\n\n\n\n\n\nCode\nkeyVol = Legend(bChartVol.scales.color, {title: \"Data Source\"})\n\nbChartVol = GroupedBarChart(filtered_volDataL, {\n    x: d =&gt; d.funcClass,\n    y: d =&gt; d.ViewValue,\n    z: d =&gt; d.DataSource,\n    xDomain: ['Freeway','Principal','Minor','Collector','All Roadways'],\n    yLabel: \"Volume (thousands)\",\n    zDomain: ['Model','Observed'],\n    width: 320,\n    height: 175,\n    colors: [\"#376092\", \"#77933c\"]\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nhtml`\n&lt;h4&gt;2b. Total Daily VMT by Roadway Class&lt;/h4&gt;\n&lt;table&gt;\n    &lt;thead&gt;\n    &lt;tr&gt;\n        ${[\"Roadway Class\", \"Model\", \"Observed\", \"Difference\", \"Percent Difference\"].map((d, i) =&gt; {\n            return html`&lt;th style='text-align: ${i === 0 ? \"left\" : \"right\"}; padding: 5px; width: ${widthsVmt[i]};'&gt;${d}&lt;/th&gt;`;\n        })}\n    &lt;/tr&gt;\n    &lt;/thead&gt;\n    &lt;tbody&gt;\n        ${filtered_vmtData.map(row =&gt; {\n            const isBold = row['funcClass'] === 'All Roadways';\n            return html`&lt;tr style='border-bottom: 1px solid lightgrey;'&gt;\n                ${[\"funcClass\", \"vmtMod\", \"vmtObs\", \"vmtDiff\", \"vmtDiffPct\"].map((d, i) =&gt; {\n                    // Check if the current cell is one of the numeric columns that need formatting\n                    let formattedValue;\n                    if (i === 4 || i === 6) {\n                        formattedValue = formatNumber(row[d], true);  // True for percentage formatting\n                    } else if ((i &gt;= 1 && i &lt;= 3) || i==5) {\n                        formattedValue = formatNumber(row[d]);\n                    } else {\n                        formattedValue = row[d];\n                    }\n                    return html`&lt;td style='text-align: ${i === 0 ? \"left\" : \"right\"}; padding: 5px; font-weight: ${isBold ? 'bold' : 'normal'};'&gt;${formattedValue}&lt;/td&gt;`;\n                })}\n            &lt;/tr&gt;`;\n        })}\n    &lt;/tbody&gt;\n&lt;/table&gt;`\n\n\n\n\n\n\n\n\n\n\nCode\nhtml`&lt;h4&gt;&nbsp;&lt;/h4&gt;`\n\n\n\n\n\n\n\n\n\nCode\nkeyVmt = Legend(bChartVmt.scales.color, {title: \"Data Source\"})\n\nbChartVmt = GroupedBarChart(filtered_vmtDataL, {\n    x: d =&gt; d.funcClass,\n    y: d =&gt; d.ViewValue,\n    z: d =&gt; d.DataSource,\n    xDomain: ['Freeway','Principal','Minor','Collector','All Roadways'],\n    yLabel: \"VMT (millions)\",\n    zDomain: ['Model','Observed'],\n    width: 320,\n    height: 175,\n    colors: [\"#376092\", \"#77933c\"]\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nimport {max} from 'd3-array';\n\n\n\n\n\n\n\n\n\nCode\nmaxVal = {\n  return Math.max(\n    d3.max(filtered_allvehplotData, d =&gt; d.volObs),\n    d3.max(filtered_allvehplotData, d =&gt; d.volMod)\n  );\n}\n\n\n\n\n\n\n\n\n\nCode\nhtml`&lt;h4&gt;2c. Model vs Observed Volumes&lt;/h4&gt;`\n\n\n\n\n\n\n\n\n\nCode\nPlot.plot({\n  grid: true,\n  width: 460,\n  height: 300,\n  marginRight: 40,\n  x: {\n    label: \"Observed Volume (thousands)\",\n    domain: [0, maxVal]\n  },\n  y: {\n    label: \"Model Volume (thousands)\",\n    domain: [0, maxVal]\n  },\n  marks: [\n    Plot.dot(filtered_allvehplotData, {\n      x: \"volObs\",\n      y: \"volMod\",\n      r: 1,\n      fill: \"rgb(80, 116, 230)\",\n      fillOpacity: 0.5,\n      stroke: \"none\"\n    }),\n    Plot.link([0.6, 0.7, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4], {\n      x1: 0,\n      y1: 0,\n      x2: maxVal,\n      y2: (k) =&gt; maxVal * k,\n      strokeOpacity: (k) =&gt; k === 1 ? 1 : 0.2,\n      stroke: \"red\",\n      strokeWidth: (k) =&gt; k === 1 ? 2 : 1.5\n    }),\n    Plot.text([0.6, 0.7, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4], {\n      x: maxVal,\n      y: (k) =&gt; maxVal * k,\n      text: ((f) =&gt; (k) =&gt; k === 1 ? \"Equal\" : f(k - 1))(d3.format(\"+.0%\")),\n      textAnchor: \"start\",\n      dx: 6\n    }),\n    Plot.linearRegressionY(filtered_allvehplotData, {\n        x: \"volObs\",\n        y: \"volMod\",\n        stroke: \"rgb(80, 116, 230)\",\n        strokeDasharray: \"4 4\",  // This creates a dashed line pattern,\n        strokeWidth: 2 \n    })\n  ]\n})\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nhtml`&lt;h4&gt;2d. Segment Percent Error&lt;/h4&gt;`\n\n\n\n\n\n\n\n\n\nCode\nPlot.plot({\n  grid: true,\n  width: 460,\n  height: 300,\n  marginRight: 40,\n  x: {\n    label: \"Observed Volume (thousands)\",\n    domain: [0, maxVal]\n  },\n  y: {\n    label: \"Percent Error\",\n    domain: [-2, 2],\n    tickFormat: d3.format(\".0%\")\n  },\n  marks: [\n    Plot.dot(filtered_allvehplotData, {\n      x: \"volObs\",\n      y: \"volErrorPct\",\n      r: 1,\n      fill: \"rgb(80, 116, 230)\",\n      fillOpacity: 0.5,\n      stroke: \"none\"\n    }),\n    Plot.ruleY([2], {\n      x1: 0,\n      x2: 1,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleX([1], {\n      y1: 1,\n      y2: 2,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleY([1], {\n      x1: 1,\n      x2: 2.5,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleX([2.5], {\n      y1: 0.5,\n      y2: 1.0,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleY([0.5], {\n      x1: 2.5,\n      x2: 5,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleX([5], {\n      y1: 0.25,\n      y2: 0.50,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleY([0.25], {\n      x1: 5,\n      x2: 10,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleX([10], {\n      y1: 0.20,\n      y2: 0.25,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleY([0.20], {\n      x1: 10,\n      x2: 25,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleX([25], {\n      y1: 0.15,\n      y2: 0.20,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleY([0.15], {\n      x1: 25,\n      x2: 50,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleX([50], {\n      y1: 0.10,\n      y2: 0.15,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleY([0.10], {\n      x1: 50,\n      x2: 300,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleY([-2], {\n      x1: 0,\n      x2: 1,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleX([1], {\n      y1: -1,\n      y2: -2,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleY([-1], {\n      x1: 1,\n      x2: 2.5,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleX([2.5], {\n      y1: -0.5,\n      y2: -1.0,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleY([-0.5], {\n      x1: 2.5,\n      x2: 5,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleX([5], {\n      y1: -0.25,\n      y2: -0.50,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleY([-0.25], {\n      x1: 5,\n      x2: 10,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleX([10], {\n      y1: -0.20,\n      y2: -0.25,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleY([-0.20], {\n      x1: 10,\n      x2: 25,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleX([25], {\n      y1: -0.15,\n      y2: -0.20,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleY([-0.15], {\n      x1: 25,\n      x2: 50,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleX([50], {\n      y1: -0.10,\n      y2: -0.15,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleY([-0.10], {\n      x1: 50,\n      x2: 300,\n      stroke: \"red\",\n      strokeWidth: 2\n    })\n  ]\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ntbEmptyCell2 = 1\n\n\n\n\n\n\nFigure 2: Detailed Model vs Observed Comparison of Highway Assignment\n\n\n\n\n\nMap Comparison\nThe maps in Figure 3 shows a comparison of segment level model vs observed volumes by vehicle types. Blue represents model lower than observed and red represent model volume higher than observed.\n\n\n\nFigure 3: Segment-Level Model vs Observed Volume Comparison by Vehicle Type\n\n\nLooking at the All Vehicles map, the model volumes are lower than observed for by more than 15,000 vehicles per day for the east side of I-215 and for I-15 through northern Utah County. Model volumes are higher than observed volumes by more than than 15,000 vehicles for I-15 in southern Salt lake County and for I-15 in Utah County between Springville and Spanish Fork. When looking at these areas by vehicle type, the drop in Cars and Light Trucks are actual greater since the Medium Trucks and Heavy Trucks in these areas are greater in the model vs observed. Outside of these areas, the volume differences between model and observed are relatively minor.\nThe lower arterial model vs observed volumes of Heavy Trucks on 9000 South in Salt Lake County was further investigated. The Heavy Truck observed volume for this roadway seemed much higher than expected for this roadway. The lower volumes are likely due to the observed data and not anything in the model."
  },
  {
    "objectID": "v9x/v901/validation/4-assignhwy.html#speeds",
    "href": "v9x/v901/validation/4-assignhwy.html#speeds",
    "title": "Highway Assignment",
    "section": "Speeds",
    "text": "Speeds\nComparisons were made between model and observed for a sample of OD pairs. Observed speeds come from sampled data at various time periods in 2019 for the WFRC area using the Google API for reported travel times between coordinates for an origin and destination. Model speeds come from the final network skims that report travel times between all TAZs in the model for each period of the day. The two data sets were joined using a coordinate to TAZ spatial join to locate Google end points to match their respective TAZ.\n\n\n\n\n\n\n\nCode\nhtml`&lt;br/&gt;`\n\n\n\n\n\n\n\n\n\nCode\nviewof vPeriod = Inputs.select(new Map([['AM','AM'], ['Midday','MD'], ['PM','PM'], ['Evening', 'EV']]), {value: 'AM', label: \"Period:\"})\n\nspeedT = transpose(speed)\n\nspeedT_filtered = speedT.filter(function(dataSpd) {\n    return vPeriod == dataSpd.Period;\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nhtml`&lt;h4&gt;Model vs Observed Speeds&lt;/h4&gt;`\n\n\n\n\n\n\n\n\n\nCode\nPlot.plot({\n  grid: true,\n  width: 460,\n  height: 300,\n  marginRight: 40,\n  x: {\n    label: \"Observed Speed (mph)\",\n    domain: [0, 70]\n  },\n  y: {\n    label: \"Model Speed (mph)\",\n    domain: [0, 70]\n  },\n  marks: [\n    Plot.dot(speedT_filtered, {\n      x: \"spdObs\",\n      y: \"spdMod\",\n      r: 1,\n      fill: \"rgb(80, 116, 230)\",\n      fillOpacity: 0.5,\n      stroke: \"none\"\n    }),\n    Plot.linearRegressionY(speedT_filtered, {\n        x: \"spdObs\",\n        y: \"spdMod\",\n        stroke: \"rgb(80, 116, 230)\",\n        strokeDasharray: \"4 4\",  // This creates a dashed line pattern,\n        strokeWidth: 2 \n    })\n  ]\n})\n\n\n\n\n\n\n\n\n\n:::"
  },
  {
    "objectID": "v9x/v901/whats-new/1-overview.html",
    "href": "v9x/v901/whats-new/1-overview.html",
    "title": "Overview",
    "section": "",
    "text": "Version 9.0.1 is a minor update to the Wasatch Front Travel Demand Model. The model processes and parameters are the same as version 9.0.0. Minor changes were made to a few of the primary input files and to the model scripts. These changes were primarily to fix issues in data and calculations or to further enhance the model’s capability or reporting. It is not anticipated that the changes made to the model would affect project decisions. However, model users should verify this for individual projects.\nChanges to the model inputs in version 9.0.1 include minor updates made to the TAZ shapefile and transit networks. More significant updates were made to the highway network and segment shapefile. The updates to the highway network include changing the network geometry and link/node structure to align with the updated planning segments, correcting issues in project coding and zone connection, and general maintenance. The updates to the segment shapefile include additional segments, deleted segments, field reordering, and various segment realignments. Because of the large number of edits made to the highway network link/node structure and to the segment shapefile, network and segment related reporting in version 9.0.1 are not backward compatible with version 9.0.0.\nChanges made to the model scripts in version 9.0.1 include edits for minor issue resolution, file renaming, and various cleanup items meant to improve the model’s capability and cleanliness."
  },
  {
    "objectID": "v9x/v901/whats-new/2-input-files.html",
    "href": "v9x/v901/whats-new/2-input-files.html",
    "title": "Changes to Input Files",
    "section": "",
    "text": "The following attributes in the TAZ shapefile were updated (note, TAZ geometry and numbering were unchanged).\nCity Name\n\nThe value “Mill Creek” was replaced with “Millcreek” in the CITY_NAME field\nThe CITY_UGRC and CITY_FIPS fields were updated to be consistent with CITY_NAME\nA new City district shapefile was created based on updated the city name and ID fields\n\nDevelopable Acres\n\nThe DEVACRES and DEVPBLEPCT fields were set to 0 in TAZs with no developable land. A new point shapefile, undevelopable-points_WF.shp, was added to the 1_Inputs\\1_TAZ\\_Source\\EnvConstraints folder to keep track of these override undevelopable TAZs. Figure 1 shows which TAZs had their fields set to 0.\n\n\n\nCode\nL = require('leaflet@1.2.0')\nhtml`&lt;link href='${resolve('leaflet@1.2.0/dist/leaflet.css')}' rel='stylesheet' /&gt;`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ngeojsonTaz    = FileAttachment(\"data/WFv901_TAZ_20240412.geojson\"   ).json()\n\n\n\n\n\n\n\n\n\n\n\nCode\nmapTazUndvp= {\n\n  let container = DOM.element('div', { style: `width:${width}px;height:${width/1.6}px` });\n  yield container;\n  \n  let map = L.map(container).setView([40.7608, -111.8910], 8.25);\n\n  let greyLayer = L.tileLayer('https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png', {\n    attribution: '&copy; &lt;a href=\"https://www.openstreetmap.org/copyright\"&gt;OpenStreetMap&lt;/a&gt; contributors'\n  }).addTo(map);\n\n  let tazColors = ['#00887F'   ,'#BD0026'       ]\n  let tazLabels = ['Developable Space','Undevelopable Space'];\n  \n  let lyrTAZNew = L.geoJson(geojsonTaz, {\n                            style: function(feature) {\n                              var d = feature.properties.DEVPBLEPCT;\n                              return d&gt;0  ? {color:tazColors[0], weight:1, opacity:0.95} :\n                                     d==0 ? {color:tazColors[1], weight:1, opacity:0.95} : \n                                            {color:    '#000000', weight:1, opacity:0.95} ;\n                            }\n  }).addTo(map);\n  \n  var legend = L.control({position: 'bottomleft'});\n  legend.onAdd = function (map) {\n    var div = L.DomUtil.create('div', 'legend');\n    div.innerHTML = '';\n    for (var i = 0; i &lt; tazLabels.length; i++) {\n      div.innerHTML += '&lt;i style=\"background:' + tazColors[i] + '\"&gt;&nbsp;&lt;/i&gt; ' + tazLabels[i] + '&lt;br/&gt;';\n    }\n\n    // Add CSS style for the background color\n    div.style.backgroundColor = 'lightgray';\n    div.style.padding = '10px';\n    \n    return div;\n  };\n  legend.addTo(map);\n}\n\n\n\n\n\n\nFigure 1: TAZs with Undevelopable Acres\n\n\n\n\n\n\nThe TAZ shapefile was renamed from TAZ.shp to WFv901_TAZ_{date-stamp}.shp to comply with the new model file naming convention determined by the Interagency Modeling Technical Committee (IMTC). The TAZ_DBF variable was updated in the Scenarios\\_default\\ControlCenter.block files."
  },
  {
    "objectID": "v9x/v901/whats-new/2-input-files.html#traffic-analysis-zone",
    "href": "v9x/v901/whats-new/2-input-files.html#traffic-analysis-zone",
    "title": "Changes to Input Files",
    "section": "",
    "text": "The following attributes in the TAZ shapefile were updated (note, TAZ geometry and numbering were unchanged).\nCity Name\n\nThe value “Mill Creek” was replaced with “Millcreek” in the CITY_NAME field\nThe CITY_UGRC and CITY_FIPS fields were updated to be consistent with CITY_NAME\nA new City district shapefile was created based on updated the city name and ID fields\n\nDevelopable Acres\n\nThe DEVACRES and DEVPBLEPCT fields were set to 0 in TAZs with no developable land. A new point shapefile, undevelopable-points_WF.shp, was added to the 1_Inputs\\1_TAZ\\_Source\\EnvConstraints folder to keep track of these override undevelopable TAZs. Figure 1 shows which TAZs had their fields set to 0.\n\n\n\nCode\nL = require('leaflet@1.2.0')\nhtml`&lt;link href='${resolve('leaflet@1.2.0/dist/leaflet.css')}' rel='stylesheet' /&gt;`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ngeojsonTaz    = FileAttachment(\"data/WFv901_TAZ_20240412.geojson\"   ).json()\n\n\n\n\n\n\n\n\n\n\n\nCode\nmapTazUndvp= {\n\n  let container = DOM.element('div', { style: `width:${width}px;height:${width/1.6}px` });\n  yield container;\n  \n  let map = L.map(container).setView([40.7608, -111.8910], 8.25);\n\n  let greyLayer = L.tileLayer('https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png', {\n    attribution: '&copy; &lt;a href=\"https://www.openstreetmap.org/copyright\"&gt;OpenStreetMap&lt;/a&gt; contributors'\n  }).addTo(map);\n\n  let tazColors = ['#00887F'   ,'#BD0026'       ]\n  let tazLabels = ['Developable Space','Undevelopable Space'];\n  \n  let lyrTAZNew = L.geoJson(geojsonTaz, {\n                            style: function(feature) {\n                              var d = feature.properties.DEVPBLEPCT;\n                              return d&gt;0  ? {color:tazColors[0], weight:1, opacity:0.95} :\n                                     d==0 ? {color:tazColors[1], weight:1, opacity:0.95} : \n                                            {color:    '#000000', weight:1, opacity:0.95} ;\n                            }\n  }).addTo(map);\n  \n  var legend = L.control({position: 'bottomleft'});\n  legend.onAdd = function (map) {\n    var div = L.DomUtil.create('div', 'legend');\n    div.innerHTML = '';\n    for (var i = 0; i &lt; tazLabels.length; i++) {\n      div.innerHTML += '&lt;i style=\"background:' + tazColors[i] + '\"&gt;&nbsp;&lt;/i&gt; ' + tazLabels[i] + '&lt;br/&gt;';\n    }\n\n    // Add CSS style for the background color\n    div.style.backgroundColor = 'lightgray';\n    div.style.padding = '10px';\n    \n    return div;\n  };\n  legend.addTo(map);\n}\n\n\n\n\n\n\nFigure 1: TAZs with Undevelopable Acres\n\n\n\n\n\n\nThe TAZ shapefile was renamed from TAZ.shp to WFv901_TAZ_{date-stamp}.shp to comply with the new model file naming convention determined by the Interagency Modeling Technical Committee (IMTC). The TAZ_DBF variable was updated in the Scenarios\\_default\\ControlCenter.block files."
  },
  {
    "objectID": "v9x/v901/whats-new/2-input-files.html#highway-network",
    "href": "v9x/v901/whats-new/2-input-files.html#highway-network",
    "title": "Changes to Input Files",
    "section": "Highway Network",
    "text": "Highway Network\n\nNetwork Changes due to Segment Shapefile Updates\nThe highway network was updated to coincide with the updates made to the segment shapefile (see the Segment Shapefile section of this report). Primarily, these changes consisted of adding nodes, splitting links, and updating the SEGID link field. However, a few new corridors were added to the network and some link/nodes positions were changed to better align with the segment shapefile. The edits made to the network node and link geometry to accommodate desired segment updates constitute the vast majority of the geometric changes made to the network in version 9.0.1. Because of the large number of edits made to the highway link-node structure, the version 9.0.1 highway network is not backward compatible with version 9.0.0 highway network.\nThe complexity of the frontage road system in the highway network in future scenarios caused the value in the SEGID field to not be unique for all scenarios. To allow for a link’s SEGID to change between scenarios, a set of SEGID exception fields were added to the Master Network. When SEGID changes in a scenario, the new SEGID is coded into the scenario’s corresponding SEGID exception field. This will trigger an override of the SEGID calculation in the network processor script. Blank values use the primary SEGID field, i.e. no override. The field names for the SEGID exception field set follow the naming convention used for the lane and functional type field set:\n\nBase and TIP years\n\nSGX_2019\nSGX_2023\n\nSGX_2028\n\nFiscally Constrained Plan years\nSGX23_32\nSGX23_42\nSGX23_50\n\nUnfunded Need Plan years\n\nSGX23_32UF\nSGX23_42UF\nSGX23_50UF\n\n\nA new variable, SegIdExField, was added to the 1ControlCenter.block file to select which SEGID exception field to use in the scenario.\n\n\nGeneral Maintenance & Corrections\nClean up work was done to the highway network to fix errors or to do general maintenance. Below is a list of specific changes made to the highway network. Note that the project list coded into the v9.0.1 highway network represents the Regional Transportation Plans adopted May 2023.\nNodes\n\nMAG_NODE field was corrected for 16 nodes\nGEOGKEY field was corrected in 10 instances\nThe PNR fields were updated for two nodes at the Tooele express bus park and ride location where PNR values were set to 0.\n\nLinks\n\nUpdated connections to TAZ 90 and removed 1500 S in Brigham City between 775 W and Hwy 89 (not yet existing or planned in future phases)\nConnected 4600 S from Harrison Blvd to Skyline Drive south of Weber St Campus\nUpdated connection for West Weber Corridor to Hwy 89 and corrected some centroid connections\nRemoved Arsenal Rd in HAFB from 2015-2028 and left connections in TAZs 647, 632, and 655 to the base to the east only\nUpdated I-15 Northbound from Park Ln to 200 N to reflect 4 lanes\nUpdated West Davis/West Weber corridor north of SR 193 to a functional type of 12\nFixed Shephard Ln disconnect\nTurned off link for 400 N / North St where it does not yet cross the rail tracks\nRemoved floating link on 700 S just west of 3000 W in West Pointe\nUpdated 4700 S westbound from 4000 W to 4800 to reflect 2 lanes\nAdjusted the 7400 South from Oquirrh Blvd to MVC RTP Project to be a grade separated crossing at MVC instead of at-grade\nTurned on Herriman Phase 1 project at Silver Sky Dr\nAdded in 520 W (Seg ID 3440_005.8) between 400 N and 2nd St\nAdded in 3200 W from 2100 N to 3500 N and 3500 N from 3200 W to 2200 W (Scannell Swaner development)\nAdded in 4420 W between 4700 W and 5400 S (used Seg ID from UDOT)\nTurned on links for 3800 S between 220 W and 1700 W\nAdded in 3785 S between 6400 W and 7200 W\nAdded in 6000 W between 3500 S and 4100 S\nRemoved local connection between 11800 S and Lake Ave at MVC\nRemoved local connection between 14600 S and 14400 S at Redwood Rd\nAligned Doubleday and Sunrise Ranch in Mapleton with existing roads\nTurned on Ring Road links in Saratoga Springs to match existing conditions\nTurned off 2023 road between Pony Express Parkway and Temple Area (non-foothill)\nFixed network in Saratoga and Eagle Mountain to match existing roadway network\nExtended Foothill frontage roads down to Lariat Blvd in Saratoga Springs\nTurned on Sunset Drive in Eagle Mountain for 2019, 2023, and 2028\nTurned on Mt Airey Drive in Eagle Mountain for 2019, 2023, and 2028\nFixed centroid connection to TAZs 42, 260, 1992, 1993, 2005, and 2006 and edited other centroid connectors to fix unconnected zones\nConnected centroid to TAZ 931 to unfunded network\nRealigned links and added links based on UDOT LRS updates on the following corridors:\n\n500 W / 3700 W between Bluff Ridge Blvd and Antelope Dr\nStation Pkwy / Burke Ln between 1525 W and Park Ln\n1525 W between Station Pkwy / Burke Ln and Clark Ln\nNorth Frontage Rd / 8000 W / 1400 N between 7200 W and Utah State Prison and Correctional Facility\nGordon Ave\nCherry Ln\n13200 S between 1300 W and Highland\nHerriman Main St\nPorter Rockwell Blvd\nLayton Pkwy\nHill Field Rd\n2700 W between WDC and Hill Field Rd\n2200 W between Layton Pkwy and 700 S\n1800 S to 2100 S Connector between SR-126 and 2700 W\n3600 S to 3300 S Connector between 2700 W and 3600 W\nDepot St between 700 S and 1000 E\nShadow Valley between SR-203 and Skyline Pkwy\nFrontage Rd between Shepard Ln and Burton Ln\nPetunia Wy, 9800 S, 17000 E collector roads between 9400 S and Sego Lily Dr and 1300 E and Eastdell Dr\nLincoln Ln and 2000 E collector roads between Highland Dr and 2700 E and 3900 S and 4500 S\n\nFixed HOT23_32 through HOT23_50UF fields to correctly reflect the RTP projects from Farmington to the Utah/Salt Lake County line\n\nBetween the edits made to the highway network for the segment shapefile update and the general network maintenance, approximately 150 nodes and 900 links were added to the highway network in version 9.0.1, the bulk of which occurred in Saratoga Springs, Eagle Mountain, Weber County, Holladay, Sandy, and Draper. Figure 2 highlights the locations of the new nodes and links added to the version 9.0.1 network.\n\n\n\nFigure 2: New Highway Nodes & Links (blue)\n\n\n\n\nRename Master Network\nThe master network was renamed from MasterNet_v9 – {date-stamp}.net to WFv901_MasterNet_{date-stamp}.net to comply with the new model file naming convention determined by the Interagency Modeling Technical Committee (IMTC). The MasterPrefix variable was updated in the Scenarios\\_default\\ControlCenter.block files."
  },
  {
    "objectID": "v9x/v901/whats-new/2-input-files.html#transit-networks",
    "href": "v9x/v901/whats-new/2-input-files.html#transit-networks",
    "title": "Changes to Input Files",
    "section": "Transit Networks",
    "text": "Transit Networks\n\nChanges to Transit Line Files\nThe changes made to the transit line files were to make the line files compatible with the highway network geometry edits, primarily where links were split along a transit route. The project list coded into the v9.0.1 transit network represents the Regional Transportation Plans adopted May 2023."
  },
  {
    "objectID": "v9x/v901/whats-new/2-input-files.html#segment-shapefile",
    "href": "v9x/v901/whats-new/2-input-files.html#segment-shapefile",
    "title": "Changes to Input Files",
    "section": "Segment Shapefile",
    "text": "Segment Shapefile\n\nChanges to Segment Attributes and Geometry\nThe segment shapefile was updated extensively to allow for future segment-level processing of the transit results, to develop a more accurate traffic volume forecast, and to correct for compatibility issues with the highway network. Hundreds of new segments were added and many were deleted or adjusted to better reflect the current and future physical roadway. Because of the large number of edits made to the segments, the segment shapefile and any segment reporting in version 9.0.1 are not backward compatible with version 9.0.0.\nOverall, there were approximately 5000 changes to the SEGID value between version 9.0.0 and version 9.0.1. This includes the addition of around 3000 new SEGID values and the renaming of around 2000 SEGID values. SEGID shapefile edits were also reflected in the highway network. Table 1 gives the percentage of SEGID changes by county. The majority of SEGID updates occurred in Utah County followed by Salt Lake County.\n\n\n\n\n\n\n\n\n\nTable 1: Percentage of SEGID Changes by County\n\n\nCounty\nChange in SEGID\n\n\n\n\nBox Elder\n1%\n\n\nWeber\n3%\n\n\nDavis\n6%\n\n\nSalt Lake\n21%\n\n\nUtah\n69%\n\n\n\n\n\n\n\n\nEagle Mountain saw the most SEGID changes (22%), followed by Saratoga Springs (8%), Santaquin (6%), West Jordan (5%), and Payson (5%).\nFigure 3 shows where SEGIDs changes occurred between versions 9.0.0 and 9.0.1 in the model network. This provides a representation of where new and adjusted segments are located in segment shapefile.\n\n\n\nFigure 3: Highway Links and New or Adjusted SEGID Value (blue)\n\n\n\n\nRenamed Segment Shapefile\nThe segment shapefile was renamed from Segments_WF – {date-stamp}.shp to WFv901_Segments_{date-stamp}.shp to comply with statewide naming standards as determined by the Interagency Modeling Technical Committee (IMTC).\n\n\nAdded _Segment Processing Tools Folder\nA new methodology was developed and utilized for updating the segment shapefile. This process is documented in a Jupyter notebook file 0-How-to-Prep-Segments-for-TDM.ipynb located in a new folder 1_Inputs\\6_Segment\\_Segment Processing Tools. In short, this script outlines five steps to be followed when developing new and updated segments.\n\nEnsure consistency between the master network and segment shapefile.\n\nUnique SEGIDs in shapefile.\nCorrect DISTANCE.\nCorrect LRS Segments BMP, EMP, and DISTANCE.\nTDM Network includes all SEGIDs.\nSegment Shapefile includes all SEGIDs.\nCorrect geographic coordinate system.\n\nAdd Geographic Keys onto Segments (SUBAREAID, PLANAREA, CO_FIPS).\nAdd AADTs onto Segments.\nAdd Factors from Continuous Count Station groups.\nAdd final forecasts from forecasts process.\n\nThis new process ensures the segment shapefile is ready for the traffic volume forecasts map, as well as ensures only the needed and relevant attributes are included."
  },
  {
    "objectID": "v9x/v901/whats-new/3-model-enhancements.html",
    "href": "v9x/v901/whats-new/3-model-enhancements.html",
    "title": "Model Enhancements",
    "section": "",
    "text": "The following sections highlight the scripts that were edited in version 9.0.1 and why those edits were made. These changes were primarily to fix issues in data and calculations or to further enhance the model’s capability or reporting. The changes made to the model scripts are minor and should not affect project decisions.\n\n\na_Setup\\1_InputSetup.s\n\nUpdated checking code block to look for SegIdField and SegIdExField variables from control center\nFixed spelling error in log file reporting\n\nc_NetworkProcessing\\1_NetProcessor.s\n\nAdded code block to use SegIdField and SegIdExField variables from control center to populate SEGID link field\nFixed error in operational project capacity calculation to use 10% increase in capacity if Run_Op_Proj control center variable is on and the Op_Proj link field is greater than zero (previous script used the value in the Op_Proj field as a multiplier on capacity)\nFixed error in the HOV_LYEAR usage so calculation is performed on the general purpose links where there is an adjacent HOV/HOT lane (previous script was coded to process HOV/HOT links)\nMiscellaneous edits to clean up script\n\nc_NetworkProcessing\\4_Create_walk_xfer_access_links.s\n\nUpdated code to point to @ScenarioDir@0_InputProcessing\\UpdatedMasterNet\\@MasterPrefix@.net instead of master network from the input folder\nUpdated code to process only internal zones (i.e. exclude external and dummy zones) to fix an error where walk access links were being generated to external/dummy zones\nAdded SEGID, including code to process SEGID exception field, to the rail network export\n\n\n\n\n2_estimateHOTspeedtoll.s\n\nUpdated code so period speeds and times are not greater than free flow (some locations in the assigned output networks displayed HOT speeds greater than free flow)\nRounded free flow and daily speed to 1 decimal and rounded all times to 3 decimals\nNote, similar edits were made in 5_AssignHwy\\04_SummarizeLoadedNetworks.s\n\n\n\n\n11-13_MC_HBW_HBO_NHB_HBC.s\n\nAppended the content of 13_DailyModeSplit.s script to the end of 11_12_MC_HBW_HBO_NHB_HBC.s script\nRenamed 11_12_MC_HBW_HBO_NHB_HBC.s script to 11-13_MC_HBW_HBO_NHB_HBC.s\nDeleted 13_DailyModeSplit.s\nUpdated script references in _HailMary.s, __HailMary_1Subfolder.s, and __HailMary_2Subfolders.s in the Scenarios\\_default folder\n\n\n\n\n02_Assign_AM_MD_PM_EV and 04_SummarizeLoadedNetworks.s\n\nScripts were updated to create additional select link summary statistics and to provide enhanced reporting\nSelect link information are reported for a summary of trip purposes and vehicle classes and time period\nLike other select link data, new select link files are only created if the Use_SelLinkGrp parameter in the control center is set to 1\n02_Assign_AM_MD_PM_EV.s edits:\n\nAdded code to output daily origin-destination (OD) vehicle trip matrices\nAdded code to create a new report, @unloadednetprefix@_SL_Summary.csv located in the scenario 5_AssignHwy\\3_SelectLink folder, that lists row and column sums from the period OD vehicle trips\n\n04_SummarizeLoadedNetworks.s\n\nAdded code to create two new networks, @unloadednetprefix@__SL_TotVolume.net and @unloadednetprefix@__SL_MaxVolume.net located in the scenario _AssignHwy\\2a_Networks folder:\n\nSL_TotVolume.net – shows the percentage of select link volume of each link to total roadway volume of each link\nSL_MaxVolume.net – shows the percent of select link volume of each link to the total (or max) volume of the selected link\n\n\n\n07_PerformFinalNetSkim.s\n\nCode was modified to report no-access time and distance values to be 9999 (previously was 10000)\nCode was updated so in-vehicle times and distances and terminal times are no longer reported for unconnected zones\n\n08_Access_to_Opportunity.s\n\nRenamed output to @RID@_Access_to_Opportunity.csv (was Access_to_Opportunity_@DemographicYear@.csv)\nOutput report moved to 5_AssignHwy\\4_Summaries (was 7_PostProcessing)\nRead in scenario network node file and changed straight line distance calculation to use highway network zone centroid locations\nUpdated script to not report data for unused (dummy) zones and externals\nPerformed miscellaneous edits for general clean up\n\n7_PostProcessing\n\nThe Compare_2Assignments.s and Compare_2MasterNet.s postprocessing scripts were adjusted to change the input network variables from net_compare and net_base to net_1 and net_2, respectively\nCompare_2MasterNet.s fields updated to reflect RTP 2023 scenario years\n\n\n\n\n1ControlCenter - XXXX.block\n\nModified references to model version from v9.0 or v9 to v9.0.1 or v901, respectively\nUpdated input variable references to TAZ shapefile, master highway network, and master link shapefile\nAdded SEGIDField and SEGIDExField variables\n\n_HailMary.s, _HailMary_1Subfolder.s, and _HailMary_2Subfolders.s\n\nRenamed 11_12_MC_HBW_HBO_NHB_HBC.s script to 11-13_MC_HBW_HBO_NHB_HBC.s\nDeleted 13_DailyModeSplit.s"
  },
  {
    "objectID": "v9x/v901/whats-new/3-model-enhancements.html#miscellaneous-script-edits-bug-fixes",
    "href": "v9x/v901/whats-new/3-model-enhancements.html#miscellaneous-script-edits-bug-fixes",
    "title": "Model Enhancements",
    "section": "",
    "text": "The following sections highlight the scripts that were edited in version 9.0.1 and why those edits were made. These changes were primarily to fix issues in data and calculations or to further enhance the model’s capability or reporting. The changes made to the model scripts are minor and should not affect project decisions.\n\n\na_Setup\\1_InputSetup.s\n\nUpdated checking code block to look for SegIdField and SegIdExField variables from control center\nFixed spelling error in log file reporting\n\nc_NetworkProcessing\\1_NetProcessor.s\n\nAdded code block to use SegIdField and SegIdExField variables from control center to populate SEGID link field\nFixed error in operational project capacity calculation to use 10% increase in capacity if Run_Op_Proj control center variable is on and the Op_Proj link field is greater than zero (previous script used the value in the Op_Proj field as a multiplier on capacity)\nFixed error in the HOV_LYEAR usage so calculation is performed on the general purpose links where there is an adjacent HOV/HOT lane (previous script was coded to process HOV/HOT links)\nMiscellaneous edits to clean up script\n\nc_NetworkProcessing\\4_Create_walk_xfer_access_links.s\n\nUpdated code to point to @ScenarioDir@0_InputProcessing\\UpdatedMasterNet\\@MasterPrefix@.net instead of master network from the input folder\nUpdated code to process only internal zones (i.e. exclude external and dummy zones) to fix an error where walk access links were being generated to external/dummy zones\nAdded SEGID, including code to process SEGID exception field, to the rail network export\n\n\n\n\n2_estimateHOTspeedtoll.s\n\nUpdated code so period speeds and times are not greater than free flow (some locations in the assigned output networks displayed HOT speeds greater than free flow)\nRounded free flow and daily speed to 1 decimal and rounded all times to 3 decimals\nNote, similar edits were made in 5_AssignHwy\\04_SummarizeLoadedNetworks.s\n\n\n\n\n11-13_MC_HBW_HBO_NHB_HBC.s\n\nAppended the content of 13_DailyModeSplit.s script to the end of 11_12_MC_HBW_HBO_NHB_HBC.s script\nRenamed 11_12_MC_HBW_HBO_NHB_HBC.s script to 11-13_MC_HBW_HBO_NHB_HBC.s\nDeleted 13_DailyModeSplit.s\nUpdated script references in _HailMary.s, __HailMary_1Subfolder.s, and __HailMary_2Subfolders.s in the Scenarios\\_default folder\n\n\n\n\n02_Assign_AM_MD_PM_EV and 04_SummarizeLoadedNetworks.s\n\nScripts were updated to create additional select link summary statistics and to provide enhanced reporting\nSelect link information are reported for a summary of trip purposes and vehicle classes and time period\nLike other select link data, new select link files are only created if the Use_SelLinkGrp parameter in the control center is set to 1\n02_Assign_AM_MD_PM_EV.s edits:\n\nAdded code to output daily origin-destination (OD) vehicle trip matrices\nAdded code to create a new report, @unloadednetprefix@_SL_Summary.csv located in the scenario 5_AssignHwy\\3_SelectLink folder, that lists row and column sums from the period OD vehicle trips\n\n04_SummarizeLoadedNetworks.s\n\nAdded code to create two new networks, @unloadednetprefix@__SL_TotVolume.net and @unloadednetprefix@__SL_MaxVolume.net located in the scenario _AssignHwy\\2a_Networks folder:\n\nSL_TotVolume.net – shows the percentage of select link volume of each link to total roadway volume of each link\nSL_MaxVolume.net – shows the percent of select link volume of each link to the total (or max) volume of the selected link\n\n\n\n07_PerformFinalNetSkim.s\n\nCode was modified to report no-access time and distance values to be 9999 (previously was 10000)\nCode was updated so in-vehicle times and distances and terminal times are no longer reported for unconnected zones\n\n08_Access_to_Opportunity.s\n\nRenamed output to @RID@_Access_to_Opportunity.csv (was Access_to_Opportunity_@DemographicYear@.csv)\nOutput report moved to 5_AssignHwy\\4_Summaries (was 7_PostProcessing)\nRead in scenario network node file and changed straight line distance calculation to use highway network zone centroid locations\nUpdated script to not report data for unused (dummy) zones and externals\nPerformed miscellaneous edits for general clean up\n\n7_PostProcessing\n\nThe Compare_2Assignments.s and Compare_2MasterNet.s postprocessing scripts were adjusted to change the input network variables from net_compare and net_base to net_1 and net_2, respectively\nCompare_2MasterNet.s fields updated to reflect RTP 2023 scenario years\n\n\n\n\n1ControlCenter - XXXX.block\n\nModified references to model version from v9.0 or v9 to v9.0.1 or v901, respectively\nUpdated input variable references to TAZ shapefile, master highway network, and master link shapefile\nAdded SEGIDField and SEGIDExField variables\n\n_HailMary.s, _HailMary_1Subfolder.s, and _HailMary_2Subfolders.s\n\nRenamed 11_12_MC_HBW_HBO_NHB_HBC.s script to 11-13_MC_HBW_HBO_NHB_HBC.s\nDeleted 13_DailyModeSplit.s"
  },
  {
    "objectID": "v9x/v901/whats-new/4-v901-patch1-update.html",
    "href": "v9x/v901/whats-new/4-v901-patch1-update.html",
    "title": "v901-patch1 Update (2024-04-30)",
    "section": "",
    "text": "An update to v9.0.1 related to SEGID and the SEGID exception fields was accidentally left out of the version published on April 23, 2024, causing the model to crash. The updated scripts were added back into the model.\nA few minor edits were made to the highway network to correct the direction of a oneway frontage road link and to add a few nodes/links to make the network more consistent with v9.0.2. The transit line files were edited to reflect the updated highway network added nodes/links. No changes were made to the RTP project list."
  },
  {
    "objectID": "v9x/v901/whats-new/4-v901-patch1-update.html#changes-to-input-files",
    "href": "v9x/v901/whats-new/4-v901-patch1-update.html#changes-to-input-files",
    "title": "v901-patch1 Update (2024-04-30)",
    "section": "",
    "text": "An update to v9.0.1 related to SEGID and the SEGID exception fields was accidentally left out of the version published on April 23, 2024, causing the model to crash. The updated scripts were added back into the model.\nA few minor edits were made to the highway network to correct the direction of a oneway frontage road link and to add a few nodes/links to make the network more consistent with v9.0.2. The transit line files were edited to reflect the updated highway network added nodes/links. No changes were made to the RTP project list."
  },
  {
    "objectID": "v9x/v901/whats-new/5-v901-patch2-update.html",
    "href": "v9x/v901/whats-new/5-v901-patch2-update.html",
    "title": "v901-patch2 Update (2024-06-24)",
    "section": "",
    "text": "Changes to v9.0.1-patch 2 include: Minor edits to the segment shapefile\nMinor edits to the highway & transit networks\nRename input files\n\nSegment Shapefile Edits\nThe segment shapefile was edited to better visualize bus ridership around rail stations and to fix minor errors. Edits include splitting and adjusting segment geometry and updating related fields in the attribute table.\nHighway & Transit Network Edits\nTwo rail station connector links in the highway network (Farmington commuter rail station and Jordan Valley light rail station on the Red Line) were updated to better reflect station access. Subsequent edits were made to the transit line node strings in the transit line files to ensure the transit network compiled on the highway network. The transit network was also updated for model years 2028 and beyond to better reflect the stops and alignment of the 5600 West core bus route.\nRename Input Files\nThe filenames of the TAZ, Segments, Factor Geographies, and Highway Network were renamed slightly to comply with the updated model file naming convention determined by the IMTC. In addition, the Control Center files were updated to match any filename changes"
  },
  {
    "objectID": "v9x/v901/whats-new/5-v901-patch2-update.html#changes-to-input-files",
    "href": "v9x/v901/whats-new/5-v901-patch2-update.html#changes-to-input-files",
    "title": "v901-patch2 Update (2024-06-24)",
    "section": "",
    "text": "Changes to v9.0.1-patch 2 include: Minor edits to the segment shapefile\nMinor edits to the highway & transit networks\nRename input files\n\nSegment Shapefile Edits\nThe segment shapefile was edited to better visualize bus ridership around rail stations and to fix minor errors. Edits include splitting and adjusting segment geometry and updating related fields in the attribute table.\nHighway & Transit Network Edits\nTwo rail station connector links in the highway network (Farmington commuter rail station and Jordan Valley light rail station on the Red Line) were updated to better reflect station access. Subsequent edits were made to the transit line node strings in the transit line files to ensure the transit network compiled on the highway network. The transit network was also updated for model years 2028 and beyond to better reflect the stops and alignment of the 5600 West core bus route.\nRename Input Files\nThe filenames of the TAZ, Segments, Factor Geographies, and Highway Network were renamed slightly to comply with the updated model file naming convention determined by the IMTC. In addition, the Control Center files were updated to match any filename changes"
  },
  {
    "objectID": "v9x/v901/index.html",
    "href": "v9x/v901/index.html",
    "title": "Preface",
    "section": "",
    "text": "This is the documentation for the Wasatch Front Travel Demand Model Version 9.0.1. The documentation includes the following reports:\n\nWhat’s New Document\nModel Validation Report\n\nFor access to this version of the TDM please contact the following persons:\n\nSuzie Swim (WFRC): sswim@wfrc.org\nTim Hereth (MAG): thereth@magutah.org"
  },
  {
    "objectID": "v9x/v901/validation/3-modechoice.html",
    "href": "v9x/v901/validation/3-modechoice.html",
    "title": "Mode Choice",
    "section": "",
    "text": "The validation results for the Mode Choice portion of the model are shown in this section. Mode Choice was validated against the Utah Transit Authority 2019 On-Board Survey as well as the 2012 Household Travel Survey. Validation is summarized by the following categories:"
  },
  {
    "objectID": "v9x/v901/validation/3-modechoice.html#transit-trips-and-boardings",
    "href": "v9x/v901/validation/3-modechoice.html#transit-trips-and-boardings",
    "title": "Mode Choice",
    "section": "Transit Trips and Boardings",
    "text": "Transit Trips and Boardings\nThe validation of daily transit trips and boardings is shown through the comparison of model and observed data by mode. The model was validated by the following measures:\n\nTrips by Hierarchical Mode\nBoardings by Hierarchical Mode\nTransfer Ratio by Hierarchical Mode\nBoardings by Surveyed Mode (for comparison only)\n\nThe three hierarchical mode measures are summarized by the highest hierarchy mode in a given trip with local bus being the lowest on the hierarchy and commuter rail being the highest. For example, if a trip uses Local Bus and then transfers to LRT, the trip is stored as a LRT trip. Trips by Hierarchical Mode represent each trip as a single number, regardless of the number of transfer or different modes that were used on a trip.\nBoardings by Hierarchical Mode represent each boarding separately but summarized at the highest hierarchical mode of the trip. For example, for one transfer from Local Bus to LRT there are two boardings, one on each mode, but they are both stored in the highest hierarchal mode of LRT. The Transfer Ratio by Hierarchical Mode is the ratio between boardings and trips for any given mode.\nThe final measure Boardings by Surveyed Mode represents the total boardings on each mode individually. They are not summarize at the highest hierarchical mode of the trip but rather at the mode on which the boarding actually occurred. For example, the Local Bus to LRT trip mentioned previously would be summarized in this measure as one boarding on Local Bus and one boarding one LRT. This measure is for comparison use only, since the structure of the Mode Choice model does not consider this measure during calibration.\nThe total number of boardings are the same between hierarchical mode and surveyed mode, but depending on the make-up of the trips, there totals by mode will vary.\nThe model data for hierarchical mode measures is taken from the shares reports v901_SE19_Net19_RegionShares_Pk.csv and v901_SE19_Net19_RegionShares_Ok.csv. The model data for the surveyed mode comparison is taken from _v901_SE19_Net19_1_PA_Route.dbf.\nThe interactive Figure 1 allows for the visual comparison of model and observed values for each Transit Trips and Boardings category.\n\n\nCode\nhtml`&lt;br/&gt;`\n\n\n\n\n\n\n\n\n\nCode\nviewof bPlotSelect = Inputs.select(new Map([['Trips by Hierarchical Mode', 'Trips by Hierarchical Mode'], ['Boardings by Hierarchical Mode', 'Boardings by Hierarchical Mode'], ['Transfer Ratio by Hierarchical Mode','Transfer Ratio'], ['Boardings by Mode Surveyed','Boardings by Mode Surveyed']]), {value: nameGroup, label: \"Category\"})\nviewof metric = Inputs.radio(new Map([[\"Difference\", \"Difference\"], [\"% Difference\", \"% Difference\"]]), {value: \"Difference\", label: \"View:\"})\n\ndataBLC = transpose(boardChart)\nfiltered_bDataC = dataBLC.filter(function(dataBLC) {\n    return bPlotSelect == dataBLC.Title &&\n           \"Value\" == dataBLC.View;\n})\ndataBTT = transpose(boardTable)\nfiltered_bDataT = dataBTT.filter(function(dataBTT) {\n    return bPlotSelect == dataBTT.Title;\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nhtml`\n&lt;br/&gt;\n&lt;table&gt;\n    &lt;thead&gt;\n    &lt;tr&gt;\n        ${[\"Mode\", \"Model\", \"Observed\", \"Difference\", \"% Difference\"].map((d, i) =&gt; {\n            const widths = ['90px', '60px', '70px', '75px', '90px']; // Define the widths\n            return html`&lt;th style='text-align: ${i === 0 ? \"left\" : \"right\"}; padding: 5px; width: ${widths[i]};'&gt;${d}&lt;/th&gt;`;\n        })}\n    &lt;/tr&gt;\n    &lt;/thead&gt;\n    &lt;tbody&gt;\n        ${filtered_bDataT.map(row =&gt; {\n            const isBold = row['Mode'] === 'Total';\n            return html`&lt;tr style='border-bottom: 1px solid lightgrey;'&gt;\n                ${[\"Mode\", \"Model\", \"Observed\", \"Difference\", \"% Difference\"].map((d, i) =&gt; {\n                    const widths = ['90px', '60px', '70px', '75px', '90px']; // Define the widths\n                    return html`&lt;td style='text-align: ${i === 0 ? \"left\" : \"right\"}; padding: 5px; width: ${widths[i]}; font-weight: ${isBold ? 'bold' : 'normal'};'&gt;${row[d]}&lt;/td&gt;`;\n                })}\n            &lt;/tr&gt;`;\n        })}\n    &lt;/tbody&gt;\n&lt;/table&gt;`\n\n\n\n\n\n\n\n\n\n\nCode\nkey2 = Legend(bChart.scales.color, {title: \"Data Source\"})\n\nbChart = GroupedBarChart(filtered_bDataC, {\n    x: d =&gt; d.Mode,\n    y: d =&gt; d.ViewValue,\n    z: d =&gt; d.DataSource,\n    xDomain: ['Local Bus', 'Core Bus', 'Express Bus', 'BRT', 'LRT', 'CRT'],\n    yLabel: \"Value\",\n    zDomain: ['Model','Observed'],\n    width: 500,\n    height: 225,\n    colors: [\"#376092\", \"#77933c\"]\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nfiltered_bData2 = dataBLC.filter(function(dataBLC) {\n    return bPlotSelect == dataBLC.Title  &&\n           metric == dataBLC.View;\n})\n\n//https://observablehq.com/@d3/diverging-bar-chart\nimport {DivergingBarChart} from \"@d3/diverging-bar-chart\"\n\nhtml`&lt;br/&gt;`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nchart3 = DivergingBarChart(filtered_bData2, {\n    x: d =&gt; d.ViewValue,\n    y: d =&gt; d.Mode,\n    xFormat: metric === \"Difference\" ? \"+,d\" : \"+%\",\n    xLabel: \"Model vs Observed Differences\",\n    height: 200,\n    colors: d3.schemeRdBu[3]\n})\n\n\n\n\n\n\n\n\n\n\n\nCode\ntbEmptyCell = 1\n\n\n\n\n\n\nFigure 1: Transit Trips and Boardings Model vs Observed Comparison\n\n\n\n\n\nCode\nhtml`&lt;br/&gt;`\n\n\n\n\n\n\n\nWhen considering Trips by Hierarchical Mode, the calibration routine of the model results in the total number of transit trips in the model being very close to the observed. For this model the model trips are only 0.1% higher than observed for the total number of trips. By mode the differences are within reasonable ranges for the higher trip modes. For example, LRT is only 0.3% high and CRT is only 0.1% low.\nDue to the very low number of trips for Core Bus and Express Bus, their differences are acceptable. Currently, Core Bus for example has only one route. In future phases of the RTP, additional Core Bus service is planned. While further calibration could have brought the Core Bus validation more in line with observed, over-calibrating the model was not desired.\nBoardings by Hierarchical Mode show a similar pattern. Overall boardings are only 1.9% lower in model compared to observed, and the modes Local Bus, LRT, and CRT all within 5%. Core Bus is again the furthest away, but it also is a single route with lower number of boardings as compared to the higher boarding modes.\nThe Transfer Ratio by Hierarchical Mode shows the relationship between the trips and the boardings. While the model was only slightly higher in trips, the boardings were low. This results in a lower transfer ratio, which is still acceptable with all values being within about 5%.\nAnd for comparison, Boardings by Mode Surveyed shows acceptable differences. The Core Bus and Express Bus values show much larger differences; but again given their low volumes, these are reasonable differences."
  },
  {
    "objectID": "v9x/v901/validation/3-modechoice.html#mode-share",
    "href": "v9x/v901/validation/3-modechoice.html#mode-share",
    "title": "Mode Choice",
    "section": "Mode Share",
    "text": "Mode Share\nMode Share validation is shown through the comparison by groups of mode, time period, and trip purpose. For model and observed shares, the total percent for each combination of mode group, time period, and trip purpose adds up to 100%.\nMode groups compared include groupings of auto, transit, vehicle occupancy, and transit modes. The highest nest is motorized and non-motorized down to lower nests of individual transit modes and transit access modes. Shares were calculated for the following mode groupings:\n\nMotorized / Non-Motorized\nAuto / Transit\nDrive Alone / Shared Ride\nShared Ride # of Occupants\nTransit Mode\nTransit Access Mode\n\nAdditionally, the shares were compared by the following time period groupings:\n\nDaily\nPeak\nOff-peak\n\nFinally, the shares were further compared for each of the following trip purposes:\n\nAll Purposes\nHome-Based Work\nHome-Based College\nHome-Based Other\nNon-Home Based\n\nIn the model, Home-Based College is the only trip purpose that does not include trips in the off-peak time period. So, any trips with this purpose in the observed data were moved to the peak time period for comparison.\nThe interactive Figure 2 allows for selecting of different combinations to visualize the comparisons. The observed data comes from a combination of the Household Travel Survey and the 2019 Transit On-Board Survey.\n\n\nCode\nhtml`&lt;br/&gt;`\n\n\n\n\n\n\n\n\n\nCode\nviewof plotSelect    = Inputs.select(new Map([[nameModeMnMShare,nameModeMnMShare],\n                                              [nameModeATShare ,nameModeATShare ],\n                                              [nameModeDAShare ,nameModeDAShare ],\n                                              [nameMode23Share ,nameMode23Share ],\n                                              [nameModeTransit ,nameModeTransit ],\n                                              [nameModeAccess  ,nameModeAccess  ]\n                                             ]), {value: nameGroup, label: \"Mode Group:\"})\nviewof periodSelect  = Inputs.select(new Map([['Daily', 'DY'], ['Peak', 'PK'], ['Off-Peak', 'OK']]), {value: namePeriod, label: \"Time Period:\"});\nviewof purposeSelect = Inputs.select(new Map([['All Purposes', 'All'], ['Home-Based Work', 'HBW'], ['Home-Based College', 'HBC'], ['Home-Based Other', 'HBO'], ['Non-Home Based', 'NHB']]), {value: 'TripPurpose', label: \"Trip Purpose:\"});\n\ndataLT = transpose(dataLong)\ndataTT = transpose(dataTable)\n\nfiltered_data = dataLT.filter(function(dataL) {\n    return plotSelect == dataL.Group &&\n           periodSelect == dataL.Period &&\n           purposeSelect == dataL.TripPurpose;\n})\ntable_filtered_data = dataTT.filter(function(dataTT) {\n    return plotSelect == dataTT.Group &&\n           periodSelect == dataTT.Period &&\n           purposeSelect == dataTT.TripPurpose;\n})\n\nimport {GroupedBarChart} from \"@d3/grouped-bar-chart\"\nimport {Legend, Swatches} from \"@d3/color-legend\"\nimport {howto, altplot} from \"@d3/example-components\"\n\nxDomain = {\n    switch(plotSelect) {  // assuming all data points have the same Mode\n        case nameModeMnMShare:\n            return ['Motorized', 'Non-Motorized'];\n            break;\n        case nameModeATShare:\n            return ['Auto', 'Transit'];\n            break;\n        case nameModeDAShare:\n            return ['Drive Alone', 'Shared Ride'];\n            break;\n        case nameMode23Share:\n            return ['Shared Ride 2 Occupants', 'Shared Ride 3+ Occupants'];\n            break;\n        case nameModeTransit:\n            return ['Local Bus', 'Core Bus', 'Express Bus', 'BRT', 'LRT', 'CRT'];\n            break;\n        case nameModeAccess:\n            return ['Walk', 'Drive'];\n            break;\n        default:\n            return [];  // or set some sensible default\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nhtml`\n&lt;br/&gt;\n&lt;table&gt;\n    &lt;thead&gt;\n    &lt;tr&gt;\n        ${[plotSelect, \"Model\", \"Observed\", \"Difference\"].map((d, i) =&gt; \n        html`&lt;th style='text-align: ${i === 0 ? \"left\" : \"right\"}; padding: 5px; ${i === 0 ? \"width: 185px;\" : \"\"}'&gt;${d}&lt;/th&gt;`)}\n    &lt;/tr&gt;\n    &lt;/thead&gt;\n    &lt;tbody&gt;\n    ${table_filtered_data.map(row =&gt; html`\n        &lt;tr style='border-bottom: 1px solid lightgrey;'&gt;\n        ${[\"Mode\", \"Model\", \"Observed\", \"Difference\"].map((d, i) =&gt; \n            html`&lt;td style='text-align: ${i === 0 ? \"left\" : \"right\"}; padding: 5px; ${i === 0 ? \"width: 185px;\" : \"\"}'&gt;${row[d]}&lt;/td&gt;`)}\n        &lt;/tr&gt;`)}\n    &lt;/tbody&gt;\n&lt;/table&gt;`\n\n\n\n\n\n\n\n\n\n\nCode\nkey = Legend(chart.scales.color, {title: \"Data Source\"})\n\nchart = GroupedBarChart(filtered_data, {\n    x: d =&gt; d.Mode,\n    y: d =&gt; d.Percent,\n    z: d =&gt; d.DataSource,\n    xDomain: xDomain,\n    yLabel: \"Percent\",\n    yDomain: [0,1],\n    zDomain: ['Model','Observed'],\n    width: 400,\n    height: 250,\n    colors: [\"#376092\", \"#77933c\"]\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nbEmtptyCell=1\n\n\n\n\n\n\nFigure 2: Model vs Observed Mode Shares by Mode Group, Time Period, and Trip Purpose\n\n\n\n\n\nCode\nhtml`&lt;br/&gt;&lt;br/&gt;`\n\n\n\n\n\n\n\nThe Motorized / Non-motorized grouping of model shares are within 0.2% of the observed data for the daily time period and all trip purposes with non-motorized shares being slightly higher than observed and motorized shares being slightly lower. The model shares for additional combinations of time period and purpose are all within 0.5%.\nThe Transit Mode group of model shares are also close to observed with all modes for all time periods and trip purposes. At the Daily time period for all purposes, Local Bus has slightly higher share at 1.5% compared to observed than other modes, such as CRT that is 0.3% lower than observed and LRT that is 0.2% lower than observed. Nearly all the model shares for Transit Mode combinations of time period and are within 5% of observed. The one exception is Home-Based Other which in the peak period for Local Bus is 5.5% higher than observed. Transit Access Mode model shares are all within 5% of observed shares."
  },
  {
    "objectID": "v9x/v901/validation/2-distribute.html",
    "href": "v9x/v901/validation/2-distribute.html",
    "title": "Trip Distribution",
    "section": "",
    "text": "Modeled average trip lengths for the base year were compared to the 2012 Household Travel Survey. The model was validated for for distance, time, and generalized cost using the following measures:"
  },
  {
    "objectID": "v9x/v901/validation/2-distribute.html#average-trip-lengths",
    "href": "v9x/v901/validation/2-distribute.html#average-trip-lengths",
    "title": "Trip Distribution",
    "section": "Average Trip Lengths",
    "text": "Average Trip Lengths\nThe following figure shows the average trip lengths the modeled and observed time, distance, and generalized cost.\n\n\n\n\n\n\n\nCode\nviewof varSelect = Inputs.select(new Map([['Generalized Cost','GC'], ['Distance', 'Dist'], ['Time', 'Time']]), {value: 'Variable', label: \"Variable\"})\n\nviewof purpSelect  = Inputs.select(new Map([['Internal Trip Purposes', 'MainPurposes'], ['External Trip Purposes', 'Externals']]), {value: 'PurpType', label: \"Purpose Set\"});\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndataLT = transpose(dataStats)\nfiltered_data = dataLT.filter(function(dataL) {\n    return varSelect == dataL.Variable &&\n           purpSelect == dataL.PurpType;\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nimport {GroupedBarChart} from \"@d3/grouped-bar-chart\"\nimport {Legend, Swatches} from \"@d3/color-legend\"\nimport {howto, altplot} from \"@d3/example-components\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlotTable\n\n\n\n\nCode\n//https://observablehq.com/@d3/grouped-bar-chart\nkey = Legend(chart.scales.color, {title: \"Data Source\"})\n\n\n\n\n\n\n\n\n\nCode\nchart = GroupedBarChart(filtered_data, {\n    x: d =&gt; d.Purpose,\n    y: d =&gt; d.AVG_TRIP_LEN,\n    z: d =&gt; d.DataSource,\n    yLabel: \"Average Trip Length\",\n    zDomain: ['Model','Observed'],\n    height: 500,\n    colors: [\"#376092\", \"#77933c\"]\n})\n\n\n\n\n\n\nFigure 1: Average Trip Length between model and observed.\n\n\n\n\n\n\n\nCode\nInputs.table(filtered_data)"
  },
  {
    "objectID": "v9x/v901/validation/2-distribute.html#trip-length-frequencies",
    "href": "v9x/v901/validation/2-distribute.html#trip-length-frequencies",
    "title": "Trip Distribution",
    "section": "Trip Length Frequencies",
    "text": "Trip Length Frequencies\nModeled trip lengths for the base year were compared to the 2012 Household Travel Survey. The following figures shows the modeled and observed time and distance average trip lengths and trip length frequencies.\n\n\n\n\n\n\n\nCode\noptionsTripPurp = \n[\n    ['Home-Based Work'                   , 'HBW'    ],\n    ['Home-Based Shopping'               , 'HBShp'  ],\n    ['Home-Based Other'                  , 'HBOth'  ],\n    ['Home-Based School - Primary'       , 'HBSchPr'],\n    ['Home-Based School - Secondary'     , 'HBSchSc'],\n    ['Non-Home-Based Work'               , 'NHBW'   ],\n    ['Non-Home-Based Non-Work'           , 'NHBNW'  ],\n    ['Light Trucks'                      , 'LT'     ],\n    ['Medium Trucks'                     , 'MD'     ],\n    ['Heavy Trucks'                      , 'HV'     ],\n    ['Internal-to-External'              , 'IX'     ],\n    ['External-to-Internal'              , 'XI'     ]\n]\n\nviewof vTripPurp = Inputs.select(new Map(optionsTripPurp), {value: 'HBW', label: \"Trip Purpose:\"})\n\nviewof vTlfType = Inputs.select(new Map([['Generalized Cost','GC'],['Distance','Dist'],['Time','Time']]), {value: 'Dist', label: \"Variable:\"})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nfreqT = transpose(freq)\n\nfreqT_filtered_Obs = freqT.filter(function(freqData) {\n    return vTripPurp == freqData.TRIPPURP &&\n    vTlfType == freqData.TLFTYPE &&\n    'freqObs' == freqData.freqSource;\n})\n\nfreqT_filtered_Mod = freqT.filter(function(freqData) {\n    return vTripPurp == freqData.TRIPPURP &&\n    vTlfType == freqData.TLFTYPE &&\n    'freqMod' == freqData.freqSource;\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nkey2 = Legend(chart.scales.color, {title: \"Data Source\"})\n\n\n\n\n\n\n\n\n\nCode\nPlot.plot({\n  grid: true,\n  aspectRatio: 0.5,\n  x: {label: 'Distance/Time/Cost', tickFormat: d =&gt; d},\n  y: {label: 'Frequency', tickFormat: f =&gt; `${Math.round(f * 100)}%`},\n  marginRight: 60,\n  marginLeft: 60,\n  style: {\n    fontSize: 15\n  },\n  marginTop: 60,\n  marginBottom: 60,\n  marks: [\n    Plot.line(\n      freqT_filtered_Mod, {x: 'BIN', y: 'freq', stroke: \"#376092\", strokeWidth: 4}),\n    Plot.line(\n      freqT_filtered_Obs, {x: 'BIN', y: 'freq', stroke:  \"#77933c\", strokeWidth: 4}),\n    Plot.frame({strokeOpacity: 0.2}),\n    ]\n});\n\n\n\n\n\n\nFigure 2: Trip Length Frequencies between Model and Observed."
  },
  {
    "objectID": "v9x/v901/validation/1-tripgen.html",
    "href": "v9x/v901/validation/1-tripgen.html",
    "title": "Trip Generation",
    "section": "",
    "text": "Trip Generation validation was considered for both production ratios and relative shares."
  },
  {
    "objectID": "v9x/v901/validation/1-tripgen.html#ratios",
    "href": "v9x/v901/validation/1-tripgen.html#ratios",
    "title": "Trip Generation",
    "section": "Ratios",
    "text": "Ratios\nValidation for production ratios looked at three sets of measures: productions-to-household ratios (Figure 1), total trips (Figure 2), and trip balance ratios (Figure 3). The sources of the data include the Utah Household Travel Survey from 2012 (2012 HTS), the base year model (BY 2019 Model), and the National Household Travel Survey from 2017 with data from the Mountain Census Division (2017 NHTS - Mountain).\nThe model shows an average 4.01 trips per person which is slightly higher than the 2017 NHTS - Mountain average of 3.54. The model also shows an average 12.4 trips per household which is higher than the 2017 NHTS - Mountain average of 9.1. Utah, including the Wasatch Front, has a significantly higher average household size of 3.09 persons per household when compared to the Mountain Census Division average of 2.58, which accounts for the differences when compared to the 2017 NHTS - Mountain averages.\n\n\n\n\n                                                \nFigure 1: Productions to Households Ratios – Total Trip Ends (II + IX).\n\n\n\n\n\n\n\n                                                \nFigure 2: Total Trip Validation\n\n\n\n\n\n\n\n                                                \nFigure 3: Trip Balance Ratios"
  },
  {
    "objectID": "v9x/v901/validation/1-tripgen.html#relative-shares",
    "href": "v9x/v901/validation/1-tripgen.html#relative-shares",
    "title": "Trip Generation",
    "section": "Relative Shares",
    "text": "Relative Shares\nValidation for production relative shares considered the reasonableness of relative shares as shown in Table 1. The relative share between HBW, HBO and NHB trips looks reasonable with HBW at about 14% of the total and the highest share going to HBO. Commercial vehicles account for about 22% of the total trips generated by the model. This is within the expected range for an urban area like the Wasatch Front. IX and XI trips account for around 2% of the total trip generation. This also appears to be reasonable.\n\n\n\n\n\n\n\n\n\nTable 1: Relative Shares of Trip Productions\n\n\nPurpose\nProduction\nShare\n\n\n\n\nHBW\n1,758,104\n14.1%\n\n\nHBO\n5,317,476\n42.5%\n\n\n     HBShp\n908,733\n7.3%\n\n\n     HBOth\n3,719,191\n29.7%\n\n\n     HBScK6\n365,084\n2.9%\n\n\n     HBsc712\n324,468\n2.6%\n\n\nNHB\n2,405,720\n19.2%\n\n\n     NHBW\n812,855\n6.5%\n\n\n     NHBNW\n1,592,865\n12.7%\n\n\nTotal Person\n9,481,300\n75.8%\n\n\nTotal External\n172,855\n1.4%\n\n\n     IX\n78,057\n0.6%\n\n\n     XI\n94,798\n0.8%\n\n\nTotal Truck\n2,802,234\n22.4%\n\n\n     LT\n1,553,653\n12.4%\n\n\n     MD\n884,558\n7.1%\n\n\n     HV\n364,023\n2.9%\n\n\nTotal IX Truck\n21,750\n0.2%\n\n\n     IX MD\n10,716\n0.1%\n\n\n     IX HV\n11,034\n0.1%\n\n\nTotal XI Truck\n30,741\n0.2%\n\n\n     XI MD\n14,372\n0.1%\n\n\n     XI HV\n16,369\n0.1%\n\n\nTelecommute Share of HBW\n69,175\n0.6%\n\n\nTelecommute Share of NHBW\n19,552\n0.2%\n\n\nTOTAL\n12,508,880\n100.0%"
  },
  {
    "objectID": "v9x/v901/downloads.html",
    "href": "v9x/v901/downloads.html",
    "title": "Downloads",
    "section": "",
    "text": "The downloads for the Version 9.0.1 documentation is shown below by category.\n\nWhat’s New Document\n\n What’s New (Pdf) \n\n\n\nModel Validation Report\n\n Model Validation (Pdf)"
  },
  {
    "objectID": "v9x/v901/validation/1-hhdisag-autoown.html",
    "href": "v9x/v901/validation/1-hhdisag-autoown.html",
    "title": "Household Disaggregation and Auto Ownership",
    "section": "",
    "text": "The validation of the Life Cycle model includes the comparison of model output to observed data for the following categories:\n\nPopulation by Age Group and County\nPopulation by Life Cycle\nHouseholds by Life Cycle\n\nFor Population by Age Group and County model results are compared to observed data as represented by the Kem C. Gardner Policy Institute (GPI) control totals. Population by Life Cycle and Households by Life Cycle are compared to the Utah Household Travel Survey.\nLife Cycle comparisons are summarized by the following three life cycle categories:\n\nLife Cycle 1 – households with no children and no seniors\nLife Cycle 2 – households with children and no seniors\nLife Cycle 3 – households with seniors (may have children)\n\n\n\nC:\\Users\\cday\\AppData\\Local\\Temp\\ipykernel_30432\\1985579743.py:4: FutureWarning:\n\nThe default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function."
  },
  {
    "objectID": "v9x/v901/validation/1-hhdisag-autoown.html#life-cycle",
    "href": "v9x/v901/validation/1-hhdisag-autoown.html#life-cycle",
    "title": "Household Disaggregation and Auto Ownership",
    "section": "",
    "text": "The validation of the Life Cycle model includes the comparison of model output to observed data for the following categories:\n\nPopulation by Age Group and County\nPopulation by Life Cycle\nHouseholds by Life Cycle\n\nFor Population by Age Group and County model results are compared to observed data as represented by the Kem C. Gardner Policy Institute (GPI) control totals. Population by Life Cycle and Households by Life Cycle are compared to the Utah Household Travel Survey.\nLife Cycle comparisons are summarized by the following three life cycle categories:\n\nLife Cycle 1 – households with no children and no seniors\nLife Cycle 2 – households with children and no seniors\nLife Cycle 3 – households with seniors (may have children)\n\n\n\nC:\\Users\\cday\\AppData\\Local\\Temp\\ipykernel_30432\\1985579743.py:4: FutureWarning:\n\nThe default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function."
  },
  {
    "objectID": "v9x/v901/validation/1-hhdisag-autoown.html#population-by-age-group-and-county",
    "href": "v9x/v901/validation/1-hhdisag-autoown.html#population-by-age-group-and-county",
    "title": "Household Disaggregation and Auto Ownership",
    "section": "Population by Age Group and County",
    "text": "Population by Age Group and County\nThe 2020 model base year population by county and Age Group was compared to the 2020 GPI county-level population by Age Group, shown in the following charts. The model’s estimate of the population in each Age Group mirrors the GPI county-level projections.\n\n\nC:\\Users\\cday\\AppData\\Local\\Temp\\ipykernel_30432\\2253400036.py:1: FutureWarning:\n\nThe default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.\n\n\n\n\n\n\n\n                                                \nFigure 1: 2020 Model vs. 2020 GPI – % Population by Age Group and County."
  },
  {
    "objectID": "v9x/v901/validation/1-hhdisag-autoown.html#population-by-life-cycle",
    "href": "v9x/v901/validation/1-hhdisag-autoown.html#population-by-life-cycle",
    "title": "Household Disaggregation and Auto Ownership",
    "section": "Population by Life Cycle",
    "text": "Population by Life Cycle\nThe shares of the modeled 2019 base year population by Life Cycle were compared to the 2012 Household Survey at the county level. The model’s estimate of population by Life Cycle category seemed reasonable at this level of geography with all modeled comparison points falling within 4% of the observed data.\n\n\n\n\n                                                \nFigure 2: 2019 Model vs. 2012 Household Survey – % Population by Life Cycle and County."
  },
  {
    "objectID": "v9x/v901/validation/1-hhdisag-autoown.html#households-by-life-cycle",
    "href": "v9x/v901/validation/1-hhdisag-autoown.html#households-by-life-cycle",
    "title": "Household Disaggregation and Auto Ownership",
    "section": "Households by Life Cycle",
    "text": "Households by Life Cycle\nThe shares of the modeled 2019 base year households by Life Cycle were compared to the 2012 Household Survey at the county level. The model’s estimate of households by Life Cycle category seemed reasonable at this level of geography with all modeled comparison points falling within 1.5% of the observed data.\n\n\n\n\n                                                \nFigure 3: 2019 Model vs. 2012 Household Survey – % Households by Life Cycle and County."
  },
  {
    "objectID": "v9x/v901/validation/1-hhdisag-autoown.html#household-disaggregation",
    "href": "v9x/v901/validation/1-hhdisag-autoown.html#household-disaggregation",
    "title": "Household Disaggregation and Auto Ownership",
    "section": "Household Disaggregation",
    "text": "Household Disaggregation\nThe Household Disaggregation was validated to the following measures:\n\nHousehold Size\nIncome\nNumber of Workers\n\n\nHousehold Size\nThe shares of the modeled 2015 base year households by Household Size category were validated to 2010 Census and 2016 ACS data at the county level. The model’s estimate of households by each of the six Household Size category matches within about 2% of the observed data for all counties.\n???Update to use 2019 Model???&gt;&gt;\n\n\n\n\n                                                \nFigure 4: 2015 Model vs. 2010 Census & 2016 ACS – % Households by Household Size\n\n\n\n\n\nIncome\n???UPDATE – maybe from validation in this location: A:\\1 - TDM\\2 - Estimate Param\\1 - HHDisag_AutoOwn???\n\nIncome Gruops (Income Levels) in 2016 dollars:\n\n1: $0 to 35,000 (Low)\n2: $35,000 to 60,000 (High)\n3: $60,000 to 100,000 (High)\n4: $100,000 and above (High)\n\n\n\n\nWorker\n\nWorker Groups: 0, 1, 2, 3+ workers per household\n\n???UPDATE – maybe from validation in this location: A:\\1 - TDM\\2 - Estimate Param\\1 - HHDisag_AutoOwn???"
  },
  {
    "objectID": "v9x/v901/validation/1-hhdisag-autoown.html#auto-ownership",
    "href": "v9x/v901/validation/1-hhdisag-autoown.html#auto-ownership",
    "title": "Household Disaggregation and Auto Ownership",
    "section": "Auto Ownership",
    "text": "Auto Ownership\n???Which validation charts should I add???"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Documentation",
    "section": "",
    "text": "Documentation of the Wasatch Front Travel Demand Model (WF TDM) has been separated into three documents:\n\nWhat’s New Document – describes the changes made to the WF TDM since the last model release\nModel Validation Report – provides the base year validation of the current version of the WF TDM, as well as a reasonableness check of the model as a forecasting tool\nModel Process Report – provides an overview of the model, a summary of the model’s input data sets, and an outline of the model’s primary steps and logic\n\nThese reports will be available as PDF documents in the “_Notes” folder in the WF TDM’s root directory. However, it is expected that the primary means of accessing the model’s documentation will be online at the following links:\n\nWhat’s New Document\nModel Validation Report\nModel Process Report (in progress)"
  },
  {
    "objectID": "v9x/v902/index.html",
    "href": "v9x/v902/index.html",
    "title": "Preface",
    "section": "",
    "text": "This is the documentation for the Wasatch Front Travel Demand Model Version 9.0.2. The documentation includes the following reports:\n\nWhat’s New Document\nModel Validation Report\n\nFor access to this version of the TDM please contact the following persons:\n\nSuzie Swim (WFRC): sswim@wfrc.org\nTim Hereth (MAG): thereth@magutah.org"
  },
  {
    "objectID": "v9x/v902/downloads.html",
    "href": "v9x/v902/downloads.html",
    "title": "Downloads",
    "section": "",
    "text": "The downloads for the Version 9.0.2 documentation is shown below by category.\n\nWhat’s New Document\n\n What’s New (Pdf) \n\n\n\nModel Validation Report\n\n Model Validation (Pdf)"
  },
  {
    "objectID": "v9x/v900/index.html",
    "href": "v9x/v900/index.html",
    "title": "Preface",
    "section": "",
    "text": "This is the documentation for the Wasatch Front Travel Demand Model Version 9.0. The documentation includes the following reports:\n\nWhat’s New Document\nModel Validation Report\nModel Process Report (in progress)\n\n\nFor access to this version of the TDM please contact the following persons:\n\nSuzie Swim (WFRC): sswim@wfrc.org\nTim Hereth (MAG): thereth@magutah.org"
  },
  {
    "objectID": "v9x/v902/whats-new/3-modelresults.html",
    "href": "v9x/v902/whats-new/3-modelresults.html",
    "title": "Compare Model Results",
    "section": "",
    "text": "This section compares the model results between version 9.0.2 and version 9.0.1-patch2."
  },
  {
    "objectID": "v9x/v902/whats-new/3-modelresults.html#road-volume-comparisons",
    "href": "v9x/v902/whats-new/3-modelresults.html#road-volume-comparisons",
    "title": "Compare Model Results",
    "section": "Road Volume Comparisons",
    "text": "Road Volume Comparisons\nThe comparison between daily volumes at the segment level can be found in Figure 1 for 2019 and 2050. Decreases in volume in version 9.0.2 compared to version 9.0.1-patch2 are shown in blue, while increases are shown in red. Figure 2 shows a similar comparison, displaying medium plus heavy truck volumes.\nFor 2019, the differences are negligible in all vehicle and truck volumes between the model versions.\nFor 2050, there are increases in both all vehicle and truck volumes on I-15 in Davis County due to increased general purpose capacity. Other differences are negligible.\n\nVolume Change - All VehiclesVolume Change - Truck\n\n\n\n\n\n\n\n\n\n(a) 2019\n\n\n\n\n\n\n\n(b) 2050 Fiscally Constrained\n\n\n\n\n\n\n\nFigure 1: Daily Volume Comparison – All Vehicles\n\n\n\n\n\n\n\n\n\n\n\n(a) 2019\n\n\n\n\n\n\n\n(b) 2050 Fiscally Constrained\n\n\n\n\n\n\n\nFigure 2: Daily Volume Comparison – Medium+Heavy Truck"
  },
  {
    "objectID": "v9x/v902/whats-new/3-modelresults.html#transit-comparisons",
    "href": "v9x/v902/whats-new/3-modelresults.html#transit-comparisons",
    "title": "Compare Model Results",
    "section": "Transit Comparisons",
    "text": "Transit Comparisons\nVersion 9.0.2 showed a slight increase in transit trips in 2042 and 2050 compared to version 9.0.1-patch2 (see Figure 3 through Figure 9). The total transit trips in 2050 for version 9.0.2 is 337,000 daily trips compared to the version 9.0.1-patch2 model that showed 320,000 daily trips, which equates to 5% more trips.\nCommuter Rail saw the greatest increase in trips, some of which were new trips and some that had shifted from Express Bus to Commuter Rail. The shift from Express Bus to Commuter Rail is primarily due to the improvements in commuter rail speeds and to the additional stop in Bluffdale. These improvements make Commuter Rail more attractive and accessible which draws trips away from Express Bus since they compete for trips in similar markets.\nBRT saw a slight increase in future trips. Light Rail, Core Route, and Local Bus trips remained relatively unchanged.\n\nAll ModesCommuter RailLight RailBus Rapid TransitExpress BusCore BusLocal Bus\n\n\n\n\n\n\n                                                \nFigure 3: Daily Transit Ridership - All Modes\n\n\n\n\n\n\n\n\n\n                                                \nFigure 4: Daily Transit Ridership - Commuter-Rail Transit\n\n\n\n\n\n\n\n\n\n                                                \nFigure 5: Daily Transit Ridership - Light-Rail Transit\n\n\n\n\n\n\n\n\n\n                                                \nFigure 6: Daily Transit Ridership - Bus Rapid Transit\n\n\n\n\n\n\n\n\n\n                                                \nFigure 7: Daily Transit Ridership - Express Bus\n\n\n\n\n\n\n\n\n\n                                                \nFigure 8: Daily Transit Ridership - Core Bus\n\n\n\n\n\n\n\n\n\n                                                \nFigure 9: Daily Transit Ridership - Local Bus"
  },
  {
    "objectID": "v9x/v902/whats-new/2-input-files.html",
    "href": "v9x/v902/whats-new/2-input-files.html",
    "title": "Changes to Input Files",
    "section": "",
    "text": "The following edits were made to the highway network to account for Amendment #1:\n\nA HOT Lane on I-15 from Farmington to 2600 S was converted to a general-purpose lane (4 GP + 2 HOT  5 GP + 1 HOT) as a direct result of the EIS (section R-D-45)\nHighway network attributes were also updated in all phases of the plan to accommodate additional passing lanes for the operational project on I-15 in Box Elder from US-91 North to 3000 N\nUpdated 12600 S from 6400 W to Bacchus Highway to 5 lanes\nAdded Freedom Point Way from 100 W to Pony Express Rd (3 lanes)\nRemoved lanes in 2023 and 2028 from Granville Ave from Old Bingham Highway to 10200 S\nFixed HOT23_32 through HOT23_50UF fields to correctly reflect the RTP projects and Amendment from Farmington to the Utah/Salt Lake County Line\nFixed auxiliary lane FT on I-15 from Farmington to 400 S in Salt Lake\nAdded new underpass north of 2600 S in North Salt Lake/Bountiful\nAdded new configuration at 1000 N to 600 N interchanges on I-15\nAltered Davis-SLC Community Connector from 400 W to 300 W\nAdded Maker Way to accommodate for the Farmington Station circulator\n\nA summary of the specific edits done to the link and nodes (in comparison to v901-patch2) are shown below:\nLinks\n\nNo new links were added to the highway network\nOver 300 links had at least one field variable updated (i.e. lanes, functional type, street name distance, direction)\n30 links where the LINK_ID attribute was renamed to point to a different node (24 in Salt Lake County, 4 in Utah County, 2 in Weber County)\n\nNodes\n\nNo new nodes were added to the highway network\n7 nodes were repositioned (5 in Salt Lake County, 1 in Utah County, 1 in Davis County)\n\nThe following figures show the lane and functional type coding differences between version 9.0.2 and version 9.0.1-patch2. Differences are shown at the segment level.\n\n2019203220422050\n\n\n\n\n\n\n\n\n\n(a) Lanes\n\n\n\n\n\n\n\n\n\n\n(b) Functional Type\n\n\n\n\n\n\n\nFigure 1: Lanes and Functional Type Model Differences – 2019\n\n\n\n\n\n\n\n\n\n\n\n(a) Lanes\n\n\n\n\n\n\n\n\n\n\n(b) Functional Type\n\n\n\n\n\n\n\nFigure 2: Lanes and Functional Type Model Differences – 2032\n\n\n\n\n\n\n\n\n\n\n\n(a) Lanes\n\n\n\n\n\n\n\n\n\n\n(b) Functional Type\n\n\n\n\n\n\n\nFigure 3: Lanes and Functional Type Model Differences – 2042\n\n\n\n\n\n\n\n\n\n\n\n(a) Lanes\n\n\n\n\n\n\n\n\n\n\n(b) Functional Type\n\n\n\n\n\n\n\nFigure 4: Lanes and Functional Type Model Differences – 2050\n\n\n\n\n\n\n\n\nAmendment #1 led to the following updates to the highway network’s rail component:\n\nA new Bluffdale commuter rail station was added at the former point of the mountain prison site (this included updating the rail speeds to/from this station)\nFrontRunner speeds were adjusted to match UTA’s FrontRunner Forward study. Phases and speed changes are outlined in Table 1.\nThe following 6 transit speed fields corresponding to the 6 phases of the FrontRunner Speed Study were added to the highway network as a reference (information regarding the process for determining the transit speeds based on the FrontRunner Speed study can be found in the CRTSpeedSummaryFile.xlsx located in the Inputs/Transit folder):\n\nTRNSPD_FF1\nTRNSPD_FF2\nTRNSPD_FF3\nTRNSPD_FF4\nTRNSPD_FF5\nTRNSPD_FF6\n\n\n\n\n\n\nTable 1: Version 9.0.2 Transit Speed Field Correspondence to UTA FrontRunner Study Reference Fields\n\n\n\n\n\n\n\n\nPlan Phase (2023-2050)\nAssumptions\nField Calculation\nField Calculation (Additional)\n\n\n\n\nPhase 1 Fiscally Constrained\n15/30, POTM Station, Payson Extension\nTSPD23_32 = TRNSPD_FF1\nProvo to Payson (TSPD23_32 = TRNSPD_FF2)\n\n\nPhase 1 Needed\n15/30, POTM Station, Payson Extension\nTSPD23_32U = TRNSPD_FF1\nProvo to Payson (TSPD23_32U = TRNSPD_FF2)\n\n\nPhase 2 Fiscally Constrained\n15/30, POTM Station, Payson Extension\nTSPD23_42 = TRNSPD_FF1\nProvo to Payson (TSPD23_42 = TRNSPD_FF2)\n\n\nPhase 2 Needed\n15/30, POTM Station, Payson Extension, Electrification\nTSPD23_42U = TRNSPD_FF3\n\n\n\nPhase 3 Fiscally Constrained\n15/30, POTM Station, Payson Extension, Electrification\nTSPD23_50 = TRNSPD_FF3\n\n\n\nPhase 3 Needed\n15/30, POTM Station, Payson Extension, Electrification\nTSPD23_50U = TRNSPD_FF3\n\n\n\n\n\n\n\nA comparison of the FrontRunner speeds and travel time savings between versions 9.0.2 and 9.0.1-patch2 are found in Figure 5. The difference in speeds results in a savings of 10 to 15 minutes along the entire route in 2032 and 2042. In 2050, the difference in speeds results in a time savings of 26 to 33 minutes.\n\n\n\n\n\n\n\nCode\nodstationdata_t = transpose(odstationdata);\n\n\n\n\n\n\n\n\n\nCode\nviewof bVariable = Inputs.select(new Map([\n  ['Distance (miles)', 'Distance'],\n  ['NB Travel Time (minutes)', 'PkTimeDir1'],\n  ['SB Travel Time (minutes)', 'PkTimeDir2'],\n  ['NB Travel Speed (mph)', 'PkSpeedDir1'],\n  ['SB Travel Speed (mph)', 'PkSpeedDir2']\n]), { value: 'Distance', label: \"Variable:\" });\nviewof bYear = Inputs.select(new Map([[2032, 2032], [2042, 2042], [2050, 2050]]), { value: '2050', label: \"Year:\" });\n\nfiltered_odstationdata_t = odstationdata_t.filter(function(dataL) {\n  return bVariable == dataL.Variable &&\n         bYear == dataL.modYear;\n});\n\n// Define columns based on the first item in filtered_odstationdata_t\ncolumns = ['Seq', 'Segment', 'v901-patch2', 'v902', 'Difference'];\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n// Display the filtered data as a table\nhtml`\n&lt;table&gt;\n  &lt;thead&gt;\n    &lt;tr&gt;\n      ${columns.map((col, index) =&gt; html`&lt;th style=\"text-align: center; ${index === 0 ? 'display: none;' : ''}\"&gt;${col}&lt;/th&gt;`)}\n    &lt;/tr&gt;\n  &lt;/thead&gt;\n  &lt;tbody&gt;\n    ${filtered_odstationdata_t.map((row, rowIndex) =&gt; html`\n      &lt;tr style=\"background-color: ${rowIndex % 2 === 0 ? '#f2f2f2' : 'white'}; ${rowIndex === filtered_odstationdata_t.length - 1 ? 'font-weight: bold;' : ''}\"&gt;\n        ${columns.map((col, index) =&gt; html`\n          &lt;td style=\"text-align: ${index &gt;= 2 && index &lt;= 4 ? 'right' : 'left'}; width: ${index &gt;= 2 && index &lt;= 4 ? '80px' : 'auto'}; ${index === 0 ? 'display: none;' : ''}\"&gt;\n            ${index &gt;= 2 && index &lt;= 4 ? parseFloat(row[col]).toFixed(1) : row[col]}\n          &lt;/td&gt;`)}\n      &lt;/tr&gt;`)}\n  &lt;/tbody&gt;\n&lt;/table&gt;`;\n\n\n\n\n\n\nFigure 5: FrontRunner Distance, Travel Time, adn Speed Differences by Year\n\n\n\n\n\n\nIn the 1_Inputs/3_Highway/_Network Processing Tools folder, the Network QA-QC folder was added containing new Jupyter Notebook files. The 0-Network-QA-QC-Process.ipynb describes a process for verifying the quality of the highway network, segment shapefile, and transit networks before running/releasing a new version of the model. The 1-Network-QA-QC-Checks.ipynb is a placeholder for the future checks that will be programmatically made. However, for now, this file is empty."
  },
  {
    "objectID": "v9x/v902/whats-new/2-input-files.html#highway-network",
    "href": "v9x/v902/whats-new/2-input-files.html#highway-network",
    "title": "Changes to Input Files",
    "section": "",
    "text": "The following edits were made to the highway network to account for Amendment #1:\n\nA HOT Lane on I-15 from Farmington to 2600 S was converted to a general-purpose lane (4 GP + 2 HOT  5 GP + 1 HOT) as a direct result of the EIS (section R-D-45)\nHighway network attributes were also updated in all phases of the plan to accommodate additional passing lanes for the operational project on I-15 in Box Elder from US-91 North to 3000 N\nUpdated 12600 S from 6400 W to Bacchus Highway to 5 lanes\nAdded Freedom Point Way from 100 W to Pony Express Rd (3 lanes)\nRemoved lanes in 2023 and 2028 from Granville Ave from Old Bingham Highway to 10200 S\nFixed HOT23_32 through HOT23_50UF fields to correctly reflect the RTP projects and Amendment from Farmington to the Utah/Salt Lake County Line\nFixed auxiliary lane FT on I-15 from Farmington to 400 S in Salt Lake\nAdded new underpass north of 2600 S in North Salt Lake/Bountiful\nAdded new configuration at 1000 N to 600 N interchanges on I-15\nAltered Davis-SLC Community Connector from 400 W to 300 W\nAdded Maker Way to accommodate for the Farmington Station circulator\n\nA summary of the specific edits done to the link and nodes (in comparison to v901-patch2) are shown below:\nLinks\n\nNo new links were added to the highway network\nOver 300 links had at least one field variable updated (i.e. lanes, functional type, street name distance, direction)\n30 links where the LINK_ID attribute was renamed to point to a different node (24 in Salt Lake County, 4 in Utah County, 2 in Weber County)\n\nNodes\n\nNo new nodes were added to the highway network\n7 nodes were repositioned (5 in Salt Lake County, 1 in Utah County, 1 in Davis County)\n\nThe following figures show the lane and functional type coding differences between version 9.0.2 and version 9.0.1-patch2. Differences are shown at the segment level.\n\n2019203220422050\n\n\n\n\n\n\n\n\n\n(a) Lanes\n\n\n\n\n\n\n\n\n\n\n(b) Functional Type\n\n\n\n\n\n\n\nFigure 1: Lanes and Functional Type Model Differences – 2019\n\n\n\n\n\n\n\n\n\n\n\n(a) Lanes\n\n\n\n\n\n\n\n\n\n\n(b) Functional Type\n\n\n\n\n\n\n\nFigure 2: Lanes and Functional Type Model Differences – 2032\n\n\n\n\n\n\n\n\n\n\n\n(a) Lanes\n\n\n\n\n\n\n\n\n\n\n(b) Functional Type\n\n\n\n\n\n\n\nFigure 3: Lanes and Functional Type Model Differences – 2042\n\n\n\n\n\n\n\n\n\n\n\n(a) Lanes\n\n\n\n\n\n\n\n\n\n\n(b) Functional Type\n\n\n\n\n\n\n\nFigure 4: Lanes and Functional Type Model Differences – 2050\n\n\n\n\n\n\n\n\nAmendment #1 led to the following updates to the highway network’s rail component:\n\nA new Bluffdale commuter rail station was added at the former point of the mountain prison site (this included updating the rail speeds to/from this station)\nFrontRunner speeds were adjusted to match UTA’s FrontRunner Forward study. Phases and speed changes are outlined in Table 1.\nThe following 6 transit speed fields corresponding to the 6 phases of the FrontRunner Speed Study were added to the highway network as a reference (information regarding the process for determining the transit speeds based on the FrontRunner Speed study can be found in the CRTSpeedSummaryFile.xlsx located in the Inputs/Transit folder):\n\nTRNSPD_FF1\nTRNSPD_FF2\nTRNSPD_FF3\nTRNSPD_FF4\nTRNSPD_FF5\nTRNSPD_FF6\n\n\n\n\n\n\nTable 1: Version 9.0.2 Transit Speed Field Correspondence to UTA FrontRunner Study Reference Fields\n\n\n\n\n\n\n\n\nPlan Phase (2023-2050)\nAssumptions\nField Calculation\nField Calculation (Additional)\n\n\n\n\nPhase 1 Fiscally Constrained\n15/30, POTM Station, Payson Extension\nTSPD23_32 = TRNSPD_FF1\nProvo to Payson (TSPD23_32 = TRNSPD_FF2)\n\n\nPhase 1 Needed\n15/30, POTM Station, Payson Extension\nTSPD23_32U = TRNSPD_FF1\nProvo to Payson (TSPD23_32U = TRNSPD_FF2)\n\n\nPhase 2 Fiscally Constrained\n15/30, POTM Station, Payson Extension\nTSPD23_42 = TRNSPD_FF1\nProvo to Payson (TSPD23_42 = TRNSPD_FF2)\n\n\nPhase 2 Needed\n15/30, POTM Station, Payson Extension, Electrification\nTSPD23_42U = TRNSPD_FF3\n\n\n\nPhase 3 Fiscally Constrained\n15/30, POTM Station, Payson Extension, Electrification\nTSPD23_50 = TRNSPD_FF3\n\n\n\nPhase 3 Needed\n15/30, POTM Station, Payson Extension, Electrification\nTSPD23_50U = TRNSPD_FF3\n\n\n\n\n\n\n\nA comparison of the FrontRunner speeds and travel time savings between versions 9.0.2 and 9.0.1-patch2 are found in Figure 5. The difference in speeds results in a savings of 10 to 15 minutes along the entire route in 2032 and 2042. In 2050, the difference in speeds results in a time savings of 26 to 33 minutes.\n\n\n\n\n\n\n\nCode\nodstationdata_t = transpose(odstationdata);\n\n\n\n\n\n\n\n\n\nCode\nviewof bVariable = Inputs.select(new Map([\n  ['Distance (miles)', 'Distance'],\n  ['NB Travel Time (minutes)', 'PkTimeDir1'],\n  ['SB Travel Time (minutes)', 'PkTimeDir2'],\n  ['NB Travel Speed (mph)', 'PkSpeedDir1'],\n  ['SB Travel Speed (mph)', 'PkSpeedDir2']\n]), { value: 'Distance', label: \"Variable:\" });\nviewof bYear = Inputs.select(new Map([[2032, 2032], [2042, 2042], [2050, 2050]]), { value: '2050', label: \"Year:\" });\n\nfiltered_odstationdata_t = odstationdata_t.filter(function(dataL) {\n  return bVariable == dataL.Variable &&\n         bYear == dataL.modYear;\n});\n\n// Define columns based on the first item in filtered_odstationdata_t\ncolumns = ['Seq', 'Segment', 'v901-patch2', 'v902', 'Difference'];\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n// Display the filtered data as a table\nhtml`\n&lt;table&gt;\n  &lt;thead&gt;\n    &lt;tr&gt;\n      ${columns.map((col, index) =&gt; html`&lt;th style=\"text-align: center; ${index === 0 ? 'display: none;' : ''}\"&gt;${col}&lt;/th&gt;`)}\n    &lt;/tr&gt;\n  &lt;/thead&gt;\n  &lt;tbody&gt;\n    ${filtered_odstationdata_t.map((row, rowIndex) =&gt; html`\n      &lt;tr style=\"background-color: ${rowIndex % 2 === 0 ? '#f2f2f2' : 'white'}; ${rowIndex === filtered_odstationdata_t.length - 1 ? 'font-weight: bold;' : ''}\"&gt;\n        ${columns.map((col, index) =&gt; html`\n          &lt;td style=\"text-align: ${index &gt;= 2 && index &lt;= 4 ? 'right' : 'left'}; width: ${index &gt;= 2 && index &lt;= 4 ? '80px' : 'auto'}; ${index === 0 ? 'display: none;' : ''}\"&gt;\n            ${index &gt;= 2 && index &lt;= 4 ? parseFloat(row[col]).toFixed(1) : row[col]}\n          &lt;/td&gt;`)}\n      &lt;/tr&gt;`)}\n  &lt;/tbody&gt;\n&lt;/table&gt;`;\n\n\n\n\n\n\nFigure 5: FrontRunner Distance, Travel Time, adn Speed Differences by Year\n\n\n\n\n\n\nIn the 1_Inputs/3_Highway/_Network Processing Tools folder, the Network QA-QC folder was added containing new Jupyter Notebook files. The 0-Network-QA-QC-Process.ipynb describes a process for verifying the quality of the highway network, segment shapefile, and transit networks before running/releasing a new version of the model. The 1-Network-QA-QC-Checks.ipynb is a placeholder for the future checks that will be programmatically made. However, for now, this file is empty."
  },
  {
    "objectID": "v9x/v902/whats-new/1-overview.html",
    "href": "v9x/v902/whats-new/1-overview.html",
    "title": "Overview",
    "section": "",
    "text": "Version 9.0.2 reflects the Amendment #1 changes to the WFRC & MAG Regional Transportation Plans (adopted May/June 2024).\nThe model processes and parameters in version 9.0.2 are the same as version 9.0.0 and version 9.0.1. Version 9.0.2 includes all the highway, transit, and segment maintenance and clean-up work completed up through version 9.0.1-patch2 (06-24-2024).\nChanges to the model inputs in version 9.0.2 include updates to the highway and transit networks, as well as the creation of a few new folders and files that serve as resources.\nModel comparisons between version 9.0.2 and version 9.0.1-patch2 were created to demonstrate the location and magnitude of roadway volume and transit ridership differences."
  },
  {
    "objectID": "v9x/v902/whats-new/2-input-files.html#transit-networks",
    "href": "v9x/v902/whats-new/2-input-files.html#transit-networks",
    "title": "Changes to Input Files",
    "section": "Transit Networks",
    "text": "Transit Networks\n\nChanges to Transit Line Files Due to Amendment #1\nThe following edits were made to the transit network to account for Amendment #1:\n\nAdded a shuttle service at the Point of the Mountain in Phase 1 of the RTP\nReplaced BRT with LRT through the Point of the Mountain in Phase 2 of the RTP\nAdded a new shuttle service at the Farmington Transit Station\nAdded Bluffdale commuter rail station\n\nWith the Amendment #1 edits, transit projects crossing the border between Salt Lake and Utah counties are now consistent between WFRC and MAG’s unfunded need project lists.\nMinor edits were made to the transit line files to ensure consistency with the changes made to the highway network."
  },
  {
    "objectID": "v9x/v900/downloads.html",
    "href": "v9x/v900/downloads.html",
    "title": "Downloads",
    "section": "",
    "text": "The downloads for the Version 9.0 documentation is shown below by category.\n\nWhat’s New Document\n\n What’s New (Pdf) \n What’s New (PowerPoint) \n\n\n\nModel Validation Report\n\n Model Validation (Pdf)"
  },
  {
    "objectID": "v9x/v900/model-process/1-hhdisag-autoown.html",
    "href": "v9x/v900/model-process/1-hhdisag-autoown.html",
    "title": "Household Disaggregation and Auto Ownership",
    "section": "",
    "text": "The Life Cycle model determines the how much of the TAZ population and households from the processed socioeconomic input file will be in one of three life cycle categories:\n\nLife Cycle 1 – households with no children and no seniors\nLife Cycle 2 – households with children and no seniors\nLife Cycle 3 – households with seniors (may have children)\n\nThe Life Cycle model does its calculations in three phases:\n\nDetermine the TAZ population that is in three age groups\nDetermine each age group population that is in the three life cycle categories\nDetermine the number of households in each life cycle category\n\n\n\nThe Life Cycle model first estimates how much of the TAZ population falls into one of three Age Group categories:\n\nAge Group 1 – 0 to 17 years old\nAge Group 2 – 18 to 64 years old\nAge Group 3 – 65+ years old\n\nThe initial share of the TAZ population in each Age Group is determined by multiplying the TAZ household population by the TAZ-level Age Group percentages in the Lookup - BYTAZAgePct - AllCo.csv file located in the \n1_Inputs\\\\0_GlobalData\\\\1_HHDisag_AutoOwn directory. These initial TAZ-level Age Group percentages were calculated from 2020 Census block and 2020 ACS block group data summarized at the TAZ level.\nThe Census data was also summarized at the medium district level. If the Census TAZ data had fewer than 50 people, the percentages from medium districts were used. The medium district distribution of 2020 Census Age Group percentages for the Wasatch Front can be seen in Figure 1. The share of population in each of the Age Groups varies significantly by geography. Urban areas tend to have the highest share of population 18-64 years old and the fewest children and seniors. Suburban and rural areas tend to have the highest share of children.\n\n\n\n\n                                                \nFigure 1: 2020 Census % Population by Age Group by Medium District.\n\n\n\nThe initial TAZ-based population by Age Group is then factored to reflect the year being modeled. This is done using the county population by Age Group forecasts found in ControlTotal_Age.csv located in 1_Inputs\\\\2_SEData\\\\_ControlTotals directory. The Age Group county-level percentages are calculated from county-level population projections from the Kem C. Gardner Policy Institute (GPI), 2020-2060 State and County Total Population by Sex and Single-Year of Age. The GPI projections show a trend in all counties in the Wasatch Front model space toward a more senior population and fewer children. Adult population in the age range of 18-64 also saw a slight increase in population share.\n\n\n\n\n                                                \nFigure 2: GPI County Population Projections by Age Group for Wasatch Front Counties.\n\n\n\n\n\n\nThe Life Cycle model uses parameters estimated from the 2012 Household Survey to convert population in Age Groups to population in a Life Cycle category. Unique parameters were estimated for each county and are found in Table 1.\n\n\n\n\n\n\n\n\n\nTable 1: Percent of Age Group Population in Life Cycle 2 by County\n\n\n\n\n\n\n\nCounty\n0-17 Population Age Group (LC2 Fac 0-17)\n18-64 Population Age Group (LC2 Fac 18-64)\n\n\n\n\nBox Elder\n0.993\n0.664\n\n\nWeber\n0.982\n0.606\n\n\nDavis\n0.974\n0.711\n\n\nSalt Lake\n0.961\n0.525\n\n\nUtah\n0.981\n0.659\n\n\n\n\n\n\n\n\nOnly factors for Life Cycle 2 were estimated. Life Cycle 1 has no children leaving the 0-17 population to be divided between Life Cycles 2 and 3. Life Cycle 3 has no adults age 18-64 leaving the 18-64 population to be divided between Life Cycles 1 and 2. All of 65+ population lies completely within Life Cycle 3. Table 2 contains the equations used to calculate Life Cycle population.\n\n\n\n\n\n\n\n\n\nTable 2: Equations to Calculate Age Group Population in Each Life Cycle Category\n\n\n\n\n\n\n\n\nAge Group\nLife Cycle 1\nLife Cycle 2\nLife Cycle 3\n\n\n\n\n0-17\n0\nLC2 Fac 0-17\n1 – (LC2 Fac 0-17)\n\n\n18-64\n1 – (LC2 Fac 18-64)\nLC2 Fac 18-64\n0\n\n\n65+\n0\n0\n1\n\n\n\n\n\n\n\n\nAlmost all of the child-aged population is contained within Life Cycle 2, ranging between 96.1% in Salt Lake County and 99.3% in Box Elder County. The remaining child population is in Life Cycle 3. The majority of the adult-not-a-senior population is contained in Life Cycle category 2, ranging between 52.5% in Salt Lake County and 71.1% in Davis County, with the remainder falling into Life Cycle 1.\n\n\n\nThe Life Cycle model calculates households by Life Cycle using the average household size for each Life Cycle category. Unique average household sizes were estimated for each county and Life Cycle from the 2012 Household Survey.\n\n\n\n\n\n\n\n\n\nTable 3: Average Household Size by Life Cycle and County\n\n\n\n\n\n\n\n\nCounty\nHousehold Size for Life Cycle 1\nHousehold Size for Life Cycle 2\nHousehold Size for Life Cycle 3\n\n\n\n\nBox Elder\n1.86\n4.21\n2.41\n\n\nWeber\n1.88\n4.53\n1.81\n\n\nDavis\n2.14\n4.68\n2.33\n\n\nSalt Lake\n1.86\n4.44\n1.81\n\n\nUtah\n2.11\n4.75\n2.21\n\n\n\n\n\n\n\n\nThe TAZ-level population by Life Cycle category are divided by the average household size factors to generate an estimate of the share of TAZ-level households in each Life Cycle category. The share of households in each Life Cycle category is then multiplied by the total households in the TAZ to get the adjusted number of households per Life Cycle category.\nA final check is made to avoid unrealistic household sizes for zones with smaller populations. The number of households for a given Life Cycle category are capped at the minimum and maximum household sizes found in Table 4.\n\n\n\n\n\n\n\n\n\nTable 4: Allowed Minimum and Maximum Average Household Size by Life Cycle\n\n\n\n\n\n\n\nLife Cycle Category\nMinimum Household Size\nMaximum Household Size\n\n\n\n\n1\n1\n4\n\n\n2\n2\n8\n\n\n3\n1\n4"
  },
  {
    "objectID": "v9x/v900/model-process/1-hhdisag-autoown.html#life-cycle",
    "href": "v9x/v900/model-process/1-hhdisag-autoown.html#life-cycle",
    "title": "Household Disaggregation and Auto Ownership",
    "section": "",
    "text": "The Life Cycle model determines the how much of the TAZ population and households from the processed socioeconomic input file will be in one of three life cycle categories:\n\nLife Cycle 1 – households with no children and no seniors\nLife Cycle 2 – households with children and no seniors\nLife Cycle 3 – households with seniors (may have children)\n\nThe Life Cycle model does its calculations in three phases:\n\nDetermine the TAZ population that is in three age groups\nDetermine each age group population that is in the three life cycle categories\nDetermine the number of households in each life cycle category\n\n\n\nThe Life Cycle model first estimates how much of the TAZ population falls into one of three Age Group categories:\n\nAge Group 1 – 0 to 17 years old\nAge Group 2 – 18 to 64 years old\nAge Group 3 – 65+ years old\n\nThe initial share of the TAZ population in each Age Group is determined by multiplying the TAZ household population by the TAZ-level Age Group percentages in the Lookup - BYTAZAgePct - AllCo.csv file located in the \n1_Inputs\\\\0_GlobalData\\\\1_HHDisag_AutoOwn directory. These initial TAZ-level Age Group percentages were calculated from 2020 Census block and 2020 ACS block group data summarized at the TAZ level.\nThe Census data was also summarized at the medium district level. If the Census TAZ data had fewer than 50 people, the percentages from medium districts were used. The medium district distribution of 2020 Census Age Group percentages for the Wasatch Front can be seen in Figure 1. The share of population in each of the Age Groups varies significantly by geography. Urban areas tend to have the highest share of population 18-64 years old and the fewest children and seniors. Suburban and rural areas tend to have the highest share of children.\n\n\n\n\n                                                \nFigure 1: 2020 Census % Population by Age Group by Medium District.\n\n\n\nThe initial TAZ-based population by Age Group is then factored to reflect the year being modeled. This is done using the county population by Age Group forecasts found in ControlTotal_Age.csv located in 1_Inputs\\\\2_SEData\\\\_ControlTotals directory. The Age Group county-level percentages are calculated from county-level population projections from the Kem C. Gardner Policy Institute (GPI), 2020-2060 State and County Total Population by Sex and Single-Year of Age. The GPI projections show a trend in all counties in the Wasatch Front model space toward a more senior population and fewer children. Adult population in the age range of 18-64 also saw a slight increase in population share.\n\n\n\n\n                                                \nFigure 2: GPI County Population Projections by Age Group for Wasatch Front Counties.\n\n\n\n\n\n\nThe Life Cycle model uses parameters estimated from the 2012 Household Survey to convert population in Age Groups to population in a Life Cycle category. Unique parameters were estimated for each county and are found in Table 1.\n\n\n\n\n\n\n\n\n\nTable 1: Percent of Age Group Population in Life Cycle 2 by County\n\n\n\n\n\n\n\nCounty\n0-17 Population Age Group (LC2 Fac 0-17)\n18-64 Population Age Group (LC2 Fac 18-64)\n\n\n\n\nBox Elder\n0.993\n0.664\n\n\nWeber\n0.982\n0.606\n\n\nDavis\n0.974\n0.711\n\n\nSalt Lake\n0.961\n0.525\n\n\nUtah\n0.981\n0.659\n\n\n\n\n\n\n\n\nOnly factors for Life Cycle 2 were estimated. Life Cycle 1 has no children leaving the 0-17 population to be divided between Life Cycles 2 and 3. Life Cycle 3 has no adults age 18-64 leaving the 18-64 population to be divided between Life Cycles 1 and 2. All of 65+ population lies completely within Life Cycle 3. Table 2 contains the equations used to calculate Life Cycle population.\n\n\n\n\n\n\n\n\n\nTable 2: Equations to Calculate Age Group Population in Each Life Cycle Category\n\n\n\n\n\n\n\n\nAge Group\nLife Cycle 1\nLife Cycle 2\nLife Cycle 3\n\n\n\n\n0-17\n0\nLC2 Fac 0-17\n1 – (LC2 Fac 0-17)\n\n\n18-64\n1 – (LC2 Fac 18-64)\nLC2 Fac 18-64\n0\n\n\n65+\n0\n0\n1\n\n\n\n\n\n\n\n\nAlmost all of the child-aged population is contained within Life Cycle 2, ranging between 96.1% in Salt Lake County and 99.3% in Box Elder County. The remaining child population is in Life Cycle 3. The majority of the adult-not-a-senior population is contained in Life Cycle category 2, ranging between 52.5% in Salt Lake County and 71.1% in Davis County, with the remainder falling into Life Cycle 1.\n\n\n\nThe Life Cycle model calculates households by Life Cycle using the average household size for each Life Cycle category. Unique average household sizes were estimated for each county and Life Cycle from the 2012 Household Survey.\n\n\n\n\n\n\n\n\n\nTable 3: Average Household Size by Life Cycle and County\n\n\n\n\n\n\n\n\nCounty\nHousehold Size for Life Cycle 1\nHousehold Size for Life Cycle 2\nHousehold Size for Life Cycle 3\n\n\n\n\nBox Elder\n1.86\n4.21\n2.41\n\n\nWeber\n1.88\n4.53\n1.81\n\n\nDavis\n2.14\n4.68\n2.33\n\n\nSalt Lake\n1.86\n4.44\n1.81\n\n\nUtah\n2.11\n4.75\n2.21\n\n\n\n\n\n\n\n\nThe TAZ-level population by Life Cycle category are divided by the average household size factors to generate an estimate of the share of TAZ-level households in each Life Cycle category. The share of households in each Life Cycle category is then multiplied by the total households in the TAZ to get the adjusted number of households per Life Cycle category.\nA final check is made to avoid unrealistic household sizes for zones with smaller populations. The number of households for a given Life Cycle category are capped at the minimum and maximum household sizes found in Table 4.\n\n\n\n\n\n\n\n\n\nTable 4: Allowed Minimum and Maximum Average Household Size by Life Cycle\n\n\n\n\n\n\n\nLife Cycle Category\nMinimum Household Size\nMaximum Household Size\n\n\n\n\n1\n1\n4\n\n\n2\n2\n8\n\n\n3\n1\n4"
  },
  {
    "objectID": "v9x/v900/model-process/1-hhdisag-autoown.html#household-disaggregation",
    "href": "v9x/v900/model-process/1-hhdisag-autoown.html#household-disaggregation",
    "title": "Household Disaggregation and Auto Ownership",
    "section": "Household Disaggregation",
    "text": "Household Disaggregation\nThe Household Disaggregation model classifies a TAZ’s households by:\n\nHousehold Size\nIncome\nNumber of Workers\n\nHousehold Disaggregation is done in three steps with each step adding another level of disaggregation: estimating the distribution of households by size group, further disaggregation by income group and income level, and further disaggregation by number of workers per household. This results in 96 groupings when using the four income groups or 48 groupings when using low/high income levels.\nFor disaggregation to household size groups, the following lookup files contain the distribution of households across the six household size groups according the average household size for the three life cycle categories: Lookup - HH Size_LC1.csv, Lookup - HH Size_LC2.csv, and Lookup - HH Size_LC3.csv. The distributions in these files are grouped by county. There is also a third lookup file that contains a regional distribution used for comparison purposes: Lookup - HH Size.csv. When computing income ratios, the regional median household income of $74,946 (2019 dollars) is used from the latest ACS.\nFurther disaggregation by income groups is done in multiple steps. First a target TAZ distribution by income is calculated using a county distribution found in Lookup - Income.csv. Then a Fratar/Furness balancing method is used to get the matrix distribution across income groups and household sizes. The matrix is initialized with the values found in Table 5, which is hard-coded into the 2_HHDisaggregation.s script with the source being the 2012 Household Survey. The balancing method is run through until convergence is reached at (0.0001) or a max of 15 iterations.\n\n\n\n\n\n\n\n\n\nTable 5: Initialization Seed Values for Household Size and income Group\n\n\n\n\n\n\n\n\n\nHousehold Size\nIncome Group 1 Seed\nIncome Group 2 Seed\nIncome Group 3 Seed\nIncome Gruop 4 Seed\n\n\n\n\n1\n0.591\n0.167\n0.21\n0.032\n\n\n2\n0.286\n0.155\n0.351\n0.208\n\n\n3\n0.253\n0.18\n0.351\n0.216\n\n\n4\n0.211\n0.151\n0.395\n0.243\n\n\n5\n0.154\n0.157\n0.46\n0.229\n\n\n6\n0.118\n0.122\n0.479\n0.281\n\n\n\n\n\n\n\n\nFinal disaggregation by worker is a simple distribution which is found in the Lookup – Worker.csv file. This file contains a distribution across the worker groups by each of the 24 combinations of the six household size groups and the four income groups. Households are then aggregated back to the two income levels (low/high).\n\nHousehold Size\nThe Household Disaggregation model estimates how many households are in six Household Size categories:\n\n1 person households\n2 person households\n3 person households\n4 person households\n5 person households\n6 or more person households\n\nThe model uses the TAZ’s average household size to look up the share of households in each of the six Household Size categories. This is done independently for each of the three Life Cycle categories estimated in the previous model step.\n???Is there newer data than the 2018 spreadsheet???\n2010 Census Block Group data was used to determine the initial relationship between average household size and the number of households in each size category. To increase sample size, all Block Groups in Utah were included. Draft curves were estimated from the data’s polynomial trendline as shown in Figure 3.\n\n\n\nFigure 3: 2010 Census Block Group Data - Household Size Share by Average Household Size.\n\n\nThe results from the equations derived from the Census data were adjusted to remove negative values and to smooth and scale the resulting curves. The sum of the individual curves at any given average household size is 1. Figure 4 shows the smoothed curves for household size share by average household size.\n\n\n\n\n                                                \nFigure 4: Household Size Share by Average Household Size – All Data\n\n\n\nThe 2012 Household Survey was used to estimate the share of households in each Household Size category by Life Cycle. The entire statewide database was used and aggregated to medium districts in order to obtain sufficient number of survey records in a group yet preserve a sufficient number of observations to estimate lookup curves by Life Cycle. The estimated Life Cycle curves were then used to weight the Household Size lookup curves derived from the Census data (termed “All Data” in Figure 5) to obtain Household Size lookup curves by Life Cycle.\n\n\n\nFigure 5: Comparison of Life Cycle and All Data Household Size Lookup Curves.\n\n\nThe Household Size lookup curves were then calibrated to county-level household size data from the 2010 Census as shown in Figure 6, Figure 7, and Figure 8. The county-level adjustments were done to tailor to the lookup curves to account for local variations.\n\n\n\nFigure 6: Comparison of Household Size Lookup Curves by County – Life Cycle 1.\n\n\n\n\n\nFigure 7: Comparison of Household Size Lookup Curves by County – Life Cycle 2.\n\n\n\n\n\nFigure 8: Comparison of Household Size Lookup Curves by County – Life Cycle 3.\n\n\n\n\nIncome\nThe Household Disaggregation model estimates what percentage of household size exist at each of the following income groups (income levels) in 2016 dollars:\n\n1: $0 to 35,000 (Low)\n2: $35,000 to 60,000 (High)\n3: $60,000 to 100,000 (High)\n4: $100,000 and above (High)\n\n2010 Census Block Group data was used to determine the initial relationship between income group and income ratio (ratio of the block group median income to the regional median income). To increase sample size, all Block Groups in Utah were included. Draft curves were estimated from the data’s polynomial trendline as shown in Figure 9.\n\n\n\nFigure 9: 2010 Census Block Group Data - Income Group Share by Income Ratio.\n\n\nThe results from the equations derived from the Census data were adjusted to remove negative values and to smooth and scale the resulting curves. The sum of the individual curves at any given income group is 1. Figure 10 shows the smoothed curves for income group share by income ratio.\n\n\n\nFigure 10: Income Group Share by Income Ratio – All Data.\n\n\nIn addition to calculating the income group share by income ratio, the percentage of household size by income group was also summarized using the 2010 Census Block Group Data. Figure 11 shows the breakdown of the household size income seed table values.\n\n\n\nFigure 11: Household Size by Income Group Seed Table.\n\n\n\n\nWorker\nThe Household Disaggregation model estimates what percentage of worker groups exist within each household size at each income group level. The worker groups are as follows:\n\nWorker Groups: 0, 1, 2, 3+ workers per household\n\n2010 Cesus Block Group data as well as the 2012 Household Travel Survey were used to estimate work groups into the percentages shown in Figure 12.\n???Was both HTS and BG data used???\n\n\n\nFigure 12: Worker Group by Household Size by Income Group (All Counties).\n\n\nAfter the initial summarization of the data, the worker group percentages were calibrated to the Wasatch Front area (See Figure 13). A worker group percentage lookup table was created to be used in the model.\n\n\n\nFigure 13: Calibrated Worker Group by Household Size by Income Group (Wasatch Front)."
  },
  {
    "objectID": "v9x/v900/model-process/1-hhdisag-autoown.html#auto-ownership",
    "href": "v9x/v900/model-process/1-hhdisag-autoown.html#auto-ownership",
    "title": "Household Disaggregation and Auto Ownership",
    "section": "Auto Ownership",
    "text": "Auto Ownership\nThe Auto Ownership model begins with the disaggregated households by TAZ and calculates how many vehicles each group owns. Households by vehicle ownership is grouped by 0, 1, 2, and 3+ vehicles. Auto ownership is based on utility functions for each combination of household size group, worker group, and income level (low/high). The utilities for each TAZ are then converted into probabilities. When the probabilities are multiplied by the associated number of households, then an auto ownership distribution by TAZ is created.\nThe utility functions for auto ownership contain a series of binary and linear variables. The binary variables are loop toggles that are set to 1 or 0 for household size groups, worker groups, and income levels. There are also two linear variables that are taken from TAZ attributes: population density of five nearest zones and employment within 30 minutes by transit. The coefficients for the utility function are shown in Table 6.\nThe code loops through the three groups to create utilities for each combination of binary variables for each TAZ. As can be seen in the table, for household size groups 5 and 6+, 3+ workers in a household, and high income, there are zero utility coefficients, which mean for combinations with these variables there is no utility. Additionally, the 3-vehicle utility is always set to 0 for every combination.\n\n\n\n\n\n\n\n\n\nTable 6: Coefficients for Vehicle Ownership Utility Functions\n\n\n\n\n\n\n\n\n\nVariable\n0-Vehicle Utility Function Coefficients\n1-Vehicle Utility Function Coefficients\n2-Vehicle\n3-Vehicle\n\n\n\n\nConstant\n-5.103\n-1.97\n0.15\n0\n\n\nHousehold Size of 1\n3.288\n2.953\n0.581\n0\n\n\nHousehold Size of 2\n0.277\n0.503\n0.42\n0\n\n\nHousehold Size of 3\n-0.277\n0.334\n-0.445\n0\n\n\nHousehold Size of 4\n0.039\n-0.952\n-0.809\n0\n\n\nHousehold Size of 5\n0\n0\n0\n0\n\n\nHousehold Size of 6+\n0\n0\n0\n0\n\n\n0 Worker in Household\n0.998\n0.514\n0\n0\n\n\n1 Workers in Household\n0\n0.552\n0.081\n0\n\n\n2 Workers in Household\n0\n0\n0.07\n0\n\n\n3+ Workers in Household\n0\n0\n0\n0\n\n\nLow Income (Group 1)\n2.733\n1.557\n0.538\n0\n\n\nHigh Income (Group 2-4)\n0\n0\n0\n0\n\n\nPopulation Density of 5 nearest Zones\n0.05159\n0.07346\n0.02366\n0\n\n\nEmployment within 30 minutes by transit\n1.99e-05\n8.342e-06\n0\n0\n\n\n\n\n\n\n\n\nUsing the utility values, probabilities for the vehicle ownership groups are calculated for each TAZ for each combination. The probability is the ratio of the exponential utility of each vehicle ownership group divided by the sum of the exponential utility of all three vehicle ownership groups for each combination. The vehicle ownership probabilities are multiplied by their associated household numbers as calculated in the household disaggregation script to get the number of households in each vehicle ownership group. Additionally, several aggregations are made to calculate total number of vehicles in different groupings. When calculating the number of vehicles in a 3+-vehicle group, the value of 3.5 number of vehicles per 3+ households is used."
  },
  {
    "objectID": "v9x/v900/model-process/2-tripgen.html",
    "href": "v9x/v900/model-process/2-tripgen.html",
    "title": "Trip Generation",
    "section": "",
    "text": "A trip is defined as the movement of a person between two locations for a given purpose. Each trip has two trip ends. Each trip end is associated within a TAZ. Trips are comprised of a both a production zone and an attraction zone. The production zone is where the trip was produced, typically a household for a home-based trip or a place of employment for a non-home-based trip. The attraction zone is the location that is attracting a trip, typically a place of employment or commercial activity. Productions and attractions are travel direction agnostic, meaning that a to-work trip and from-work trip would show as two productions in the home location TAZ and as two attractions in the work location TAZ.\nThe Trip Generation script calculates productions and attractions at the TAZ level. The trip ends are not paired in this step but remain distinctly separated, which is then used as input into the Trip Distribution model that pairs trip ends together. The script calculates productions and attractions per zone using trip generation rates and adjustments. All values produced by this script represent person trips, not vehicle trips. The trip generation rates are calculated from the household travel survey.\nRates are applied to individual TAZs based on the attributes of the TAZ as taken from the household disaggregation model, additional socioeconomic data, externals data, and special generator data (Temple Square, SLC Main Library, colleges, etc.). All rates in this script are expressed in terms of daily rates. Rates are averages and are only applicable at aggregate levels.\nThe goal of the script is to generate a set of productions and attractions for each TAZ for the following base trip purposes:\nAdditionally, the script estimates trip generation for the following for external trips:\nProductions and attractions are also generated for short-haul trucks based on people movement, goods movement, and services for the following truck types:\nGiven the various combinations of trip purposes and possible attributes, there are quite a few steps in the script. These steps can be grouped into the following three categories:\nFollowing a discussion of these three groups, there is a presentation of the validation results."
  },
  {
    "objectID": "v9x/v900/model-process/2-tripgen.html#estimate-productions",
    "href": "v9x/v900/model-process/2-tripgen.html#estimate-productions",
    "title": "Trip Generation",
    "section": "Estimate Productions",
    "text": "Estimate Productions\nProductions for each TAZ are estimated in the following steps:\n\nCalculate base productions\nCalculate internal-to-external productions and adjust base productions accordingly\nAdjust non-home-based trips to account for visitors\nCalculate productions for short haul truck trips\n\n\nBase Productions\nBase productions are generated based on TAZ household attributes including number of workers, household size, and life cycle. Work trips only utilize attributes based on number of workers. The other trip purposes use household size and life cycle. The associated production rates are shown in Table 1. As expected, the greater the number of workers or the larger the household size, the higher the rates for any given trip purpose. The highest trip rate is 10.703 for home-based other trips for households of size 6+ in life cycle 2.\nThe production rates are only estimated for combinations of TAZ variable and trip purpose that are valid. A household with no workers does not generate any work trips. Additionally, households in Life Cycle 1 would not generate any school trips by definition.\n\n\n\n\n\n\n\n\n\nTable 1: Production Rates by Trip Purpose.\n\n\n\n\n\n\n\n\n\n\n\nTAZ Variable\nHBW\nHBSch*\nHBShp\nHBOth\nNHBW\nNHBNW\n\n\n\n\nHouseholds with 0 Workers\n-\n-\n-\n-\n-\n-\n\n\nHouseholds with 1 Worker\n1.764\n-\n-\n-\n0.856\n-\n\n\nHouseholds with 2 Workers\n3.073\n-\n-\n-\n1.361\n-\n\n\nHouseholds with 3+ Workers\n4.698\n-\n-\n-\n1.781\n-\n\n\nHouseholds of Size 1 in Life Cycle 1\n-\n-\n0.443\n1.313\n-\n0.632\n\n\nHouseholds of Size 2 in Life Cycle 1\n-\n-\n0.706\n2.382\n-\n1.013\n\n\nHouseholds of Size 3 in Life Cycle 1\n-\n-\n0.757\n3.657\n-\n1.542\n\n\nHouseholds of Size 4 in Life Cycle 1\n-\n-\n1.088\n5.128\n-\n1.820\n\n\nHouseholds of Size 5 in Life Cycle 1\n-\n-\n1.548\n7.380\n-\n1.989\n\n\nHouseholds of Size 6+ in Life Cycle 1\n-\n-\n2.013\n9.643\n-\n2.159\n\n\nHouseholds of Size 1 in Life Cycle 2\n-\n-\n-\n-\n-\n-\n\n\nHouseholds of Size 2 in Life Cycle 2\n-\n0.530\n0.681\n2.508\n-\n1.499\n\n\nHouseholds of Size 3 in Life Cycle 2\n-\n0.675\n1.344\n4.437\n-\n1.738\n\n\nHouseholds of Size 4 in Life Cycle 2\n-\n1.117\n1.720\n6.115\n-\n2.618\n\n\nHouseholds of Size 5 in Life Cycle 2\n-\n2.473\n1.818\n8.310\n-\n3.282\n\n\nHouseholds of Size 6+ in Life Cycle 2\n-\n3.819\n1.916\n10.703\n-\n3.852\n\n\nHouseholds of Size 1 in Life Cycle 3\n-\n-\n0.561\n1.841\n-\n0.990\n\n\nHouseholds of Size 2 in Life Cycle 3\n-\n0.009\n1.149\n3.673\n-\n1.928\n\n\nHouseholds of Size 3 in Life Cycle 3\n-\n0.067\n1.272\n4.175\n-\n2.408\n\n\nHouseholds of Size 4 in Life Cycle 3\n-\n0.427\n1.404\n4.676\n-\n2.676\n\n\nHouseholds of Size 5 in Life Cycle 3\n-\n1.446\n1.683\n6.450\n-\n2.890\n\n\nHouseholds of Size 6+ in Life Cycle 3\n-\n2.865\n1.960\n8.958\n-\n2.997\n\n\n\n\n\n\n\n\nNote for Table 1: HBSch productions for each TAZ are divided into HBSch_Pr and HBSch_Sc based on their respective regional shares of total enrollment.\nTo calculate the total productions by trip purpose for each TAZ, the value of each variable is multiplied by the associated rate for that trip purpose and then summed over all the variables. Further division of Home-Based School trips into Primary and Secondary is done based on their respective regional shares of total enrollment. Productions for non-home-based trip purposes are further adjusted by the visitor adjustment factors in Table 2, which were taken from the 2012 Household Survey.\n\n\n\n\n\n\n\n\n\nTable 2: Visitor Adjustment Factors.\n\n\n\n\n\n\nTrip Purpose\nVisitor Adjustment Factor\n\n\n\n\nNHBW\n1.046\n\n\nNHBNW\n1.049\n\n\n\n\n\n\n\n\n\n\nExternal Trip Productions\nProductions for internal-to-external (IX) trips are estimated by the model since the production occurs within the model space. The IX productions are taken as a share from the base productions and reassigned to the IX category. Ultimately, IX trips are not separated by trip purpose. But for the estimation of IX trip productions, trips are separated into two general trip purposes: work and non-work trips. Work trips include HBW. Non-Work trips include all other purposes except for school trips, which are excluded from external trips.\nThe share of productions that are IX work/non-work trips is shown in Table 3. Typically shares of productions are in the 1% to 4% range for all counties except Box Elder, which ranges from 5% to 20% of all trip productions being IX trips.\n\n\n\n\n\n\n\n\n\nTable 3: Internal-to-External Shares (2012 HH Survey)\n\n\n\n\n\n\n\nCounty\nShare IX Work Productions\nShare IX Non-Work Productions\n\n\n\n\nBox Elder\n0.196\n0.052\n\n\nWeber\n0.035\n0.016\n\n\nDavis\n0.009\n0.011\n\n\nSalt Lake\n0.018\n0.015\n\n\nUtah\n0.017\n0.01\n\n\n\n\n\n\n\n\nAfter calculating the number of IX productions using the share values, these trips are removed from the base productions. Additionally, since IX productions are in vehicle-trips the final step in calculating IX productions is to multiply the person trips by vehicle occupancy rate of 1.54.\nWhen calculating productions for the opposing direction, external-to-internal (XI), the TAZ values come directly from the External_TripEnds.dbf file as generated in the Input Processing scripts.\n\n\nShort-Haul Trucks Productions\nShort-Haul truck productions are calculated as a function of ecommerce variables, residential variables, and employment variables that vary by truck type. The overall formula used to calculate truck productions is as follows,\nEquation 1: Short-Haul Truck Productions\n\nGood_p(TR) = Share_Ecom(TR)  (ResRate(TR) * TOTHH * Fac_ECom_HH(TR) + EmpRate(TR) * TOTEMP * Fac_ECom_Emp(TR)) + (1 - Share_ECom(TR)) * (ResRate(TR) * TOTHH)*\n\nwhere,\n\nTR represents truck type (light, medium, or heavy),\nShare_ECom represents the proportion of truck trips that apply to eCommerce factors (See Table 4),\nResRate represents the residential variable (See Table 4),\nEmpRate represents the employment variable (See Table 4),\nTOTHH represents the total number of households in a given TAZ,\nTOTEMP represents the total employment in a given TAZ,\nFac_ECom_HH represents the ecommerce factor applied to households (See Table 5),\nand FAC_ECom_Emp represents the ecommerce factor applied to employment (See Table 5).\n\n\n\n\n\n\n\n\n\n\nTable 4: Proportion of Truck Trips to apply E-Commerce Factors\n\n\n\n\n\n\n\n\nVariable\nLight Truck Factor\nMedium Truck Factor\nHeavy Truck\n\n\n\n\nShare_Ecom\n0.55\n0.8\n0.8\n\n\nResRate\n0.74745\n0.44427\n0.17481\n\n\nEmpRate\n0.25703\n0.1875\n0.11021\n\n\n\n\n\n\n\n\nThe Fac_ECom_HH variable corresponds to the values in the Households rows in Table 5. The Fac_ECom_Emp variable is computed as a function of the sum of the other variables in Table 5 multiplied by their corresponding employment types.\n\n\n\n\n\n\n\n\n\nTable 5: Employment Factors by Scenario and Truck Type\n\n\n\n\n\n\n\n\n\n\nScenario\nScenario Name\nGoods Movement Category\nLight Truck Factor\nMedium Truck Factor\nHeavy Truck Factor\n\n\n\n\n1\nBase\nIndustrial\n1\n1\n1\n\n\n1\nBase\nRetail\n1\n1\n1\n\n\n1\nBase\nOther\n1\n1\n1\n\n\n1\nBase\nHouseholds\n1\n1\n1\n\n\n2\nLow\nIndustrial\n1.15\n1.05\n1.1\n\n\n2\nLow\nRetail\n1.15\n1.05\n1\n\n\n2\nLow\nOther\n1.15\n1.05\n1\n\n\n2\nLow\nHouseholds\n1.25\n1.2\n1\n\n\n3\nMedium\nIndustrial\n1.2\n1.1\n1.15\n\n\n3\nMedium\nRetail\n1.2\n1.1\n1.05\n\n\n3\nMedium\nOther\n1.2\n1.1\n1\n\n\n3\nMedium\nHouseholds\n1.35\n1.25\n1\n\n\n4\nHigh\nIndustrial\n1.25\n1.15\n1.2\n\n\n4\nHigh\nRetail\n1.25\n1.15\n1.1\n\n\n4\nHigh\nOther\n1.25\n1.15\n1\n\n\n4\nHigh\nHouseholds\n1.45\n1.3\n1\n\n\n\n\n\n\n\n\nAn additional adjustment factor is used during the calibration process to further tune the model results for trucks to match observed truck traffic. These adjustments are made at the three main groupings for short-haul productions and are shown in Table 6. A factor of 1 means there is no adjustment.\n\n\n\n\n\n\n\n\n\nTable 6: General Short Haul Truck Production/Attraction Factors\n\n\n\n\n\n\n\n\nShort-Haul Truck Category\nLight Truck Factor\nMedium Truck Factor\nHeavy Truck Factor\n\n\n\n\nPeople\n1.8\n1.85\n1.65\n\n\nGoods\n1.8\n1.85\n1.65\n\n\nServices\n1.8\n1.85\n1.65"
  },
  {
    "objectID": "v9x/v900/model-process/2-tripgen.html#estimate-attractions",
    "href": "v9x/v900/model-process/2-tripgen.html#estimate-attractions",
    "title": "Trip Generation",
    "section": "Estimate Attractions",
    "text": "Estimate Attractions\nThe Trip Generation script estimates attractions for all trip purposes. Attractions are defined as the end of the trip that is serving as the attraction for a trip. For home-based trips (trips produced at a home location), attractions could include work locations, retail centers, restaurants, schools, colleges, etc. For non-home-based trips (trips produced at work or another locations), attractions could include delivery locations, restaurants, etc. The attractions for each TAZ are estimated in the following steps:\n\nCalculate base attractions.\nCalculate telecommuting attractions.\nCalculate external-to-internal attractions and adjust base productions accordingly.\nAdjust attractions based on CBD or area type.\nAdjust truck attraction based on county.\nCalculate attractions for short haul truck trips.\nCalculate attraction adjustments for special generators.\n\n\nBase Attractions\nAttractions are generated based on TAZ employment, enrollment, and household attributes. Whereas productions were mostly based on household attributes, attractions are primarily based on employment for most trip purposes with exceptions for HBSch that is based on enrollment and for HBOth, NHBW, and NHBNW with some household attractions. Attraction rates are shown in Table 7.\n\n\n\n\nTable 7: Attraction Rates by Trip Purpose.\n\n\n\n\n\n\n\n\n\n\n\n\n\nTAZ Variable Description\nTAZ Variable\nHBW\nHBSch_Pr\nHBSch_Sc\nHBShp\nHBOth\nNHBW\nNHBNW\n\n\n\n\nRetail Employment\nRETL\n0.957\n-\n-\n3.660\n-\n1.132\n3.419\n\n\nFood Employment\nFOOD\n1.017\n-\n-\n3.058\n-\n1.620\n3.264\n\n\nManufacturing Employment\nMANU\n1.136\n-\n-\n-\n0.019\n0.231\n0.037\n\n\nWholesale Employment\nWSLE\n1.136\n-\n-\n-\n0.126\n0.410\n0.103\n\n\nOffice Employment\nOFFI\n1.196\n-\n-\n-\n0.219\n0.178\n0.054\n\n\nGov./Ed. Employment\nGVED\n1.196\n-\n-\n-\n2.455\n0.250\n0.452\n\n\nHealth Employment\nHLTH\n1.136\n-\n-\n-\n1.135\n0.185\n0.446\n\n\nOther Employment\nOTHR\n1.136\n-\n-\n-\n0.902\n0.200\n0.242\n\n\nAgricultural Employment\nFM_AGRI\n1.136\n-\n-\n-\n-\n0.200\n-\n\n\nMining Employment\nFM_MING\n1.136\n-\n-\n-\n-\n0.200\n-\n\n\nConstruction Employment\nFM_CONS\n1.136\n-\n-\n-\n-\n0.200\n-\n\n\nTotal Households\nTOTHH\n-\n-\n-\n-\n2.553\n0.179\n0.589\n\n\nElementary Enrollment\nENROL_ELEM\n-\n1.000\n-\n-\n-\n-\n-\n\n\nMiddle School Enrollment\nENROL_MIDL\n-\n-\n1.000\n-\n-\n-\n-\n\n\nHigh School Enrollment\nENROL_HIGH\n-\n-\n1.000\n-\n-\n-\n-\n\n\n\n\n\n\n\n\nTelecommuting and Home-based Attractions\nTelecommuting and home-based jobs for each employment category are the calculated by applying the telecommuting rates taken from the model input files. Work-at-home jobs (HBJ) are added back into each employment category for the attraction calculations when calculating telecommuting. Telecommuting attractions are specified as either home-based work or non home-based work. Table 8 shows the rates applied to each job portion of the telecommutting function.\n\n\n\n\n\n\n\n\n\nTable 8: Telecommuting Rates applied to each Job portion of the Telecommuting Function\n\n\n\n\n\n\n\nJob Type\nFactor for HBW Telecommuting\nFactor for NHBW Telecommuting\n\n\n\n\nRETL\n0.957\n1.132\n\n\nFOOD\n1.017\n1.62\n\n\nMANU\n1.136\n0.231\n\n\nWSLE\n1.136\n0.41\n\n\nOFFI\n1.196\n0.178\n\n\nGVED\n1.196\n0.25\n\n\nHLTH\n1.136\n0.185\n\n\nOTHR\n1.136\n0.2\n\n\nAGRI\n1.136\n0.2\n\n\nMING\n1.136\n0.2\n\n\nCONS\n1.136\n0.2\n\n\n\n\n\n\n\n\nFor performing scenario testing, the 1ControlCenter.block file for the model scenario contains a telecommuting factor that serves as a multiplier to all employment-based telecommuting calculations. The default value for this factor is 1. A value less than 1 decreases the telecommuting share and a value greater than 1 increases the telecommuting share.\nAn additional adjustment factor is used during the calibration process to further tune the model results for telecommuting to match the base year target. This model uses a telecommuting calibration factor of 1.\n\n\nExternal Trip Attractions\nThe TAZ attractions for external-to-internal (XI) attractions is set to the number of total households (TOTHH) plus the total employment (TOTEMP). Since XI attractions are scaled to match productions, this means that XI attractions will be proportionally distributed by households plus employment amongst all TAZs.\nAdditional adjustment factors applied to XI attractions include county factors and a scaling factor. The county adjustment factors are shown in Table 9. The scaling factor used for the model is 0.010957.\n\n\n\n\n\n\n\n\n\nTable 9: IX Attraction County Adjustment Factors\n\n\n\n\n\n\nJob Type\nXI Adjustment Factor\n\n\n\n\nBox Elder\n8.5741\n\n\nWeber\n1.0061\n\n\nDavis\n0.5437\n\n\nSalt Lake\n0.9974\n\n\nUtah\n0.8972\n\n\n\n\n\n\n\n\nWhen calculating attractions for the opposing direction, internal-to-external (IX), the values come directly from the External_TripEnds.dbf file as generated in the Input Processing scripts.\n\n\nCBD and Area Type Adjustments\nSome trip purposed are further adjusted by select geographies. This allows for localized nuances to be applied when attraction rates may be atypical of regional rates. Two sets of adjustments are made. First, an adjustment of 0.5 is made to home-based shopping trips attracted to the CBD in Salt Lake County. Thus, shopping trips attracted to the CBD are half of what a non-CBD rate would be. Second, there are adjustments based on select area types for Davis and Salt Lake Counties. These adjustments are shown in Table 10. Attractions for urban area types are reduced 70% to 80% for select trip purposes. For CBD-like area types in Salt Lake County, there is an increase of 25% for home-based work trips showing a greater number of attractions compared as compared to similar areas in the rest of the region.\n\n\n\n\n\n\n\n\n\nTable 10: Adjustment Factors for Select Counties/Area Types\n\n\n\n\n\n\n\n\n\n\nCounty\nArea Type\nHBW\nHBShp\nHBOth\nNHBNW\n\n\n\n\nDavis\nUrban\n0.8\n-\n-\n-\n\n\nSalt Lake\nUrban\n-\n0.75\n0.7\n0.8\n\n\nSalt Lake\nCBD-Like\n1.25\n-\n-\n-\n\n\n\n\n\n\n\n\n\n\nCounty Truck Adjustments\nAn additional adjustment factor is used during the calibration process to further tune the model results for medium and heavy trucks to match observed truck traffic. These adjustments are made at the three main groupings for short-haul attractions. Light trucks were low in Box Elder, Weber, Davis, and Utah County and high in Salt Lake county. Medium trucks were low in Box Elder and Davis county and high in Weber, Salt Lake, and Utah county. Heavy trucks were low in Box Elder, Davis, and Utah county and high in Weber and Salt Lake County. The factors as shown in Table 11 were set to help offset these differences.\n\n\n\n\n\n\n\n\n\nTable 11: Area Specific Short Haul Truck Production/Attraction Factors\n\n\n\n\n\n\n\n\n\nShort-Haul Truck Category\nArea\nLight Truck Factor\nMedium Truck Factor\nHeavy Truck Factor\n\n\n\n\nPeople\nUrban Spaces\n1.03\n0.9\n0.9\n\n\nGoods\nUrban Spaces\n1.03\n0.9\n0.9\n\n\nServices\nUrban Spaces\n1.03\n0.9\n0.9\n\n\nPeople\nBox Elder\n1.5\n1.17\n1.12\n\n\nGoods\nBox Elder\n1.5\n1.17\n1.12\n\n\nServices\nBox Elder\n1.5\n1.17\n1.12\n\n\nPeople\nWeber\n1.22\n0.96\n0.96\n\n\nGoods\nWeber\n1.22\n0.96\n0.96\n\n\nServices\nWeber\n1.22\n0.96\n0.96\n\n\nPeople\nDavis\n1.14\n1.08\n1.1\n\n\nGoods\nDavis\n1.14\n1.08\n1.1\n\n\nServices\nDavis\n1.14\n1.08\n1.1\n\n\nPeople\nSalt Lake\n0.59\n0.62\n0.54\n\n\nGoods\nSalt Lake\n0.59\n0.62\n0.54\n\n\nServices\nSalt Lake\n0.59\n0.62\n0.54\n\n\nPeople\nUtah\n1.19\n0.95\n1.01\n\n\nGoods\nUtah\n1.19\n0.95\n1.01\n\n\nServices\nUtah\n1.19\n0.95\n1.01\n\n\n\n\n\n\n\n\n\n\nAdjustments for Special Generators\nThere are two groups of special generators that have adjustments for trip attractions. Temple Square and the SLC Library are in one group and colleges are in another.\n\nTemple Square and SLC Library\nTrip attractions for Temple Square and the SLC Library are generated using a base year daily visitation numbers and then increasing by an annual growth rate to estimate trip ends in the model year. The values used for estimation are shown in Table 12. Temple Square had an estimated five million visitors in 2013, which translates to roughly 13,700 visitors per day and 27,400 trip ends per day. The SLC library is the second most popular destination in Salt Lake with approximately four million visitors per year or roughly 11,000 visitors and 22,000 trip ends per day.\n\n\n\n\n\n\n\n\n\nTable 12: Adjustment Factors for Select Counties/Area Types\n\n\n\n\n\n\n\n\nSpecial Generator\nBase Year\nBase Year Daily Trip Ends\nAnnual Growth Rate\n\n\n\n\nTemple Square\n2013\n27400\n1.0%\n\n\nSLC Library\n2005\n22000\n1.0%\n\n\n\n\n\n\n\n\nAfter calculating model year attractions for the two special generators, the total attractions are then added to TAZ attractions proportionally amongst the trip purposes HBOth and NHBNW for the TAZ including Temple Square and HBOth, NHBW, and NHBNW for the TAZ including SLC Library.\n\n\nColleges\n???CHECK ENTIRE SECTION - we updated this but I forgot what we did\nThere are several locations with the TDM where trips to and from colleges are estimated. Home-based college (HBC) trips are separately generated and distributed as part of the Input Processing scripts and are found in TripTable.mtx. HBC trips are those of enrolled students traveling to and from campus. These trips bypass Trip Generation and Trip Distribution scripts. The attractions for other trip purposes to colleges are generated together with the other trips within the containing TAZ. Adjustments are then made to account for additional attractions to colleges for the three trip purposes of HBOth, NHBW, and NHBNW.\nHBOth, NHBW, and NHBNW trip adjustments are calculated through the following steps:\n\nCalculate the number of full-time-equivalent (FTE) students per campus by multiplying the enrollment control total for a college campus from TripTableControlTotal.csv by the FTE rate for the college campus from College_Factors.csv.\nCalculate the total attractions that should be generated based on the number of FTE students. This is done by multiplying the number of FTE students (step 1) by 2.4 vehicle attractions per student (based on all purposes from ITE, exact reference not included) multiplied by 1.7 person trips to vehicle trips (source not stated, is it the HHSurvey??).\nCalculate HBW trips associated with college campus in its containing TAZ with the following steps:\n\nMultiply FTE students (step 1) by the college employment factor (see Table 13) to get the estimated number of employees for a college campus.\nDivide the estimated number of employees for a college campus by the total employment (TOTEMP) for the containing TAZ to obtain a college employment ratio. The ratio is capped at 1.0.\nThe college employment ratio is then multiplied by the number of HBW trips to determine which portion of HBW are associated with the college.\n\nCalculate the number of non-HBC/HBW attractions to add to the TAZ by subtracting the college associated HBW trips (step 3) and HBC trips (TripTable.mtx) from the total attractions (step 2).\nDistribute the additional attractions (step 4) proportionally amongst HBOth, NHBW, and NHBNW.\n\n\n\n\n\n\n\n\n\n\nTable 13: College Employment Factors\n\n\n\n\n\n\nCollege\nCollege Employment Factor\n\n\n\n\nWeber State University\n0.25\n\n\nUtah Valley University\n0.25\n\n\nSalt Lake Community College\n0.29\n\n\nLDSBC\n0.33\n\n\nWestminster\n0.33\n\n\nUniversity of Utah\n0.71\n\n\nBrigham Young University\n0.71\n\n\nUnspecified\n0.48"
  },
  {
    "objectID": "v9x/v900/model-process/2-tripgen.html#balance-productions-and-attractions",
    "href": "v9x/v900/model-process/2-tripgen.html#balance-productions-and-attractions",
    "title": "Trip Generation",
    "section": "Balance Productions and Attractions",
    "text": "Balance Productions and Attractions\nThe final step of Trip Generation is to balance the productions and attractions. Balancing takes place by proportionally increasing or decreasing productions/attractions across the entire model space to match regional totals. For trips internal to the model space (non-externals) the attractions are balanced to match the productions. External trip productions and attractions are balanced in the WFRC/MAG model space. The IX productions are balanced to the IX attractions and the XI attractions are balanced to the XI productions.\n???Truck trips are already balanced since TAZ attractions were set equal TAZ productions.** –really????\nThere is also an important distinction to be understood regarding non-home-based trips. While non-home-based productions are based on household characteristics of a TAZ, the trips are not actually being produced in the home TAZ location. They are produced at another location, hence the term non-home-based. Non-home-based productions, thus, are only used to get total values that are then used to balance non-home-based attractions. After attractions are balanced to match productions, TAZ productions are set equal to TAZ attractions. So, non-home-based productions are used to get the quantity of trips, but attractions are used to get the distribution of trips."
  },
  {
    "objectID": "v9x/v900/model-process/3-distribute.html",
    "href": "v9x/v900/model-process/3-distribute.html",
    "title": "Trip Distribution",
    "section": "",
    "text": "Trip distribution is the pairing of origins and destinations to form complete trips. This is done separately within each trip type. For example, Home-based work (HBW) productions at residences are paired with HBW attractions at work places."
  },
  {
    "objectID": "v9x/v900/model-process/3-distribute.html#inputs",
    "href": "v9x/v900/model-process/3-distribute.html#inputs",
    "title": "Trip Distribution",
    "section": "Inputs",
    "text": "Inputs\nThe inputs to trip distribution include the productions and attractions from trip generation and an impedance matrix. The travel impedance for HBW, HBO and NHB trips is a generalized cost that is a function of time, distance (auto operating cost) and toll cost (if applicable). The impedance used for external trips and commercial trips is travel time."
  },
  {
    "objectID": "v9x/v900/model-process/3-distribute.html#gravity-model",
    "href": "v9x/v900/model-process/3-distribute.html#gravity-model",
    "title": "Trip Distribution",
    "section": "Gravity Model",
    "text": "Gravity Model\nThe trip distribution within a trip type is done using a gravity model. The theory behind the Gravity Model is that trip-end locations that are closer together will exhibit a stronger attraction than those that are farther apart. Although this is true, since longer trips have a larger travel radius there are more destinations within that radius as well (similar to a body of large mass having a greater gravitational pull). Ultimately, the Gravity Model causes the distribution of trip lengths to include a greater number of shorter trips and fewer longer trips than if the trips were to be distributed randomly.\nThe functional form of the Gravity Model is shown in Equation 1. Trip distribution implements a doubly-contrained gravel model, meaning This that an iterative process is used that alternatively balances productions by evaluating the first equation and then balances to attractions by evaluating the second equation. The iterative process is complete when either the convergence criterion is met, or the maximum number of iterations is reached.\nEquation 3: Doubly- Constrained Gravity Model Equations\n\n\nGravity Model Calibration\n???Update???\nwhat script? A Voyager script has been written that iteratively calibrates gravity model friction factors until an observed impedance distribution is matched by the model. The inputs to the calibration script are trip impedance distributions (by trip purpose), trip generation output and modeled travel times and costs between all TAZ pairs. The initial calibration of the friction factors is based on observed trip lengths from the trip diary survey. The gravity model parameters were then adjusted after replication to correspond to 2000 Census Journey to Work data and NHTS data.\nThe friction factors for IXXI and commercial trips were transferred from v8.3.2 of the model."
  },
  {
    "objectID": "v9x/v900/model-process/4-modechoice.html",
    "href": "v9x/v900/model-process/4-modechoice.html",
    "title": "Mode Choice",
    "section": "",
    "text": "The mode choice constants within the model used to estimate mode shares are shown below:\n\n\n\n\n\n\n\nCode\n// label: fig-mc-consts\n// fig-cap: Mode Choice Constants\n// echo: false\nInputs.table(transpose(constants))"
  },
  {
    "objectID": "v9x/v900/model-process/4-modechoice.html#mode-choice-constants",
    "href": "v9x/v900/model-process/4-modechoice.html#mode-choice-constants",
    "title": "Mode Choice",
    "section": "",
    "text": "The mode choice constants within the model used to estimate mode shares are shown below:\n\n\n\n\n\n\n\nCode\n// label: fig-mc-consts\n// fig-cap: Mode Choice Constants\n// echo: false\nInputs.table(transpose(constants))"
  },
  {
    "objectID": "v9x/v900/validation/1-hhdisag-autoown.html",
    "href": "v9x/v900/validation/1-hhdisag-autoown.html",
    "title": "Household Disaggregation and Auto Ownership",
    "section": "",
    "text": "The validation of the Life Cycle model includes the comparison of model output to observed data for the following categories:\n\nPopulation by Age Group and County\nPopulation by Life Cycle\nHouseholds by Life Cycle\n\nFor Population by Age Group and County model results are compared to observed data as represented by the Kem C. Gardner Policy Institute (GPI) control totals. Population by Life Cycle and Households by Life Cycle are compared to the Utah Household Travel Survey.\nLife Cycle comparisons are summarized by the following three life cycle categories:\n\nLife Cycle 1 – households with no children and no seniors\nLife Cycle 2 – households with children and no seniors\nLife Cycle 3 – households with seniors (may have children)\n\n\n\nC:\\Users\\cday\\AppData\\Local\\Temp\\ipykernel_25392\\1985579743.py:4: FutureWarning:\n\nThe default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function."
  },
  {
    "objectID": "v9x/v900/validation/1-hhdisag-autoown.html#life-cycle",
    "href": "v9x/v900/validation/1-hhdisag-autoown.html#life-cycle",
    "title": "Household Disaggregation and Auto Ownership",
    "section": "",
    "text": "The validation of the Life Cycle model includes the comparison of model output to observed data for the following categories:\n\nPopulation by Age Group and County\nPopulation by Life Cycle\nHouseholds by Life Cycle\n\nFor Population by Age Group and County model results are compared to observed data as represented by the Kem C. Gardner Policy Institute (GPI) control totals. Population by Life Cycle and Households by Life Cycle are compared to the Utah Household Travel Survey.\nLife Cycle comparisons are summarized by the following three life cycle categories:\n\nLife Cycle 1 – households with no children and no seniors\nLife Cycle 2 – households with children and no seniors\nLife Cycle 3 – households with seniors (may have children)\n\n\n\nC:\\Users\\cday\\AppData\\Local\\Temp\\ipykernel_25392\\1985579743.py:4: FutureWarning:\n\nThe default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function."
  },
  {
    "objectID": "v9x/v900/validation/1-hhdisag-autoown.html#population-by-age-group-and-county",
    "href": "v9x/v900/validation/1-hhdisag-autoown.html#population-by-age-group-and-county",
    "title": "Household Disaggregation and Auto Ownership",
    "section": "Population by Age Group and County",
    "text": "Population by Age Group and County\nThe 2020 model base year population by county and Age Group was compared to the 2020 GPI county-level population by Age Group, shown in the following charts. The model’s estimate of the population in each Age Group mirrors the GPI county-level projections.\n\n\nC:\\Users\\cday\\AppData\\Local\\Temp\\ipykernel_25392\\2253400036.py:1: FutureWarning:\n\nThe default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.\n\n\n\n\n\n\n\n                                                \nFigure 1: 2020 Model vs. 2020 GPI – % Population by Age Group and County."
  },
  {
    "objectID": "v9x/v900/validation/1-hhdisag-autoown.html#population-by-life-cycle",
    "href": "v9x/v900/validation/1-hhdisag-autoown.html#population-by-life-cycle",
    "title": "Household Disaggregation and Auto Ownership",
    "section": "Population by Life Cycle",
    "text": "Population by Life Cycle\nThe shares of the modeled 2019 base year population by Life Cycle were compared to the 2012 Household Survey at the county level. The model’s estimate of population by Life Cycle category seemed reasonable at this level of geography with all modeled comparison points falling within 4% of the observed data.\n\n\n\n\n                                                \nFigure 2: 2019 Model vs. 2012 Household Survey – % Population by Life Cycle and County."
  },
  {
    "objectID": "v9x/v900/validation/1-hhdisag-autoown.html#households-by-life-cycle",
    "href": "v9x/v900/validation/1-hhdisag-autoown.html#households-by-life-cycle",
    "title": "Household Disaggregation and Auto Ownership",
    "section": "Households by Life Cycle",
    "text": "Households by Life Cycle\nThe shares of the modeled 2019 base year households by Life Cycle were compared to the 2012 Household Survey at the county level. The model’s estimate of households by Life Cycle category seemed reasonable at this level of geography with all modeled comparison points falling within 1.5% of the observed data.\n\n\n\n\n                                                \nFigure 3: 2019 Model vs. 2012 Household Survey – % Households by Life Cycle and County."
  },
  {
    "objectID": "v9x/v900/validation/1-hhdisag-autoown.html#household-disaggregation",
    "href": "v9x/v900/validation/1-hhdisag-autoown.html#household-disaggregation",
    "title": "Household Disaggregation and Auto Ownership",
    "section": "Household Disaggregation",
    "text": "Household Disaggregation\nThe Household Disaggregation was validated to the following measures:\n\nHousehold Size\nIncome\nNumber of Workers\n\n\nHousehold Size\nThe shares of the modeled 2015 base year households by Household Size category were validated to 2010 Census and 2016 ACS data at the county level. The model’s estimate of households by each of the six Household Size category matches within about 2% of the observed data for all counties.\n???Update to use 2019 Model???&gt;&gt;\n\n\n\n\n                                                \nFigure 4: 2015 Model vs. 2010 Census & 2016 ACS – % Households by Household Size\n\n\n\n\n\nIncome\n???UPDATE – maybe from validation in this location: A:\\1 - TDM\\2 - Estimate Param\\1 - HHDisag_AutoOwn???\n\nIncome Gruops (Income Levels) in 2016 dollars:\n\n1: $0 to 35,000 (Low)\n2: $35,000 to 60,000 (High)\n3: $60,000 to 100,000 (High)\n4: $100,000 and above (High)\n\n\n\n\nWorker\n\nWorker Groups: 0, 1, 2, 3+ workers per household\n\n???UPDATE – maybe from validation in this location: A:\\1 - TDM\\2 - Estimate Param\\1 - HHDisag_AutoOwn???"
  },
  {
    "objectID": "v9x/v900/validation/1-hhdisag-autoown.html#auto-ownership",
    "href": "v9x/v900/validation/1-hhdisag-autoown.html#auto-ownership",
    "title": "Household Disaggregation and Auto Ownership",
    "section": "Auto Ownership",
    "text": "Auto Ownership\n???Which validation charts should I add???"
  },
  {
    "objectID": "v9x/v900/validation/1-tripgen.html",
    "href": "v9x/v900/validation/1-tripgen.html",
    "title": "Trip Generation",
    "section": "",
    "text": "Trip Generation validation was considered for both production ratios and relative shares."
  },
  {
    "objectID": "v9x/v900/validation/1-tripgen.html#ratios",
    "href": "v9x/v900/validation/1-tripgen.html#ratios",
    "title": "Trip Generation",
    "section": "Ratios",
    "text": "Ratios\nValidation for production ratios looked at three sets of measures: productions-to-household ratios (Figure 1), total trips (Figure 2), and trip balance ratios (Figure 3). The sources of the data include the Utah Household Travel Survey from 2012 (2012 HTS), the base year model (BY 2019 Model), and the National Household Travel Survey from 2017 with data from the Mountain Census Division (2017 NHTS - Mountain).\nThe model shows an average 4.01 trips per person which is slightly higher than the 2017 NHTS - Mountain average of 3.54. The model also shows an average 12.4 trips per household which is higher than the 2017 NHTS - Mountain average of 9.1. Utah, including the Wasatch Front, has a significantly higher average household size of 3.09 persons per household when compared to the Mountain Census Division average of 2.58, which accounts for the differences when compared to the 2017 NHTS - Mountain averages.\n\n\n\n\n                                                \nFigure 1: Productions to Households Ratios – Total Trip Ends (II + IX).\n\n\n\n\n\n\n\n                                                \nFigure 2: Total Trip Validation\n\n\n\n\n\n\n\n                                                \nFigure 3: Trip Balance Ratios"
  },
  {
    "objectID": "v9x/v900/validation/1-tripgen.html#relative-shares",
    "href": "v9x/v900/validation/1-tripgen.html#relative-shares",
    "title": "Trip Generation",
    "section": "Relative Shares",
    "text": "Relative Shares\nValidation for production relative shares considered the reasonableness of relative shares as shown in Table 1. The relative share between HBW, HBO and NHB trips looks reasonable with HBW at about 14% of the total and the highest share going to HBO. Commercial vehicles account for about 22% of the total trips generated by the model. This is within the expected range for an urban area like the Wasatch Front. IX and XI trips account for around 2% of the total trip generation. This also appears to be reasonable.\n\n\n\n\n\n\n\n\n\nTable 1: Relative Shares of Trip Productions\n\n\nPurpose\nProduction\nShare\n\n\n\n\nHBW\n1,758,104\n14.1%\n\n\nHBO\n5,317,476\n42.5%\n\n\n     HBShp\n908,733\n7.3%\n\n\n     HBOth\n3,719,191\n29.7%\n\n\n     HBScK6\n365,084\n2.9%\n\n\n     HBsc712\n324,468\n2.6%\n\n\nNHB\n2,405,720\n19.2%\n\n\n     NHBW\n812,855\n6.5%\n\n\n     NHBNW\n1,592,865\n12.7%\n\n\nTotal Person\n9,481,300\n75.8%\n\n\nTotal External\n172,855\n1.4%\n\n\n     IX\n78,057\n0.6%\n\n\n     XI\n94,798\n0.8%\n\n\nTotal Truck\n2,802,234\n22.4%\n\n\n     LT\n1,553,653\n12.4%\n\n\n     MD\n884,558\n7.1%\n\n\n     HV\n364,023\n2.9%\n\n\nTotal IX Truck\n21,750\n0.2%\n\n\n     IX MD\n10,716\n0.1%\n\n\n     IX HV\n11,034\n0.1%\n\n\nTotal XI Truck\n30,741\n0.2%\n\n\n     XI MD\n14,372\n0.1%\n\n\n     XI HV\n16,369\n0.1%\n\n\nTelecommute Share of HBW\n69,175\n0.6%\n\n\nTelecommute Share of NHBW\n19,552\n0.2%\n\n\nTOTAL\n12,508,880\n100.0%"
  },
  {
    "objectID": "v9x/v900/validation/2-distribute.html",
    "href": "v9x/v900/validation/2-distribute.html",
    "title": "Trip Distribution",
    "section": "",
    "text": "Modeled average trip lengths for the base year were compared to the 2012 Household Travel Survey. The model was validated for for distance, time, and generalized cost using the following measures:"
  },
  {
    "objectID": "v9x/v900/validation/2-distribute.html#average-trip-lengths",
    "href": "v9x/v900/validation/2-distribute.html#average-trip-lengths",
    "title": "Trip Distribution",
    "section": "Average Trip Lengths",
    "text": "Average Trip Lengths\nThe following figure shows the average trip lengths the modeled and observed time, distance, and generalized cost.\n\n\n\n\n\n\n\nCode\nviewof varSelect = Inputs.select(new Map([['Generalized Cost','GC'], ['Distance', 'Dist'], ['Time', 'Time']]), {value: 'Variable', label: \"Variable\"})\n\nviewof purpSelect  = Inputs.select(new Map([['Internal Trip Purposes', 'MainPurposes'], ['External Trip Purposes', 'Externals']]), {value: 'PurpType', label: \"Purpose Set\"});\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndataLT = transpose(dataStats)\nfiltered_data = dataLT.filter(function(dataL) {\n    return varSelect == dataL.Variable &&\n           purpSelect == dataL.PurpType;\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nimport {GroupedBarChart} from \"@d3/grouped-bar-chart\"\nimport {Legend, Swatches} from \"@d3/color-legend\"\nimport {howto, altplot} from \"@d3/example-components\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlotTable\n\n\n\n\nCode\n//https://observablehq.com/@d3/grouped-bar-chart\nkey = Legend(chart.scales.color, {title: \"Data Source\"})\n\n\n\n\n\n\n\n\n\nCode\nchart = GroupedBarChart(filtered_data, {\n    x: d =&gt; d.Purpose,\n    y: d =&gt; d.AVG_TRIP_LEN,\n    z: d =&gt; d.DataSource,\n    yLabel: \"Average Trip Length\",\n    zDomain: ['Model','Observed'],\n    height: 500,\n    colors: [\"#376092\", \"#77933c\"]\n})\n\n\n\n\n\n\nFigure 1: Average Trip Length between model and observed.\n\n\n\n\n\n\n\nCode\nInputs.table(filtered_data)"
  },
  {
    "objectID": "v9x/v900/validation/2-distribute.html#trip-length-frequencies",
    "href": "v9x/v900/validation/2-distribute.html#trip-length-frequencies",
    "title": "Trip Distribution",
    "section": "Trip Length Frequencies",
    "text": "Trip Length Frequencies\nModeled trip lengths for the base year were compared to the 2012 Household Travel Survey. The following figures shows the modeled and observed time and distance average trip lengths and trip length frequencies.\n\n\n\n\n\n\n\nCode\noptionsTripPurp = \n[\n    ['Home-Based Work'                   , 'HBW'    ],\n    ['Home-Based Shopping'               , 'HBShp'  ],\n    ['Home-Based Other'                  , 'HBOth'  ],\n    ['Home-Based School - Primary'       , 'HBSchPr'],\n    ['Home-Based School - Secondary'     , 'HBSchSc'],\n    ['Non-Home-Based Work'               , 'NHBW'   ],\n    ['Non-Home-Based Non-Work'           , 'NHBNW'  ],\n    ['Light Trucks'                      , 'LT'     ],\n    ['Medium Trucks'                     , 'MD'     ],\n    ['Heavy Trucks'                      , 'HV'     ],\n    ['Internal-to-External'              , 'IX'     ],\n    ['External-to-Internal'              , 'XI'     ]\n]\n\nviewof vTripPurp = Inputs.select(new Map(optionsTripPurp), {value: 'HBW', label: \"Trip Purpose:\"})\n\nviewof vTlfType = Inputs.select(new Map([['Generalized Cost','GC'],['Distance','Dist'],['Time','Time']]), {value: 'Dist', label: \"Variable:\"})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nfreqT = transpose(freq)\n\nfreqT_filtered_Obs = freqT.filter(function(freqData) {\n    return vTripPurp == freqData.TRIPPURP &&\n    vTlfType == freqData.TLFTYPE &&\n    'freqObs' == freqData.freqSource;\n})\n\nfreqT_filtered_Mod = freqT.filter(function(freqData) {\n    return vTripPurp == freqData.TRIPPURP &&\n    vTlfType == freqData.TLFTYPE &&\n    'freqMod' == freqData.freqSource;\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nkey2 = Legend(chart.scales.color, {title: \"Data Source\"})\n\n\n\n\n\n\n\n\n\nCode\nPlot.plot({\n  grid: true,\n  aspectRatio: 0.5,\n  x: {label: 'Distance/Time/Cost', tickFormat: d =&gt; d},\n  y: {label: 'Frequency', tickFormat: f =&gt; `${Math.round(f * 100)}%`},\n  marginRight: 60,\n  marginLeft: 60,\n  style: {\n    fontSize: 15\n  },\n  marginTop: 60,\n  marginBottom: 60,\n  marks: [\n    Plot.line(\n      freqT_filtered_Mod, {x: 'BIN', y: 'freq', stroke: \"#376092\", strokeWidth: 4}),\n    Plot.line(\n      freqT_filtered_Obs, {x: 'BIN', y: 'freq', stroke:  \"#77933c\", strokeWidth: 4}),\n    Plot.frame({strokeOpacity: 0.2}),\n    ]\n});\n\n\n\n\n\n\nFigure 2: Trip Length Frequencies between Model and Observed."
  },
  {
    "objectID": "v9x/v900/validation/3-modechoice.html",
    "href": "v9x/v900/validation/3-modechoice.html",
    "title": "Mode Choice",
    "section": "",
    "text": "The validation results for the Mode Choice portion of the model are shown in this section. Mode Choice was validated against the Utah Transit Authority 2019 On-Board Survey as well as the 2012 Household Travel Survey. Validation is summarized by the following categories:"
  },
  {
    "objectID": "v9x/v900/validation/3-modechoice.html#transit-trips-and-boardings",
    "href": "v9x/v900/validation/3-modechoice.html#transit-trips-and-boardings",
    "title": "Mode Choice",
    "section": "Transit Trips and Boardings",
    "text": "Transit Trips and Boardings\nThe validation of daily transit trips and boardings is shown through the comparison of model and observed data by mode. The model was validated by the following measures:\n\nTrips by Hierarchical Mode\nBoardings by Hierarchical Mode\nTransfer Ratio by Hierarchical Mode\nBoardings by Surveyed Mode (for comparison only)\n\nThe three hierarchical mode measures are summarized by the highest hierarchy mode in a given trip with local bus being the lowest on the hierarchy and commuter rail being the highest. For example, if a trip uses Local Bus and then transfers to LRT, the trip is stored as a LRT trip. Trips by Hierarchical Mode represent each trip as a single number, regardless of the number of transfer or different modes that were used on a trip.\nBoardings by Hierarchical Mode represent each boarding separately but summarized at the highest hierarchical mode of the trip. For example, for one transfer from Local Bus to LRT there are two boardings, one on each mode, but they are both stored in the highest hierarchal mode of LRT. The Transfer Ratio by Hierarchical Mode is the ratio between boardings and trips for any given mode.\nThe final measure Boardings by Surveyed Mode represents the total boardings on each mode individually. They are not summarize at the highest hierarchical mode of the trip but rather at the mode on which the boarding actually occurred. For example, the Local Bus to LRT trip mentioned previously would be summarized in this measure as one boarding on Local Bus and one boarding one LRT. This measure is for comparison use only, since the structure of the Mode Choice model does not consider this measure during calibration.\nThe total number of boardings are the same between hierarchical mode and surveyed mode, but depending on the make-up of the trips, there totals by mode will vary.\nThe model data for hierarchical mode measures is taken from the shares reports v9_SE19_Net19_RegionShares_Pk.csv and v9_SE19_Net19_RegionShares_Ok.csv. The model data for the surveyed mode comparison is taken from _v9_SE19_Net19_1_PA_Route.dbf.\nThe interactive Figure 1 allows for the visual comparison of model and observed values for each Transit Trips and Boardings category.\n\n\nCode\nhtml`&lt;br/&gt;`\n\n\n\n\n\n\n\n\n\nCode\nviewof bPlotSelect = Inputs.select(new Map([['Trips by Hierarchical Mode', 'Trips by Hierarchical Mode'], ['Boardings by Hierarchical Mode', 'Boardings by Hierarchical Mode'], ['Transfer Ratio by Hierarchical Mode','Transfer Ratio'], ['Boardings by Mode Surveyed','Boardings by Mode Surveyed']]), {value: nameGroup, label: \"Category\"})\nviewof metric = Inputs.radio(new Map([[\"Difference\", \"Difference\"], [\"% Difference\", \"% Difference\"]]), {value: \"Difference\", label: \"View:\"})\n\ndataBLC = transpose(boardChart)\nfiltered_bDataC = dataBLC.filter(function(dataBLC) {\n    return bPlotSelect == dataBLC.Title &&\n           \"Value\" == dataBLC.View;\n})\ndataBTT = transpose(boardTable)\nfiltered_bDataT = dataBTT.filter(function(dataBTT) {\n    return bPlotSelect == dataBTT.Title;\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nhtml`\n&lt;br/&gt;\n&lt;table&gt;\n    &lt;thead&gt;\n    &lt;tr&gt;\n        ${[\"Mode\", \"Model\", \"Observed\", \"Difference\", \"% Difference\"].map((d, i) =&gt; {\n            const widths = ['90px', '60px', '70px', '75px', '90px']; // Define the widths\n            return html`&lt;th style='text-align: ${i === 0 ? \"left\" : \"right\"}; padding: 5px; width: ${widths[i]};'&gt;${d}&lt;/th&gt;`;\n        })}\n    &lt;/tr&gt;\n    &lt;/thead&gt;\n    &lt;tbody&gt;\n        ${filtered_bDataT.map(row =&gt; {\n            const isBold = row['Mode'] === 'Total';\n            return html`&lt;tr style='border-bottom: 1px solid lightgrey;'&gt;\n                ${[\"Mode\", \"Model\", \"Observed\", \"Difference\", \"% Difference\"].map((d, i) =&gt; {\n                    const widths = ['90px', '60px', '70px', '75px', '90px']; // Define the widths\n                    return html`&lt;td style='text-align: ${i === 0 ? \"left\" : \"right\"}; padding: 5px; width: ${widths[i]}; font-weight: ${isBold ? 'bold' : 'normal'};'&gt;${row[d]}&lt;/td&gt;`;\n                })}\n            &lt;/tr&gt;`;\n        })}\n    &lt;/tbody&gt;\n&lt;/table&gt;`\n\n\n\n\n\n\n\n\n\n\nCode\nkey2 = Legend(bChart.scales.color, {title: \"Data Source\"})\n\nbChart = GroupedBarChart(filtered_bDataC, {\n    x: d =&gt; d.Mode,\n    y: d =&gt; d.ViewValue,\n    z: d =&gt; d.DataSource,\n    xDomain: ['Local Bus', 'Core Bus', 'Express Bus', 'BRT', 'LRT', 'CRT'],\n    yLabel: \"Value\",\n    zDomain: ['Model','Observed'],\n    width: 500,\n    height: 225,\n    colors: [\"#376092\", \"#77933c\"]\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nfiltered_bData2 = dataBLC.filter(function(dataBLC) {\n    return bPlotSelect == dataBLC.Title  &&\n           metric == dataBLC.View;\n})\n\n//https://observablehq.com/@d3/diverging-bar-chart\nimport {DivergingBarChart} from \"@d3/diverging-bar-chart\"\n\nhtml`&lt;br/&gt;`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nchart3 = DivergingBarChart(filtered_bData2, {\n    x: d =&gt; d.ViewValue,\n    y: d =&gt; d.Mode,\n    xFormat: metric === \"Difference\" ? \"+,d\" : \"+%\",\n    xLabel: \"Model vs Observed Differences\",\n    height: 200,\n    colors: d3.schemeRdBu[3]\n})\n\n\n\n\n\n\n\n\n\n\n\nCode\ntbEmptyCell = 1\n\n\n\n\n\n\nFigure 1: Transit Trips and Boardings Model vs Observed Comparison\n\n\n\n\n\nCode\nhtml`&lt;br/&gt;`\n\n\n\n\n\n\n\nWhen considering Trips by Hierarchical Mode, the calibration routine of the model results in the total number of transit trips in the model being very close to the observed. For this model the model trips are only 0.1% higher than observed for the total number of trips. By mode the differences are within reasonable ranges for the higher trip modes. For example, LRT is only 0.3% high and CRT is only 0.1% low.\nDue to the very low number of trips for Core Bus and Express Bus, their differences are acceptable. Currently, Core Bus for example has only one route. In future phases of the RTP, additional Core Bus service is planned. While further calibration could have brought the Core Bus validation more in line with observed, over-calibrating the model was not desired.\nBoardings by Hierarchical Mode show a similar pattern. Overall boardings are only 1.9% lower in model compared to observed, and the modes Local Bus, LRT, and CRT all within 5%. Core Bus is again the furthest away, but it also is a single route with lower number of boardings as compared to the higher boarding modes.\nThe Transfer Ratio by Hierarchical Mode shows the relationship between the trips and the boardings. While the model was only slightly higher in trips, the boardings were low. This results in a lower transfer ratio, which is still acceptable with all values being within about 5%.\nAnd for comparison, Boardings by Mode Surveyed shows acceptable differences. The Core Bus and Express Bus values show much larger differences; but again given their low volumes, these are reasonable differences."
  },
  {
    "objectID": "v9x/v900/validation/3-modechoice.html#mode-share",
    "href": "v9x/v900/validation/3-modechoice.html#mode-share",
    "title": "Mode Choice",
    "section": "Mode Share",
    "text": "Mode Share\nMode Share validation is shown through the comparison by groups of mode, time period, and trip purpose. For model and observed shares, the total percent for each combination of mode group, time period, and trip purpose adds up to 100%.\nMode groups compared include groupings of auto, transit, vehicle occupancy, and transit modes. The highest nest is motorized and non-motorized down to lower nests of individual transit modes and transit access modes. Shares were calculated for the following mode groupings:\n\nMotorized / Non-Motorized\nAuto / Transit\nDrive Alone / Shared Ride\nShared Ride # of Occupants\nTransit Mode\nTransit Access Mode\n\nAdditionally, the shares were compared by the following time period groupings:\n\nDaily\nPeak\nOff-peak\n\nFinally, the shares were further compared for each of the following trip purposes:\n\nAll Purposes\nHome-Based Work\nHome-Based College\nHome-Based Other\nNon-Home Based\n\nIn the model, Home-Based College is the only trip purpose that does not include trips in the off-peak time period. So, any trips with this purpose in the observed data were moved to the peak time period for comparison.\nThe interactive Figure 2 allows for selecting of different combinations to visualize the comparisons. The observed data comes from a combination of the Household Travel Survey and the 2019 Transit On-Board Survey.\n\n\nCode\nhtml`&lt;br/&gt;`\n\n\n\n\n\n\n\n\n\nCode\nviewof plotSelect    = Inputs.select(new Map([[nameModeMnMShare,nameModeMnMShare],\n                                              [nameModeATShare ,nameModeATShare ],\n                                              [nameModeDAShare ,nameModeDAShare ],\n                                              [nameMode23Share ,nameMode23Share ],\n                                              [nameModeTransit ,nameModeTransit ],\n                                              [nameModeAccess  ,nameModeAccess  ]\n                                             ]), {value: nameGroup, label: \"Mode Group:\"})\nviewof periodSelect  = Inputs.select(new Map([['Daily', 'DY'], ['Peak', 'PK'], ['Off-Peak', 'OK']]), {value: namePeriod, label: \"Time Period:\"});\nviewof purposeSelect = Inputs.select(new Map([['All Purposes', 'All'], ['Home-Based Work', 'HBW'], ['Home-Based College', 'HBC'], ['Home-Based Other', 'HBO'], ['Non-Home Based', 'NHB']]), {value: 'TripPurpose', label: \"Trip Purpose:\"});\n\ndataLT = transpose(dataLong)\ndataTT = transpose(dataTable)\n\nfiltered_data = dataLT.filter(function(dataL) {\n    return plotSelect == dataL.Group &&\n           periodSelect == dataL.Period &&\n           purposeSelect == dataL.TripPurpose;\n})\ntable_filtered_data = dataTT.filter(function(dataTT) {\n    return plotSelect == dataTT.Group &&\n           periodSelect == dataTT.Period &&\n           purposeSelect == dataTT.TripPurpose;\n})\n\nimport {GroupedBarChart} from \"@d3/grouped-bar-chart\"\nimport {Legend, Swatches} from \"@d3/color-legend\"\nimport {howto, altplot} from \"@d3/example-components\"\n\nxDomain = {\n    switch(plotSelect) {  // assuming all data points have the same Mode\n        case nameModeMnMShare:\n            return ['Motorized', 'Non-Motorized'];\n            break;\n        case nameModeATShare:\n            return ['Auto', 'Transit'];\n            break;\n        case nameModeDAShare:\n            return ['Drive Alone', 'Shared Ride'];\n            break;\n        case nameMode23Share:\n            return ['Shared Ride 2 Occupants', 'Shared Ride 3+ Occupants'];\n            break;\n        case nameModeTransit:\n            return ['Local Bus', 'Core Bus', 'Express Bus', 'BRT', 'LRT', 'CRT'];\n            break;\n        case nameModeAccess:\n            return ['Walk', 'Drive'];\n            break;\n        default:\n            return [];  // or set some sensible default\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nhtml`\n&lt;br/&gt;\n&lt;table&gt;\n    &lt;thead&gt;\n    &lt;tr&gt;\n        ${[plotSelect, \"Model\", \"Observed\", \"Difference\"].map((d, i) =&gt; \n        html`&lt;th style='text-align: ${i === 0 ? \"left\" : \"right\"}; padding: 5px; ${i === 0 ? \"width: 185px;\" : \"\"}'&gt;${d}&lt;/th&gt;`)}\n    &lt;/tr&gt;\n    &lt;/thead&gt;\n    &lt;tbody&gt;\n    ${table_filtered_data.map(row =&gt; html`\n        &lt;tr style='border-bottom: 1px solid lightgrey;'&gt;\n        ${[\"Mode\", \"Model\", \"Observed\", \"Difference\"].map((d, i) =&gt; \n            html`&lt;td style='text-align: ${i === 0 ? \"left\" : \"right\"}; padding: 5px; ${i === 0 ? \"width: 185px;\" : \"\"}'&gt;${row[d]}&lt;/td&gt;`)}\n        &lt;/tr&gt;`)}\n    &lt;/tbody&gt;\n&lt;/table&gt;`\n\n\n\n\n\n\n\n\n\n\nCode\nkey = Legend(chart.scales.color, {title: \"Data Source\"})\n\nchart = GroupedBarChart(filtered_data, {\n    x: d =&gt; d.Mode,\n    y: d =&gt; d.Percent,\n    z: d =&gt; d.DataSource,\n    xDomain: xDomain,\n    yLabel: \"Percent\",\n    yDomain: [0,1],\n    zDomain: ['Model','Observed'],\n    width: 400,\n    height: 250,\n    colors: [\"#376092\", \"#77933c\"]\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nbEmtptyCell=1\n\n\n\n\n\n\nFigure 2: Model vs Observed Mode Shares by Mode Group, Time Period, and Trip Purpose\n\n\n\n\n\nCode\nhtml`&lt;br/&gt;&lt;br/&gt;`\n\n\n\n\n\n\n\nThe Motorized / Non-motorized grouping of model shares are within 0.2% of the observed data for the daily time period and all trip purposes with non-motorized shares being slightly higher than observed and motorized shares being slightly lower. The model shares for additional combinations of time period and purpose are all within 0.5%.\nThe Transit Mode group of model shares are also close to observed with all modes for all time periods and trip purposes. At the Daily time period for all purposes, Local Bus has slightly higher share at 1.5% compared to observed than other modes, such as CRT that is 0.3% lower than observed and LRT that is 0.2% lower than observed. Nearly all the model shares for Transit Mode combinations of time period and are within 5% of observed. The one exception is Home-Based Other which in the peak period for Local Bus is 5.5% higher than observed. Transit Access Mode model shares are all within 5% of observed shares."
  },
  {
    "objectID": "v8x/v832/downloads.html",
    "href": "v8x/v832/downloads.html",
    "title": "Downloads",
    "section": "",
    "text": "The downloads for the Version 8.3.2 documentation is shown below by category.\n\nWhat’s New Document\n\n v8.3.2 2022-02-04 Whats New \n v8.3.2 2021-11-10 Whats New \n\n\n\nModel Validation Report\n\n v8.3.2 2022-02-04 Calib Valid \n v8.3.2 2021-10-17 Calib Valid \n\n\n\nInputs Document\n\n v8.3.2 2022-02-04 Inputs"
  },
  {
    "objectID": "v8x/v832/index.html",
    "href": "v8x/v832/index.html",
    "title": "Preface",
    "section": "",
    "text": "This is the documentation for the Wasatch Front Travel Demand Model for Version 8.3.2. The documentation includes the following reports::\n\nWhat’s New Document\nModel Validation Report\nInputs Document\n\nFor access to this version of the TDM please contact the following persons:\n\nSuzie Swim (WFRC): sswim@wfrc.org\nMatt DeLora (MAG): mdelora@magutah.org"
  },
  {
    "objectID": "v8x/v832/whats-new/1-20220204-update.html",
    "href": "v8x/v832/whats-new/1-20220204-update.html",
    "title": "2022-02-04 Update",
    "section": "",
    "text": "This first part of this document contains a quick comparison between the 2022-02-04 version of the model and the 2021-11-10 version of the model.\n\n\nThe following changes were made the Distribution and Final Assignment scripts of the model\n\nChanged truck penalty from speed factor to a speed reduction penalty\n\nUpdated toll calculations:\nUpdate COST function\n\nUpdate TC function\nGeneral model cleanup\n\nAdditionally the Scenario Folder was updated with updated default ControlCenter.block files, a rolled date of model version, Fixed Cluster START & STARTHIDE typo, and added ‘blank folder setup’ folder.\n\n\n\nFigure 1 and Figure 2 contain a daily total volume comparison and a daily truck volume comparison. Daily total volumes are very similar between the two models. There is a slight shift of volume off of I-15 and onto parallel corridors. The largest volume shifts in 2050 are between I-215 and Bangerter Highway. Figure 1 shows one-way volumes.\n\n\n\nFigure 1: Daily Total Volume Difference v8.3.2 2022-02-04 vs v8.3.2 2021-11-10.\n\n\nDaily truck volumes show more differences with volumes dropping between the two models. The drop in volumes is less than a 1,500 trucks per day on freeways but is widespread throughout the region. Figure 2 shows one-way volumes.\n\n\n\nFigure 2: Daily Truck Volume Difference v8.3.2 2022-02-04 vs v8.3.2 2021-11-10."
  },
  {
    "objectID": "v8x/v832/whats-new/1-20220204-update.html#changes",
    "href": "v8x/v832/whats-new/1-20220204-update.html#changes",
    "title": "2022-02-04 Update",
    "section": "",
    "text": "The following changes were made the Distribution and Final Assignment scripts of the model\n\nChanged truck penalty from speed factor to a speed reduction penalty\n\nUpdated toll calculations:\nUpdate COST function\n\nUpdate TC function\nGeneral model cleanup\n\nAdditionally the Scenario Folder was updated with updated default ControlCenter.block files, a rolled date of model version, Fixed Cluster START & STARTHIDE typo, and added ‘blank folder setup’ folder."
  },
  {
    "objectID": "v8x/v832/whats-new/1-20220204-update.html#model-results",
    "href": "v8x/v832/whats-new/1-20220204-update.html#model-results",
    "title": "2022-02-04 Update",
    "section": "",
    "text": "Figure 1 and Figure 2 contain a daily total volume comparison and a daily truck volume comparison. Daily total volumes are very similar between the two models. There is a slight shift of volume off of I-15 and onto parallel corridors. The largest volume shifts in 2050 are between I-215 and Bangerter Highway. Figure 1 shows one-way volumes.\n\n\n\nFigure 1: Daily Total Volume Difference v8.3.2 2022-02-04 vs v8.3.2 2021-11-10.\n\n\nDaily truck volumes show more differences with volumes dropping between the two models. The drop in volumes is less than a 1,500 trucks per day on freeways but is widespread throughout the region. Figure 2 shows one-way volumes.\n\n\n\nFigure 2: Daily Truck Volume Difference v8.3.2 2022-02-04 vs v8.3.2 2021-11-10."
  },
  {
    "objectID": "v8x/v832/whats-new/1-genparams.html",
    "href": "v8x/v832/whats-new/1-genparams.html",
    "title": "General Parameters",
    "section": "",
    "text": "General Parameters\nFor highway calibration purposes, KFACs were defined for the following county-to-county trips:\n\nKFAC for Utah County to/from Salt Lake County trips is set to 0.85.\nKFAC for Davis County to/from Salt Lake County trips is set to 0.95.\n\nFor transit calibration purposes, the BRT Mode 5 multiplier was set to 0.40. The Mode 9 multiplier was removed, since BRT Mode 9 was calibrated independently of LRT for v8.3.2."
  },
  {
    "objectID": "v8x/v832/whats-new/10-modelresults.html",
    "href": "v8x/v832/whats-new/10-modelresults.html",
    "title": "Model Results - Comparison with v8.3.1",
    "section": "",
    "text": "Model Results - Comparison with v8.3.1\nFigure 1 shows a comparison of daily roadway volume in the v8.3.2 model compared to the v8.3.1 model. Roadway links in red demonstrate an increase in traffic and green show a decrease in traffic between the new and the old model. The thicker the line and darker the color, the greater the magnitude of change. At the region level, the changes show that v.8.3.2 includes greater county-to-county flows as demonstrated in the 2019 base year with volume between Salt Lake County and both Davis and Utah Counties increasing while roadways such as I-80, I-215, and SR-201 showing decreasing traffic. This pattern is continued in the 2050 model with the intensity of change increasing on north/south freeways and arterials.\n\n\n\nFigure 1: Model Daily Volumes Comparison (v8.3.2 vs v8.3.1).\n\n\nComparison of the highway volume validations of the v8.3.2 and v8.3.1 models are shown in Figure 2. There are separate charts by facility type and by county, as well as vehicle type. Medium and heavy truck trip generations and trip-length-frequencies were adjusted in the calibration process to bring model truck volumes closer in line with observed. Overall, for all vehicles the v8.3.2 model is closer to observed with all facility types within 4% of observed. Utah County improves significantly to only 1% low while Box Elder, Weber, and Davis counties are a couple percent lower than v8.3.1. When looked at by facility type, medium and heavy trucks see major improvements with minor arterials and major collectors and are much closer to observed by significant margins, but overall are slightly lower than observed as compared to v8.3.1.\n\n\n\nFigure 2: Highway Volumes Validation (v8.3.2 and v8.3.1).\n\n\nFigure 3, Figure 4, and Figure 5 show a comparison between daily model volumes by vehicle type with observed traffic volumes. There are slight changes in the All Vehicles figures between v8.3.2 and v8.3.1. Greater improvements are seen in the Medium and Heavy Truck figures, especially in the Box Elder and the Mountain View Corridor areas.\n\n\n\nFigure 3: All Vehicles Daily Volumes Comparison (Model vs Observed).\n\n\n\n\n\nFigure 4: Medium Trucks Daily Volumes Comparison (Model vs Observed).\n\n\n\n\n\nFigure 5: Heavy Trucks Daily Volumes Comparison (Model vs Observed)\n\n\nTransit ridership between v8.3.1 and v8.3.1 were compared at the trips, boardings, and mode share levels. Figure 6 and Figure 7 show a comparison of daily transit ridership and boardings for both the v8.3.2 and the v8.3.1 models. The v8.3.1 and v8.3.2 model transit was calibrated to the UTA On-Board Survey for 2015 and 2019, respectively, so the ridership for each of those models falls right on the OBS target. The boardings for the model are estimated but are close to average annual boardings as reported by UTA. Boardings between 2015 and 2019 have been relatively flat. The increase to 2050 is based on increased transit attractiveness and more supportive land use as built into the model.\n\n\n\nFigure 6: Daily Transit Ridership - All Modes.\n\n\n\n\n\nFigure 7: Daily Boardings - All Modes.\n\n\nShare by transit mode is shown in Figure 8 and Figure 9 for v8.3.2 and v8.3.1, respectively. In v8.3.2, Core Bus routes (Mode 5) show a greater portion of trips in v8.3.2 than in v8.3.1. These additional trips come mostly from Light Rail, which actually sees a decrease in mode share in 2030. Commuter Rail shares remain relatively consistent, as well as BRT.\n\n\n\nFigure 8: Share by Transit Mode – v8.3.2.\n\n\n\n\n\nFigure 9: Share by Transit Mode – v8.3.1.\n\n\nEven though the transit ridership forecasts are lower by 23% in v8.3.2 compared to v8.3.1, the 2019 to 2050 ratios for each model are similar with 2.0 in v8.3.2 and 2.2 in v8.3.1.\n\n\n\nFigure 10: Comparison of 2019 and 2050 ratios.\n\n\nAs mentioned in a previous section, county-level adjustments were made in Davis and Utah counties to help better align station boardings in the model with observed. The comparison of the models with observed is shown in Figure 11. Due to these adjustments, there is a slight increase in Utah County boardings. However, Provo Station decreased slightly to just over half of what is observed. Davis County boardings proved to be more sensitive to the adjustment and a significant decrease is shown but still higher than observed boardings.\n\n\n\nFigure 11: 2019 Daily FrontRunner Boardings by Station Compared to Observed."
  },
  {
    "objectID": "v8x/v832/whats-new/2-inputdata.html",
    "href": "v8x/v832/whats-new/2-inputdata.html",
    "title": "Input Data",
    "section": "",
    "text": "Speed factor changes were made to the following locations:\n\nUS-89 North Davis County SFAC_BASE adjusted to 0.82\nLegacy Pkwy South of Parrish SFAC_BASE and SFAC_FUT set to 0.95\nUniversity Avenue from 300 South to 700 N SFAC_BASE and SFAC_FUT set to 0.85\nFreedom Boulevard from 300 South to 500 N SFAC_BASE and SFAC_FUT set to 0.85\nProvo Center Street from 500 West to University Ave SFAC_BASE and SFAC_FUT set to 0.60\n\nCapacity factors changes were made to the following locations:\n\nProvo Center Street from 500 West to University Ave CFAC_BASE and CFAC_FUT set to 0.85\n\n\n\nThe highway network was updated in the MAG and WFRC areas to reflect the third round of Regional Transportation Plan (RTP) amendments. Additional edits were made in the MAG area to conform with more recent project clarification. Figure 1 shows where lanes were added (green) or were taken away (orange) between versions 8.3 and 8.3.1 highway networks.\n\n\n\nFigure 1: Lane Change between 2019 and 2050 for Model v8.3.2 2022-02-04.\n\n\n\n\n\nThe speed of rail transit is coded onto rail-only links within the master highway network. Transit speed for LRT were updated to reflect 2019 operations. Most of the speed changes were less than 5 mph. Figure 2 shows where light rail speeds were changed.\n\n\n\nFigure 2: Change in Transit Speeds for LRT in Salt Lake County. Green: Increase in Speeds — Red: Decrease in Speeds.\n\n\ntbl-lrt-speed shows the resulting average speeds along entire light rail routes. The net effect of the update was generally lower speeds, with the TRAX-Blue line and the S-Line having the largest drops in speed with a drop of 8.2% and 14.5%, respectively.\n\n\nCode\nfrom IPython.display import Markdown\nfrom tabulate import tabulate\ntable = [[\"TRAX-Blue\" ,'24.4','22.4','-2.0','-8.2% '],\n         [\"TRAX-Green\",'19.2','18.6','-0.6','-3.1% '],\n         [\"TRAX-Red\"  ,'24.4','23.6','-0.8','-3.3% '],\n         [\"S-Line\"    ,'13.8','11.8','-2.0','-14.5%']]\nMarkdown(tabulate(\n  table, \n  headers=[\"Route\",\"Before Updates\", \"After Updates\", \"Difference\", \"% Difference\"]\n))\n\n\n\n\nTable 1: Average Travel Speed (MPH) by Route for LRT\n\n\nRoute\nBefore Updates\nAfter Updates\nDifference\n% Difference\n\n\n\n\nTRAX-Blue\n24.4\n22.4\n-2\n-8.2%\n\n\nTRAX-Green\n19.2\n18.6\n-0.6\n-3.1%\n\n\nTRAX-Red\n24.4\n23.6\n-0.8\n-3.3%\n\n\nS-Line\n13.8\n11.8\n-2\n-14.5%\n\n\n\n\n\n\nAdditional changes include the following:\n\nFrontRunner speeds were adjusted to match the 2019 schedule\nSeveral SEGID changes to match UDOT 2019 Segment shapefile\nCorrected I-15 SB to include lane drop north of Lehi 2100 North interchange and lane add south of interchange to match constructefacility\nUpdated GIS link & node shapefiles"
  },
  {
    "objectID": "v8x/v832/whats-new/2-inputdata.html#highway-network",
    "href": "v8x/v832/whats-new/2-inputdata.html#highway-network",
    "title": "Input Data",
    "section": "",
    "text": "Speed factor changes were made to the following locations:\n\nUS-89 North Davis County SFAC_BASE adjusted to 0.82\nLegacy Pkwy South of Parrish SFAC_BASE and SFAC_FUT set to 0.95\nUniversity Avenue from 300 South to 700 N SFAC_BASE and SFAC_FUT set to 0.85\nFreedom Boulevard from 300 South to 500 N SFAC_BASE and SFAC_FUT set to 0.85\nProvo Center Street from 500 West to University Ave SFAC_BASE and SFAC_FUT set to 0.60\n\nCapacity factors changes were made to the following locations:\n\nProvo Center Street from 500 West to University Ave CFAC_BASE and CFAC_FUT set to 0.85\n\n\n\nThe highway network was updated in the MAG and WFRC areas to reflect the third round of Regional Transportation Plan (RTP) amendments. Additional edits were made in the MAG area to conform with more recent project clarification. Figure 1 shows where lanes were added (green) or were taken away (orange) between versions 8.3 and 8.3.1 highway networks.\n\n\n\nFigure 1: Lane Change between 2019 and 2050 for Model v8.3.2 2022-02-04.\n\n\n\n\n\nThe speed of rail transit is coded onto rail-only links within the master highway network. Transit speed for LRT were updated to reflect 2019 operations. Most of the speed changes were less than 5 mph. Figure 2 shows where light rail speeds were changed.\n\n\n\nFigure 2: Change in Transit Speeds for LRT in Salt Lake County. Green: Increase in Speeds — Red: Decrease in Speeds.\n\n\ntbl-lrt-speed shows the resulting average speeds along entire light rail routes. The net effect of the update was generally lower speeds, with the TRAX-Blue line and the S-Line having the largest drops in speed with a drop of 8.2% and 14.5%, respectively.\n\n\nCode\nfrom IPython.display import Markdown\nfrom tabulate import tabulate\ntable = [[\"TRAX-Blue\" ,'24.4','22.4','-2.0','-8.2% '],\n         [\"TRAX-Green\",'19.2','18.6','-0.6','-3.1% '],\n         [\"TRAX-Red\"  ,'24.4','23.6','-0.8','-3.3% '],\n         [\"S-Line\"    ,'13.8','11.8','-2.0','-14.5%']]\nMarkdown(tabulate(\n  table, \n  headers=[\"Route\",\"Before Updates\", \"After Updates\", \"Difference\", \"% Difference\"]\n))\n\n\n\n\nTable 1: Average Travel Speed (MPH) by Route for LRT\n\n\nRoute\nBefore Updates\nAfter Updates\nDifference\n% Difference\n\n\n\n\nTRAX-Blue\n24.4\n22.4\n-2\n-8.2%\n\n\nTRAX-Green\n19.2\n18.6\n-0.6\n-3.1%\n\n\nTRAX-Red\n24.4\n23.6\n-0.8\n-3.3%\n\n\nS-Line\n13.8\n11.8\n-2\n-14.5%\n\n\n\n\n\n\nAdditional changes include the following:\n\nFrontRunner speeds were adjusted to match the 2019 schedule\nSeveral SEGID changes to match UDOT 2019 Segment shapefile\nCorrected I-15 SB to include lane drop north of Lehi 2100 North interchange and lane add south of interchange to match constructefacility\nUpdated GIS link & node shapefiles"
  },
  {
    "objectID": "v8x/v832/whats-new/2-inputdata.html#transit-network",
    "href": "v8x/v832/whats-new/2-inputdata.html#transit-network",
    "title": "Input Data",
    "section": "Transit Network",
    "text": "Transit Network\n\nHand-Coded Walk-Access Links\nHand-coded walk-access links are an additional input for transit beyond the automatically generated walk-access links. Auto-generated walk-access links are created between zone centroids and transit stops within a certain distance as defined by area of the zone, as long as they do not cross barriers as defined by functional type. Hand-coded walk-access links are user-defined, supplemental walk access where an auto-generated link would not be created or where walk access is more attractive than the TAZ structure and auto-generated links would suggest.\nThe update process removed a majority of the general hand-coded walk access links, reducing the number from 234 to 31 links. Areas that retained or added hand-coded links include SLC International Airport, Hill Air Force Base, University of Utah, and Utah Valley University. Figure 3 shows hand-coded walk-access links before and after the updates.\n\n\n\nFigure 3: Hand-Coded Walk Access Links.\n\n\n\n\nPark-And-Ride\nPark-and-Ride lots are coded onto nodes within the master highway network and are defined by what transit mode they service. To be used by the travel model, park-and-ride nodes need to be coded at nodes that serve as rail or bus stops. Figure 4 (a) shows what changes were made to park-and-ride lots, which include 17 additional locations, 49 removed locations, and 14 locations that were modified by changing the mode they service. Most of the park-and-ride lots removals were due to redundancy on highway nodes adjacent to another park-and-ride lot at a rail node. The park-and-ride lots additions mostly included new lots along express bus routes. The resulting park-and-ride lot locations, including ones that were not edited, are shown in Figure 4 (b).\n\n\n\n\n\n\n\n(a) Park-And-Ride Lot Changes\n\n\n\n\n\n\n\n(b) Park-And-Ride Lots After Updates\n\n\n\n\nFigure 4: Park-And-Ride Lots. Red: Removed — Green: Added — Blue: Modified\n\n\n\n\nTransit Line Changes\nTransit line files were updated based on actual 2019 route configuration. Transit line files include route alignments, stop locations, and peak/off-peak headway designation. Additionally, 2024, 2030, 2040, 2050, 2030UF, 2040UF, 2050UF transit was updated to reflect 2019 input changes.\nA general edit that was made to all lines that connect directly to rail was the removal of bus stops on a roadway node directly adjacent to a stop at a rail node. Only the rail node stop remains. Due to the amount of lines affected by this change, they are not listed individually in the line details below. There were also a couple of highway network edits made in relation to transit line changes:\n\nAt the Blue Line end-of-line in Draper, the centroid connector for the rail station connection to the highway network moved offintersection of Pioneer Road / 1300 East intersection and connected directly to Pioneer Drive.\nA connection between 24th Street and Wall Avenue in Ogden was added to represent the existing connection on each side of theviaduct. The associated transit-only link was removed.\n\nThe line file changes are shown in the lists below, arranged by file and route name. Only lines that have changes, other than those listed above, are included.\nmag_brt_2019.lin\n\nBRT_ProOrm:\n\nstops removed:\n\n24779 - Geneva Road\n26400 - 900 E/Campus Ln\n26487 - 750 S/100 W\n\nStops moved:\n\n22881 to 26206 (from intersection of University Pkwy/900 E to the west)\n25972 to 23019 (moved further west to intersection of 400 E/700 N)\n23069 to 26203 (moved further north off of intersection of 200 N/Univ Ave)\n23066 to 26202 (moved further south off of intersection of 300 S/Univ Ave)\n26184 to 26192 (moved off University Ave and onto Town Centre Blvd)\n23160 to 24332 (moved west of intersection East Bay Blvd/1860 S)\n\nAlignment changed: Off of University Avenue between 920 S and Town Centre Drive and onto Town Centre Blvd\n\n\nmag_exp_2019.lin\n\nM807_NoCnty: Many stops removed. Realignment changed at each end of route. Reverse direction removed.\nM806_EglMtn: Headway changed from 30/0 to 45/0. Many stops removed. Realignment changed at Eagle Mtn end-of-line and to stay on freeway through American Fork. Reverse direction removed.\n\nmag_lcl_2019.lin\n\nM805_Santaquin: Headway 1/2 changed from 30/0 to 45/60. Stop added: 23552 (Santaquin end of line moved one node to west). Three stops removed in SF, only 25321 remains. Three stops removed in Provo: 26487, 26488, 23152.\nM809_AM-PG: Changed from two-way route to one-way route. Stops removed: 24769, 22358, 24162, 25729, 22389, 25727, 25513, 22514, 22390, 25726, 22392, 22394. Stops added: 24189, 22395.\nM821_Psn: Various stops removed.\nM822_Psn: Various stops removed.\nM831_WPr: Alignment changed around UVU. Various stops removed.\nM833_CntrPr: Various stops removals.\nM834_EstPr: Alignment changed at Univ Pkwy/2230 N. Various stops removed.\nM841_UVU: UVU main campus end-of-line moved one further node to 26601. Various stops removed.\nM850_StateStreet: Alignment Changed: Ashton Blvd & 2100 N, PG downtown, which required addition of reverse direction and change to one-way route due to one-way links. Various stops removals.\nM862_Orem: Alignment changed around UVU to use campus circulator roadway. Various stops removed.\nM864_Thanksgiving Point: Various stops removed.\nM871_SLtoUtahCnty: Northern end-of-line alignment changed to match updated highway network connection to Blue Line Draper Station.\n\nrail_2019.lin\n\nOGPNShuttle: Route removed, since service to Pleasant View discontinued in 2015.\n\nwfrc_og_lcl_2019.lin\n\nO601: Connection to Wall Avenue was removed from transit-only link and put on new highway network connection.\nO603: Southern end-of-line moved to McKay Dee Hospital.\nO606: Northern end-of-line moved from Harrison Blvd to Monroe Blvd.\nO608: Northern end-of-line moved from Harrison Blvd to Monroe Blvd.\nO628: Southern end-of-line extended to match southern circulation around Layton IHC.\nO630: Southern end-of-line moved from Weber State University to Ogden FrontRunner Station.\nO645: Northern end-of-line extended to US-89.\nOF618: Headway2 changed from 30 to 60.\nS470: Connection to Clearfield Station CRT added.\nS455: One stop removed in University of Utah area.\n\nwfrc_sl_exp_2019.lin\n\nS2X: Changed to two-way route. Two stops removed on 200 South near Gateway. Two stops added in University of Utah area.\nS307X: Headway 1 changed from 30 to 47.\nS313X: Alignment through Fort Union area changed.\nS354X: Extended north end-of-line to Red Line station.\nS451X: Reverse direction removed.\nS454: Stop added at Green Line airport stop. Some stops along Green Line and North Temple moved to rail stop locations.\nS456: Stop added at Farmington Station CRT. Some stops along Green Line and North Temple moved to rail stop locations.\nS471: Alignment through Bountiful modified.\nS473X: Extended southern end-of-line further to Research Park.\nS902: Headway changed from 15/0 to 60/90. Some stops added.\n\nwfrc_sl_lcl_2019.lin\n\nD461: Some stop in Woods Cross Station CRT area removed.\nS11: Eastern end-of-line shortened to stop at University of Utah Medical Center and not Red Line.\nS201: Southern end-of-line extended to South Jordan Station CRT.\nS217: Alignment changed near green line (N Temple), route removed from 2200 West.\nS218: S218 - changed ONEWAY=F to become two-way route\nS240: Alignment changed at Pieper Blvd.\nS41: West end-of-line extended one node down 5600 West.\nS463: Connection to Wood Cross Station CRT.\nS509: Alignment changed around SR-201.\nS519/520 - added ONEWAY=F to explicitly define two-way route\nS526: Headway changed from 40/40 to 60/0.\nS551: Headway 1 changed from 30 to 40. Some stops along Green Line and North Temple moved to rail stop locations.\nSF453: Eastern EOL brought to rail node 20053.\nSF514: Stop added at SoJo Station CRT.\nSF546: Connection added to Draper Town Center Station CRT.\nSF94: Eastern end-of-line extended one more node to east."
  },
  {
    "objectID": "v8x/v832/whats-new/2-inputdata.html#segments-and-factors",
    "href": "v8x/v832/whats-new/2-inputdata.html#segments-and-factors",
    "title": "Input Data",
    "section": "Segments and Factors",
    "text": "Segments and Factors\nThe Master Segments shapefile was updated with the following changes:\n\nDay-of-week, season, and month factors were updated using 2015-2019 data from UDOT Continuous Count Stations (CCS). To be consistent with the UDOT AADT process, any year of data without a full week of data from each month was excluded from the factor creation.\nCreated single grouping of CCS for all factors (previously weekday and month/season factors were based on separate groupings).\nChanged average weekday factor (FAC_WDAVG) to represent Tuesday through Thursday (previously Monday through Thursday).\nChanged average and max weekend factors (FAC_WEAVG, FAC_WEMAX) to represent Saturday and Sunday (previously Friday through Sunday)."
  },
  {
    "objectID": "v8x/v832/whats-new/2-inputdata.html#other-changes",
    "href": "v8x/v832/whats-new/2-inputdata.html#other-changes",
    "title": "Input Data",
    "section": "Other Changes",
    "text": "Other Changes\nThe following were additional changes made to the model:\n\nAn additional districting grouping (‘DISTSUPER’ and ‘DSUP_NAME’) was added to the TAZ shapefile using definitions from UDOT’s recent work on the long distance model.\nThe toll zone shapefile was also modified to correct a few instances where the HOT lane links were crossing into the opposing direction HOT zone.\nThe ‘1_Inputs\\0_GlobalData\\UbanizationMap’ folder name was changed to ‘1_Inputs\\0_GlobalData\\ArcMap_mxd. The’_Urbanization_ArcMap103.mxd’ file was saved as ArcMap version 10.3 and the ArcMap version was added to the filename\nThe TDM script ’_CreateOutputFolders.s’ in ‘3_CreateScenarios’ folder was modified to account for the changed folder and file names for the urbanization.mxd."
  },
  {
    "objectID": "v8x/v832/whats-new/3-inputprocessing.html",
    "href": "v8x/v832/whats-new/3-inputprocessing.html",
    "title": "Input Processing",
    "section": "",
    "text": "A couple bugs were corrected in the input processing script:\n\nCorrected inbound/outbound designations for EB/WB links.\nRemoved FT=37-38 as a condition for populating link additional HOV capacity (AdHOVCap1H) values since related HOV fields are populated on GP links not HOV links. Also, corrected capacity lookup to be for FT=37 and not FT of link.\n\n\n\n\nThe walk buffer script was improved with a couple simple modifications to the routes and stops that are included in walk buffer creation: - Removed local bus route buffers along expressways and freeways (anything with FT&gt;=12). Only local bus routes along arterials or collectors are now included in route buffers. - Removed buffers that were calculated from local bus stops, which were redundant with local bus route buffers. - The remaining combined walk buffer areas are shown in green. The ’_WalkBuffer_ArcMap103.mxd’ file was updated to version 10.3 of ArcMap, and the scripts were modified to copy the walk buffer mxd to scenario folders.\n\n\n\nFigure 1: Walk Buffer Modifications."
  },
  {
    "objectID": "v8x/v832/whats-new/3-inputprocessing.html#inboundoutbound-and-hov-capacity",
    "href": "v8x/v832/whats-new/3-inputprocessing.html#inboundoutbound-and-hov-capacity",
    "title": "Input Processing",
    "section": "",
    "text": "A couple bugs were corrected in the input processing script:\n\nCorrected inbound/outbound designations for EB/WB links.\nRemoved FT=37-38 as a condition for populating link additional HOV capacity (AdHOVCap1H) values since related HOV fields are populated on GP links not HOV links. Also, corrected capacity lookup to be for FT=37 and not FT of link."
  },
  {
    "objectID": "v8x/v832/whats-new/3-inputprocessing.html#walk-buffer-modifications",
    "href": "v8x/v832/whats-new/3-inputprocessing.html#walk-buffer-modifications",
    "title": "Input Processing",
    "section": "",
    "text": "The walk buffer script was improved with a couple simple modifications to the routes and stops that are included in walk buffer creation: - Removed local bus route buffers along expressways and freeways (anything with FT&gt;=12). Only local bus routes along arterials or collectors are now included in route buffers. - Removed buffers that were calculated from local bus stops, which were redundant with local bus route buffers. - The remaining combined walk buffer areas are shown in green. The ’_WalkBuffer_ArcMap103.mxd’ file was updated to version 10.3 of ArcMap, and the scripts were modified to copy the walk buffer mxd to scenario folders.\n\n\n\nFigure 1: Walk Buffer Modifications."
  },
  {
    "objectID": "v8x/v832/whats-new/4-hhdisag.html",
    "href": "v8x/v832/whats-new/4-hhdisag.html",
    "title": "Household Disaggregation and Auto Ownership",
    "section": "",
    "text": "Household Disaggregation and Auto Ownership\nSeveral changes were made to clean up and fix minor errors in the household disaggregation and auto ownership scripts:\n\nAdded Box Elder Vehicles to the totals calculated for the ‘VO_Tmp_CountyVehicleTotal.txt’ file in the ‘3_AutoOwnership.s’ file.\nCorrected VO_DebugUtility.csv header row in ‘3_AutoOwnership.s’ to keep it from repeating. Commented out debug csv creation.\nCorrected AVGINCOME in ‘Tmp_Marginal_Income_beforeIPF.dbf’.\nCommented out ‘test.csv’ creation in ‘2_ModelScripts\\1_HHDisag_AutoOwn\\1_LifeCycle.s’.\nCorrected CO_TAZID in ‘LifeCycle_Households_Population.dbf’ in ‘2_ModelScripts\\1_HHDisag_AutoOwn\\1_LifeCycle.s’.\nUpdated ‘Lookup - BYTAZAgePct - AllCo.csv’ and source materials (’_TAZ_AgePct_Lookup_Source - 2020-06-23.xlsb’) in ‘1_Inputs\\0_GlobalData\\1_HHDisag_AutoOwn’. This update reflects the updated source materials structure in the statewide spreadsheet and updated data for Summit/Wasatch counties and UDOT area. The Wasatch Front area data did not change."
  },
  {
    "objectID": "v8x/v832/whats-new/5-tripgen.html",
    "href": "v8x/v832/whats-new/5-tripgen.html",
    "title": "Trip Generation",
    "section": "",
    "text": "Trip Generation\nSeveral changes were made in the trip generation scripts:\n\nAdded factors to reduce special generation attractiveness to Temple Square, SLC Library, and many colleges.\nAdded Large District calibration factors.\nAdjusted short-haul truck light/medium/heavy trip production rates.\nUpdated county-level adjustments to short-haul truck medium/heavy productions and attractions.\nTruck speed factors are now applied to all facility types, previously they applied only to freeway."
  },
  {
    "objectID": "v8x/v832/whats-new/6-distribution.html",
    "href": "v8x/v832/whats-new/6-distribution.html",
    "title": "Distribution",
    "section": "",
    "text": "Distribution\nThe following changes were made in the distribution scripts:\n\nFriction factors, which were previously calibrated to the county level, were recalibrated at the large district level.\nTruck speed factors are now applied to all facility types, where previously they applied only to freeway."
  },
  {
    "objectID": "v8x/v832/whats-new/7-mc.html",
    "href": "v8x/v832/whats-new/7-mc.html",
    "title": "Mode Choice",
    "section": "",
    "text": "Mode Choice\nMode choice was recalibrated to match target values from UTA 2019 On-Board Survey.\nThe following changes were made in the transit .FAC files in PT_Parameter Folder and associated voyager script in mode choice:\n\nDecreased WAITFACTOR to 2.0 (previously 3.0).\nChanged mode-specific weight applied to transit in-vehicle times and non-transit leg times (Relative mode factor to the skimmed specific mode) for express bus to 3.50.\nChanged the following to fine-tune boardings by mode (to increase for LCL, and decrease for other modes).\nAdded initial boarding penalty for local bus of 5 minutes.\nIncreased transit transfer boarding penalty to 12 minutes for all modes but walk to local which was set at 6 minutes (previously 10 minutes for all modes).\n\nAdditional changes were made to mode choice:\n\nCombined Mode Choice scripts 11 and 12 into ‘11_12_MC_HBW_HBO_NHB_HBC.s’ to allow simultaneous running on eight cores.\nBRT Mode 9 constants were calibrated independently of LRT. However, BRT Mode 5 continues to use a multiplier of the LRT constant and was increased to 0.40 from 0.33.\nAdjustments were made to FrontRunner to bring station boardings closer to observed. Davis County boardings were significantly higher than observed, while Utah County boardings were significantly lower. A +15 multiplier of initial in-vehicle time penalty was added to all stations in Davis County, while -15 multiplier of in-vehicle time was added to all stations in Utah County. This brought boardings closer to observed, but there is still significant difference in boardings that should be accounted for when using the model for any station-level forecasts. A comparison of station model and observed volumes is found in the final section of this document comparing v8.3.2 to v8.3.1."
  },
  {
    "objectID": "v8x/v832/whats-new/8-assign.html",
    "href": "v8x/v832/whats-new/8-assign.html",
    "title": "Highway Assignment",
    "section": "",
    "text": "Highway Assignment\nThe fowllowing changes were made in highway assignment scripts:\n\nSegment summary processing script was updated to include truck volumes in detailed output.\nIn harmony with the changes in distribution, truck speed factors are now applied to all facility types, were previously they applied only to freeway.\n\nAccess-to-Opportunity (ATO) scripts were moved to the Assignment folder. The following edits were made to the ATO script:\n\nMade output field names more descriptive.\nChanged output format from dbf to csv.\nAdded Free Flow auto time and straight-line time (based on auto free flow) ATO calculations/output\nUpdated script to get the ATO weights from empirical HBW distance decay curve from Household Travel Survey as a look up table rather than calculate from a step function."
  },
  {
    "objectID": "v8x/v832/whats-new/9-pp.html",
    "href": "v8x/v832/whats-new/9-pp.html",
    "title": "Post Processing",
    "section": "",
    "text": "Post Processing\nThe TDM2MOVES folder was removed."
  },
  {
    "objectID": "v8x/v832/whats-new/references.html",
    "href": "v8x/v832/whats-new/references.html",
    "title": "References",
    "section": "",
    "text": "References"
  },
  {
    "objectID": "v8x/v810/downloads.html",
    "href": "v8x/v810/downloads.html",
    "title": "Downloads",
    "section": "",
    "text": "The downloads for the Version 8.1.0 documentation is shown below by category.\n\nCalibration & Validation Report\n\n v8.1 Calib Valid"
  },
  {
    "objectID": "v8x/v810/index.html",
    "href": "v8x/v810/index.html",
    "title": "Preface",
    "section": "",
    "text": "This is the documentation for the Wasatch Front Travel Demand Model for Version 8.1.0. The documentation includes:\n\nCalibration & Validation Report"
  },
  {
    "objectID": "v8x/v830/downloads.html",
    "href": "v8x/v830/downloads.html",
    "title": "Downloads",
    "section": "",
    "text": "The downloads for the Version 8.3.0 documentation is shown below by category.\n\nInputs Document\n\n v8.3 2019-06-18 Inputs"
  },
  {
    "objectID": "v8x/v830/index.html",
    "href": "v8x/v830/index.html",
    "title": "Preface",
    "section": "",
    "text": "This is the documentation for the Wasatch Front Travel Demand Model for Version 8.3.0. The documentation includes:\n\nInputs Document"
  },
  {
    "objectID": "v8x/v831/downloads.html",
    "href": "v8x/v831/downloads.html",
    "title": "Downloads",
    "section": "",
    "text": "The downloads for the Version 8.3.1 documentation is shown below by category.\n\nWhat’s New Document\n\n v8.3.1 2020-08-17 Whats New \n v8.3.1 2020-05-08 Whats New \n\n\n\nModel Validation Report\n\n v8.3.1 2020-10-23 Calib Valid \n\n\n\nInputs Document\n\n v8.3.1 2020-05-08 Inputs"
  },
  {
    "objectID": "v8x/v831/index.html",
    "href": "v8x/v831/index.html",
    "title": "Preface",
    "section": "",
    "text": "This is the documentation for the Wasatch Front Travel Demand Model for Version 8.3.1. The documentation includes the following reports:\n\nWhat’s New Document\nModel Validation Report\nInputs Document"
  },
  {
    "objectID": "v8x/v831/whats-new/1-20200817-update.html",
    "href": "v8x/v831/whats-new/1-20200817-update.html",
    "title": "Updated Networks – Aug 17, 2020",
    "section": "",
    "text": "Updated Networks – Aug 17, 2020\nThe ‘WF TDM v8.3.1 - 2020-05-08’ model version included most but not all of the highway and transit network changes that were part of MAG’s RTP amendment. Because the networks reflect the “official” MAG amended plan, the travel model was reissued with a new date stamp. However, since there were no changes to the model itself or the other modeling inputs, the version number of the travel model remained the same.\nFigure 1 shows where lanes were added (green) or were taken away (orange) between ‘WF TDM v8.3.1 - 2020-05-08’ and ‘WF TDM v8.3.1 - 2020-08-17’ highway networks. Express bus routes were also removed from the MAG line files in the 2030, 2040 & 2050 Funded & Needed Transit folders .\n\n\n\nFigure 1: Added lanes between v8.3.1 2020-05-08 and v8.3.1 2020-08-17"
  },
  {
    "objectID": "v8x/v831/whats-new/1-inputdata.html",
    "href": "v8x/v831/whats-new/1-inputdata.html",
    "title": "Input Data",
    "section": "",
    "text": "A very minor change was made to the socioeconomic data in Utah County. A few households had been located in the Utah Lake TAZ. These were removed and relocated into nearby TAZ. This change would have very little affect to model results.\n\n\n\nThe highway network was updated in the MAG and WFRC areas to reflect the first round of Regional Transportation Plan (RTP) amendments. Additional edits were made in the MAG area to conform with more recent project clarification. The changes to the input highway network are significant, particularly in Utah County, and would most likely affect the travel model’s output. Projects in and around areas of high change may want to do sensitivity tests to better understand the impact that these input network changes may have had on project-level decisions. Figure 1 shows where lanes were added (green) or were taken away (orange) between versions 8.3 and 8.3.1 highway networks.\n\n\n\nFigure 1: Added lanes between version 8.3 and 8.3.1."
  },
  {
    "objectID": "v8x/v831/whats-new/1-inputdata.html#socioeconomic-data",
    "href": "v8x/v831/whats-new/1-inputdata.html#socioeconomic-data",
    "title": "Input Data",
    "section": "",
    "text": "A very minor change was made to the socioeconomic data in Utah County. A few households had been located in the Utah Lake TAZ. These were removed and relocated into nearby TAZ. This change would have very little affect to model results."
  },
  {
    "objectID": "v8x/v831/whats-new/1-inputdata.html#plan-amendment",
    "href": "v8x/v831/whats-new/1-inputdata.html#plan-amendment",
    "title": "Input Data",
    "section": "",
    "text": "The highway network was updated in the MAG and WFRC areas to reflect the first round of Regional Transportation Plan (RTP) amendments. Additional edits were made in the MAG area to conform with more recent project clarification. The changes to the input highway network are significant, particularly in Utah County, and would most likely affect the travel model’s output. Projects in and around areas of high change may want to do sensitivity tests to better understand the impact that these input network changes may have had on project-level decisions. Figure 1 shows where lanes were added (green) or were taken away (orange) between versions 8.3 and 8.3.1 highway networks.\n\n\n\nFigure 1: Added lanes between version 8.3 and 8.3.1."
  },
  {
    "objectID": "v8x/v831/whats-new/2-cube-update.html",
    "href": "v8x/v831/whats-new/2-cube-update.html",
    "title": "Update For CUBE 6.4.5",
    "section": "",
    "text": "Update For CUBE 6.4.5\nCube 6.4.5 required that all ZDATI input files be placed before any MATI input files. This requirement was not in previous versions of Cube. The scripts were update to comply with this new requirement so the travel model will run on Cube 6.4.5 without crashing. That said, it is possible that future versions of Cube will address this issue.\nIn addition, Cube 6.4.5 was improved to allow for faster assignment processing in. According to Cube’s 6.4.5 release notes:\n\n\n\n\n\n\nNote\n\n\n\n\n\n“New option F2 for PATHLOAD DEC keyword. Improves run time performance in path building.\nNew keyword MUTITHREAD to distribute Adjust phase across multiple processing cores. Includes sub keyword MEMORY, which is a Boolean option to set the temp files in memory or disk, when using MULTITHREAD. Only applies to COMBINE=EQUI.”\n\n\n\nThe command ‘DEC=F2’ was put into the PATHLOAD control statement and ‘MULTITHREAD=@CoresAvailable@, MEMORY=T’ in the assignment ‘block’ files to improve model runtime. These changes, however, resulted in only minor runtime improvements. These improvements were left in the model scripts but were commented out so users of Cube prior to the 6.4.5 release can still use the model. For those wishing to use this enhancement and have Cube 6.4.5, they will need to uncomment these items.\nThe following files were updated as part of the Cube 6.4.5 work:\n\nDistribution\n\n1_Distribution.s\n4pd_mainbody_distribution.block\n3_SumToDistricts_GRAVITY.s\n\nMode Choice\n\n03_Skim_auto.s\n06_HBW_logsums.s\n07_HBW_dest_choice.s\n11_Mc_HBW_HBO.s,12_Mc_NHB_HBC.s\n14_AsnTran.s\n18_SumToDistricts_FinalTripTables.s\n\nFinal Assignment\n\n4pd_mainbody_managedlanes.block\n4pd_mainbody_managedlanes_SelectLink.block"
  },
  {
    "objectID": "v8x/v831/whats-new/3-segsum.html",
    "href": "v8x/v831/whats-new/3-segsum.html",
    "title": "Segment Summary",
    "section": "",
    "text": "Segment Summary\nSeveral changes were made to the model’s inputs and code to allow for segment level processing of the model results.\nIn the ‘1_Inputs\\6_Segment’ folder, an updated master segment shapefile has been provided. This shapefile contains the segment geography used to summarize and report model data. The shapefile also contains historic UDOT observed volumes (AADT), medium and heavy truck factors, day-of-week and average weekday and weekend factors, and monthly and seasonal factors. Each segment in the segment shapefile has a unique SEGID which has been stamped onto appropriate links on the master highway network. Given the complex geometry in certain areas in the highway network, such as those found near freeway system-to-system interchanges, a polygon shapefile located in the ‘Stamping_Polygons’ folder was created to aid in the SEGID transfer from the segment shapefile onto the highway network links. Note in many cases not all model links in a segment currently receive a SEGID; rather, a sufficient number of links have been identified to represent the segment for data averaging.\nThe ‘1_Inputs\\6_Segment’ folder also contains a polygon shapefile located in the ‘SeasFac_Geog’ folder that contains geographic information that can be spatially joined onto the model highway links so that seasonal factors can be calculated for every link. This data is used by the air quality TDM2MOVES script located in the ‘2_ModelScripts\\7_PostProcessing\\1_TDM_2_MOVES\\1_TDM_2_MOVES - v1’ folder.\nA segment post processing script, ‘06_SegmentSummary.s’ located in the ‘2_ModelScripts\\5_AssignHwy’ folder, has been added to the model’s ’_HailMary.s’ batch script. This script summarizes the final assigned highway network data for the segments in the segment shapefile based on the SEGID on the highway network links. The script produces two summary reports, ‘v83_SE15_Net15_Summary_SEGID.dbf’ and ‘v83_SE15_Net15_Summary_SEGID_Detailed.dbf’ found in the output scenario’s ‘5_AssignHwy\\4_Summaries’ folder. The two files are identical except that the ‘Detailed’ report includes data summaries for all functional groups separately in addition to the total for all functional groups. The reports are generated automatically with every model run. The reports provide data summaries for each direction (direction 1=positive or eastbound/northbound direction, direction 2=negative or westbound/southbound direction) and for the total of both directions and include the following information:\n\nIdentifying fields:\n\nSEGID, functional group, SUBAREAID, county FIPS, and area type\n\nFields for each direction & total:\n\nNumber of Links\nOneway Distance\nNumber of Lanes\nFunctional Type Number and corresponding functional group\nAverage 1-hour, 1-lane capacity\nAverage volume by period (AM, MD, PM, EV & DY) and average daily truck volume (LT, MD, HV)\nAverage speed by period (free flow, AM, MD, PM, EV, DY)"
  },
  {
    "objectID": "v8x/v831/whats-new/4-assign.html",
    "href": "v8x/v831/whats-new/4-assign.html",
    "title": "Assignment Output Folder",
    "section": "",
    "text": "Assignment Output Folder\nSubfolders were added to the final assignment folder, ‘5_AssignHwy’, in the scenario output folder to keep assignment output more organized. The new folders are shown in Figure 1.\n\n\n\nFigure 1: New assignment folder structure.\n\n\nThe ‘0_ConvergeReports’ folder contain the highway assignment convergence reports. These reports were previously written to the assignment temp folder. The ‘1_ODTables’ contain the output of the ‘01_Convert_PA_to_OD.s’ script. The binary ‘.NET’, loaded network files are found in ‘2a_Networks’ and their shapefile equivalents are found in ‘2b_Shapefiles’. The network and matrix output from select link analyses are found in ‘3_SelectLink’. Segment summaries from the new segment processing script are found in ‘4_Summaries’. The period skims produced form the final loaded network travel times are found in ‘5_FinalNetSkims’."
  },
  {
    "objectID": "v8x/v831/whats-new/5-ato.html",
    "href": "v8x/v831/whats-new/5-ato.html",
    "title": "Access to Opportunity",
    "section": "",
    "text": "Access to Opportunity\nAccess to opportunities, also referred to as accessibility or ATO, is a way to measure how well people can connect to jobs, or vice versa. ATO metrics quantify how well the current and future transportation system work with land use. Both shorter travel times and an increased presence of employment and other opportunities result in higher accessibility scores.\nA script to calculate ATO metrics, ‘1_Access_to_Opportunity.s’ located in the ‘2_ModelScripts\\7_PostProcessing’ folder, has been added to the model’s ’_HailMary.s’ batch script and runs automatically with every model run. The script sums the number of jobs and households that are within a typical commute travel shed (in minutes) by auto and transit. The typical commute travel shed is defined using a distance decay curve estimated from the 2012 household travel survey. Metrics that combine the jobs and households are also calculated.\nResults from the ATO script are output into ‘7_PostProcessing\\Access_to_Opportunity_@DemographicYear@.dbf’. Results can be joined with the TAZ shapefile to visualize the data, such as Figure 1\n\n\n\nFigure 1: Example report from the WFRC website displaying results at the TAZ level."
  },
  {
    "objectID": "v8x/v831/whats-new/6-misc.html",
    "href": "v8x/v831/whats-new/6-misc.html",
    "title": "Miscellaneous Changes",
    "section": "",
    "text": "Miscellaneous Changes\nA small bug was fixed in the ‘1_TripTable.s’ script in the ‘2_ModelScripts\\0_InputProcessing\\d_TripTable’ folder. The control totals for the Salt Lake International Airport and Lagoon zones were being assigned to the other location’s output. This fix will cause a localized change to the volumes near the airport and Lagoon.\nA small bug fix was made to the ‘1_NetProcessor.s’ script in the ‘2_ModelScripts\\0_InputProcessing\\ c_NetworkProcessing’ folder. When socioeconomic data is loaded on to the TAZ centroids, home-based job employment had supplanted the construction job variable. This fix only affects labeling of socioeconomic data on the highway network in Cube and does not affect any travel model results.\nTIME fields on the network were edited to have four decimal places of precision instead of two (added to improve speed calculations). Subfolder structure was removed for ‘0_DeleteTempFiles.s’ script in ‘2_ModelScripts\\7_PostProcessing’ folder and corresponding edits were made in the ’_HailMary.s’ batch script.\n’_HailMary.s’ was updated to include more detail in the email functions. The ‘Compare2Assignments.s’ script in the ‘2_ModelScripts\\7_PostProcessing\\2_Compare2Nets’ folder was updated to include SEGID, correct field names for free flow speed, and add Area Type comparison. The associated DEFAULT.VPR file was also cleaned up. A script to compare two master networks, ‘Compare_MasterNet.s’, was also added to the ‘2_ModelScripts\\7_PostProcessing\\2_Compare2Nets’ folder."
  },
  {
    "objectID": "v9x/v902/validation/1-tripgen.html",
    "href": "v9x/v902/validation/1-tripgen.html",
    "title": "Trip Generation",
    "section": "",
    "text": "Trip Generation validation was considered for both production ratios and relative shares."
  },
  {
    "objectID": "v9x/v902/validation/1-tripgen.html#ratios",
    "href": "v9x/v902/validation/1-tripgen.html#ratios",
    "title": "Trip Generation",
    "section": "Ratios",
    "text": "Ratios\nValidation for production ratios looked at three sets of measures: productions-to-household ratios (Figure 1), total trips (Figure 2), and trip balance ratios (Figure 3). The sources of the data include the Utah Household Travel Survey from 2012 (2012 HTS), the base year model (BY 2019 Model), and the National Household Travel Survey from 2017 with data from the Mountain Census Division (2017 NHTS - Mountain).\nThe model shows an average 4.01 trips per person which is slightly higher than the 2017 NHTS - Mountain average of 3.54. The model also shows an average 12.4 trips per household which is higher than the 2017 NHTS - Mountain average of 9.1. Utah, including the Wasatch Front, has a significantly higher average household size of 3.09 persons per household when compared to the Mountain Census Division average of 2.58, which accounts for the differences when compared to the 2017 NHTS - Mountain averages.\n\n\n\n\n                                                \nFigure 1: Productions to Households Ratios – Total Trip Ends (II + IX).\n\n\n\n\n\n\n\n                                                \nFigure 2: Total Trip Validation\n\n\n\n\n\n\n\n                                                \nFigure 3: Trip Balance Ratios"
  },
  {
    "objectID": "v9x/v902/validation/1-tripgen.html#relative-shares",
    "href": "v9x/v902/validation/1-tripgen.html#relative-shares",
    "title": "Trip Generation",
    "section": "Relative Shares",
    "text": "Relative Shares\nValidation for production relative shares considered the reasonableness of relative shares as shown in Table 1. The relative share between HBW, HBO and NHB trips looks reasonable with HBW at about 14% of the total and the highest share going to HBO. Commercial vehicles account for about 22% of the total trips generated by the model. This is within the expected range for an urban area like the Wasatch Front. IX and XI trips account for around 2% of the total trip generation. This also appears to be reasonable.\n\n\n\n\n\n\n\n\n\nTable 1: Relative Shares of Trip Productions\n\n\nPurpose\nProduction\nShare\n\n\n\n\nHBW\n1,758,104\n14.1%\n\n\nHBO\n5,317,476\n42.5%\n\n\n     HBShp\n908,733\n7.3%\n\n\n     HBOth\n3,719,191\n29.7%\n\n\n     HBScK6\n365,084\n2.9%\n\n\n     HBsc712\n324,468\n2.6%\n\n\nNHB\n2,405,720\n19.2%\n\n\n     NHBW\n812,855\n6.5%\n\n\n     NHBNW\n1,592,865\n12.7%\n\n\nTotal Person\n9,481,300\n75.8%\n\n\nTotal External\n172,855\n1.4%\n\n\n     IX\n78,057\n0.6%\n\n\n     XI\n94,798\n0.8%\n\n\nTotal Truck\n2,802,234\n22.4%\n\n\n     LT\n1,553,653\n12.4%\n\n\n     MD\n884,558\n7.1%\n\n\n     HV\n364,023\n2.9%\n\n\nTotal IX Truck\n21,750\n0.2%\n\n\n     IX MD\n10,716\n0.1%\n\n\n     IX HV\n11,034\n0.1%\n\n\nTotal XI Truck\n30,741\n0.2%\n\n\n     XI MD\n14,372\n0.1%\n\n\n     XI HV\n16,369\n0.1%\n\n\nTelecommute Share of HBW\n69,175\n0.6%\n\n\nTelecommute Share of NHBW\n19,552\n0.2%\n\n\nTOTAL\n12,508,880\n100.0%"
  },
  {
    "objectID": "v9x/v902/validation/3-modechoice.html",
    "href": "v9x/v902/validation/3-modechoice.html",
    "title": "Mode Choice",
    "section": "",
    "text": "The validation results for the Mode Choice portion of the model are shown in this section. Mode Choice was validated against the Utah Transit Authority 2019 On-Board Survey as well as the 2012 Household Travel Survey. Validation is summarized by the following categories:"
  },
  {
    "objectID": "v9x/v902/validation/3-modechoice.html#transit-trips-and-boardings",
    "href": "v9x/v902/validation/3-modechoice.html#transit-trips-and-boardings",
    "title": "Mode Choice",
    "section": "Transit Trips and Boardings",
    "text": "Transit Trips and Boardings\nThe validation of daily transit trips and boardings is shown through the comparison of model and observed data by mode. The model was validated by the following measures:\n\nTrips by Hierarchical Mode\nBoardings by Hierarchical Mode\nTransfer Ratio by Hierarchical Mode\nBoardings by Surveyed Mode (for comparison only)\n\nThe three hierarchical mode measures are summarized by the highest hierarchy mode in a given trip with local bus being the lowest on the hierarchy and commuter rail being the highest. For example, if a trip uses Local Bus and then transfers to LRT, the trip is stored as a LRT trip. Trips by Hierarchical Mode represent each trip as a single number, regardless of the number of transfer or different modes that were used on a trip.\nBoardings by Hierarchical Mode represent each boarding separately but summarized at the highest hierarchical mode of the trip. For example, for one transfer from Local Bus to LRT there are two boardings, one on each mode, but they are both stored in the highest hierarchal mode of LRT. The Transfer Ratio by Hierarchical Mode is the ratio between boardings and trips for any given mode.\nThe final measure Boardings by Surveyed Mode represents the total boardings on each mode individually. They are not summarize at the highest hierarchical mode of the trip but rather at the mode on which the boarding actually occurred. For example, the Local Bus to LRT trip mentioned previously would be summarized in this measure as one boarding on Local Bus and one boarding one LRT. This measure is for comparison use only, since the structure of the Mode Choice model does not consider this measure during calibration.\nThe total number of boardings are the same between hierarchical mode and surveyed mode, but depending on the make-up of the trips, there totals by mode will vary.\nThe model data for hierarchical mode measures is taken from the shares reports v902_SE19_Net19_RegionShares_Pk.csv and v902_SE19_Net19_RegionShares_Ok.csv. The model data for the surveyed mode comparison is taken from _v902_SE19_Net19_1_PA_Route.dbf.\nThe interactive Figure 1 allows for the visual comparison of model and observed values for each Transit Trips and Boardings category.\n\n\nCode\nhtml`&lt;br/&gt;`\n\n\n\n\n\n\n\n\n\nCode\nviewof bPlotSelect = Inputs.select(new Map([['Trips by Hierarchical Mode', 'Trips by Hierarchical Mode'], ['Boardings by Hierarchical Mode', 'Boardings by Hierarchical Mode'], ['Transfer Ratio by Hierarchical Mode','Transfer Ratio'], ['Boardings by Mode Surveyed','Boardings by Mode Surveyed']]), {value: nameGroup, label: \"Category\"})\nviewof metric = Inputs.radio(new Map([[\"Difference\", \"Difference\"], [\"% Difference\", \"% Difference\"]]), {value: \"Difference\", label: \"View:\"})\n\ndataBLC = transpose(boardChart)\nfiltered_bDataC = dataBLC.filter(function(dataBLC) {\n    return bPlotSelect == dataBLC.Title &&\n           \"Value\" == dataBLC.View;\n})\ndataBTT = transpose(boardTable)\nfiltered_bDataT = dataBTT.filter(function(dataBTT) {\n    return bPlotSelect == dataBTT.Title;\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nhtml`\n&lt;br/&gt;\n&lt;table&gt;\n    &lt;thead&gt;\n    &lt;tr&gt;\n        ${[\"Mode\", \"Model\", \"Observed\", \"Difference\", \"% Difference\"].map((d, i) =&gt; {\n            const widths = ['90px', '60px', '70px', '75px', '90px']; // Define the widths\n            return html`&lt;th style='text-align: ${i === 0 ? \"left\" : \"right\"}; padding: 5px; width: ${widths[i]};'&gt;${d}&lt;/th&gt;`;\n        })}\n    &lt;/tr&gt;\n    &lt;/thead&gt;\n    &lt;tbody&gt;\n        ${filtered_bDataT.map(row =&gt; {\n            const isBold = row['Mode'] === 'Total';\n            return html`&lt;tr style='border-bottom: 1px solid lightgrey;'&gt;\n                ${[\"Mode\", \"Model\", \"Observed\", \"Difference\", \"% Difference\"].map((d, i) =&gt; {\n                    const widths = ['90px', '60px', '70px', '75px', '90px']; // Define the widths\n                    return html`&lt;td style='text-align: ${i === 0 ? \"left\" : \"right\"}; padding: 5px; width: ${widths[i]}; font-weight: ${isBold ? 'bold' : 'normal'};'&gt;${row[d]}&lt;/td&gt;`;\n                })}\n            &lt;/tr&gt;`;\n        })}\n    &lt;/tbody&gt;\n&lt;/table&gt;`\n\n\n\n\n\n\n\n\n\n\nCode\nkey2 = Legend(bChart.scales.color, {title: \"Data Source\"})\n\nbChart = GroupedBarChart(filtered_bDataC, {\n    x: d =&gt; d.Mode,\n    y: d =&gt; d.ViewValue,\n    z: d =&gt; d.DataSource,\n    xDomain: ['Local Bus', 'Core Bus', 'Express Bus', 'BRT', 'LRT', 'CRT'],\n    yLabel: \"Value\",\n    zDomain: ['Model','Observed'],\n    width: 500,\n    height: 225,\n    colors: [\"#376092\", \"#77933c\"]\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nfiltered_bData2 = dataBLC.filter(function(dataBLC) {\n    return bPlotSelect == dataBLC.Title  &&\n           metric == dataBLC.View;\n})\n\n//https://observablehq.com/@d3/diverging-bar-chart\nimport {DivergingBarChart} from \"@d3/diverging-bar-chart\"\n\nhtml`&lt;br/&gt;`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nchart3 = DivergingBarChart(filtered_bData2, {\n    x: d =&gt; d.ViewValue,\n    y: d =&gt; d.Mode,\n    xFormat: metric === \"Difference\" ? \"+,d\" : \"+%\",\n    xLabel: \"Model vs Observed Differences\",\n    height: 200,\n    colors: d3.schemeRdBu[3]\n})\n\n\n\n\n\n\n\n\n\n\n\nCode\ntbEmptyCell = 1\n\n\n\n\n\n\nFigure 1: Transit Trips and Boardings Model vs Observed Comparison\n\n\n\n\n\nCode\nhtml`&lt;br/&gt;`\n\n\n\n\n\n\n\nWhen considering Trips by Hierarchical Mode, the calibration routine of the model results in the total number of transit trips in the model being very close to the observed. For this model the model trips are only 1.4% lower than observed for the total number of trips. By mode the differences are within reasonable ranges for the higher trip modes. For example, LRT is only 0.2% high and CRT is only 8.0% low.\nDue to the very low number of trips for Core Bus and Express Bus, their differences are acceptable. Currently, Core Bus for example has only one route. In future phases of the RTP, additional Core Bus service is planned. While further calibration could have brought the Core Bus validation more in line with observed, over-calibrating the model was not desired.\nBoardings by Hierarchical Mode show a similar pattern. Overall boardings are only 3.9% lower in model compared to observed, and the modes Local Bus, LRT, and CRT all within 5%. Express Bus is the furthest away, but it has a lower number of boardings as compared to the higher boarding modes.\nThe Transfer Ratio by Hierarchical Mode shows the relationship between the trips and the boardings. While the model was only slightly higher in trips, the boardings were low. This results in a lower transfer ratio, which is still acceptable with all values being within about 5%.\nAnd for comparison, Boardings by Mode Surveyed shows acceptable differences. The Core Bus and Express Bus values show much larger differences; but again given their low volumes, these are reasonable differences."
  },
  {
    "objectID": "v9x/v902/validation/3-modechoice.html#mode-share",
    "href": "v9x/v902/validation/3-modechoice.html#mode-share",
    "title": "Mode Choice",
    "section": "Mode Share",
    "text": "Mode Share\nMode Share validation is shown through the comparison by groups of mode, time period, and trip purpose. For model and observed shares, the total percent for each combination of mode group, time period, and trip purpose adds up to 100%.\nMode groups compared include groupings of auto, transit, vehicle occupancy, and transit modes. The highest nest is motorized and non-motorized down to lower nests of individual transit modes and transit access modes. Shares were calculated for the following mode groupings:\n\nMotorized / Non-Motorized\nAuto / Transit\nDrive Alone / Shared Ride\nShared Ride # of Occupants\nTransit Mode\nTransit Access Mode\n\nAdditionally, the shares were compared by the following time period groupings:\n\nDaily\nPeak\nOff-peak\n\nFinally, the shares were further compared for each of the following trip purposes:\n\nAll Purposes\nHome-Based Work\nHome-Based College\nHome-Based Other\nNon-Home Based\n\nIn the model, Home-Based College is the only trip purpose that does not include trips in the off-peak time period. So, any trips with this purpose in the observed data were moved to the peak time period for comparison.\nThe interactive Figure 2 allows for selecting of different combinations to visualize the comparisons. The observed data comes from a combination of the Household Travel Survey and the 2019 Transit On-Board Survey.\n\n\nCode\nhtml`&lt;br/&gt;`\n\n\n\n\n\n\n\n\n\nCode\nviewof plotSelect    = Inputs.select(new Map([[nameModeMnMShare,nameModeMnMShare],\n                                              [nameModeATShare ,nameModeATShare ],\n                                              [nameModeDAShare ,nameModeDAShare ],\n                                              [nameMode23Share ,nameMode23Share ],\n                                              [nameModeTransit ,nameModeTransit ],\n                                              [nameModeAccess  ,nameModeAccess  ]\n                                             ]), {value: nameGroup, label: \"Mode Group:\"})\nviewof periodSelect  = Inputs.select(new Map([['Daily', 'DY'], ['Peak', 'PK'], ['Off-Peak', 'OK']]), {value: namePeriod, label: \"Time Period:\"});\nviewof purposeSelect = Inputs.select(new Map([['All Purposes', 'All'], ['Home-Based Work', 'HBW'], ['Home-Based College', 'HBC'], ['Home-Based Other', 'HBO'], ['Non-Home Based', 'NHB']]), {value: 'TripPurpose', label: \"Trip Purpose:\"});\n\ndataLT = transpose(dataLong)\ndataTT = transpose(dataTable)\n\nfiltered_data = dataLT.filter(function(dataL) {\n    return plotSelect == dataL.Group &&\n           periodSelect == dataL.Period &&\n           purposeSelect == dataL.TripPurpose;\n})\ntable_filtered_data = dataTT.filter(function(dataTT) {\n    return plotSelect == dataTT.Group &&\n           periodSelect == dataTT.Period &&\n           purposeSelect == dataTT.TripPurpose;\n})\n\nimport {GroupedBarChart} from \"@d3/grouped-bar-chart\"\nimport {Legend, Swatches} from \"@d3/color-legend\"\nimport {howto, altplot} from \"@d3/example-components\"\n\nxDomain = {\n    switch(plotSelect) {  // assuming all data points have the same Mode\n        case nameModeMnMShare:\n            return ['Motorized', 'Non-Motorized'];\n            break;\n        case nameModeATShare:\n            return ['Auto', 'Transit'];\n            break;\n        case nameModeDAShare:\n            return ['Drive Alone', 'Shared Ride'];\n            break;\n        case nameMode23Share:\n            return ['Shared Ride 2 Occupants', 'Shared Ride 3+ Occupants'];\n            break;\n        case nameModeTransit:\n            return ['Local Bus', 'Core Bus', 'Express Bus', 'BRT', 'LRT', 'CRT'];\n            break;\n        case nameModeAccess:\n            return ['Walk', 'Drive'];\n            break;\n        default:\n            return [];  // or set some sensible default\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nhtml`\n&lt;br/&gt;\n&lt;table&gt;\n    &lt;thead&gt;\n    &lt;tr&gt;\n        ${[plotSelect, \"Model\", \"Observed\", \"Difference\"].map((d, i) =&gt; \n        html`&lt;th style='text-align: ${i === 0 ? \"left\" : \"right\"}; padding: 5px; ${i === 0 ? \"width: 185px;\" : \"\"}'&gt;${d}&lt;/th&gt;`)}\n    &lt;/tr&gt;\n    &lt;/thead&gt;\n    &lt;tbody&gt;\n    ${table_filtered_data.map(row =&gt; html`\n        &lt;tr style='border-bottom: 1px solid lightgrey;'&gt;\n        ${[\"Mode\", \"Model\", \"Observed\", \"Difference\"].map((d, i) =&gt; \n            html`&lt;td style='text-align: ${i === 0 ? \"left\" : \"right\"}; padding: 5px; ${i === 0 ? \"width: 185px;\" : \"\"}'&gt;${row[d]}&lt;/td&gt;`)}\n        &lt;/tr&gt;`)}\n    &lt;/tbody&gt;\n&lt;/table&gt;`\n\n\n\n\n\n\n\n\n\n\nCode\nkey = Legend(chart.scales.color, {title: \"Data Source\"})\n\nchart = GroupedBarChart(filtered_data, {\n    x: d =&gt; d.Mode,\n    y: d =&gt; d.Percent,\n    z: d =&gt; d.DataSource,\n    xDomain: xDomain,\n    yLabel: \"Percent\",\n    yDomain: [0,1],\n    zDomain: ['Model','Observed'],\n    width: 400,\n    height: 250,\n    colors: [\"#376092\", \"#77933c\"]\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nbEmtptyCell=1\n\n\n\n\n\n\nFigure 2: Model vs Observed Mode Shares by Mode Group, Time Period, and Trip Purpose\n\n\n\n\n\nCode\nhtml`&lt;br/&gt;&lt;br/&gt;`\n\n\n\n\n\n\n\nThe Motorized / Non-motorized grouping of model shares are within 0.2% of the observed data for the daily time period and all trip purposes with non-motorized shares being slightly higher than observed and motorized shares being slightly lower. The model shares for additional combinations of time period and purpose are all within 0.5%.\nThe Transit Mode group of model shares are also close to observed with all modes for all time periods and trip purposes. At the Daily time period for all purposes, Local Bus has slightly higher share at 1.5% compared to observed than other modes, such as CRT that is 0.3% lower than observed and LRT that is 0.2% lower than observed. Nearly all the model shares for Transit Mode combinations of time period and are within 5% of observed. The one exception is Home-Based Other which in the peak period for Local Bus is 5.5% higher than observed. Transit Access Mode model shares are all within 5% of observed shares."
  },
  {
    "objectID": "v9x/v902/validation/4-assignhwy.html",
    "href": "v9x/v902/validation/4-assignhwy.html",
    "title": "Highway Assignment",
    "section": "",
    "text": "Validation of final highway assignment was done comparing model outputs from the final loaded networks with observed data. The comparisons were done with volumes and speeds."
  },
  {
    "objectID": "v9x/v902/validation/4-assignhwy.html#volumes",
    "href": "v9x/v902/validation/4-assignhwy.html#volumes",
    "title": "Highway Assignment",
    "section": "Volumes",
    "text": "Volumes\nThe validation results for the Highway Assignment portion of the model are shown in this section. The observed data for 2019 volumes is taken from the Utah Department of Transportation (UDOT) Average Annual Daily Traffic (AADT) History and associated with their respective model segments. The traffic model data is taken from segment summary report for the 2019 base year model: v902_SE19_Net19_Summary_SEGID.csv. The results are divided into three sections:\n\nSummary Comparison\nDetailed Comparison\nMap Comparison\n\n\n\nCode\nimport {GroupedBarChart} from \"@d3/grouped-bar-chart\"\nimport {Legend, Swatches} from \"@d3/color-legend\"\nimport {howto, altplot} from \"@d3/example-components\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSummary Comparison\nThe summary comparison shows region and county-wide differences between model and observed for Average Daily Volume and Vehicle-Miles Traveled (VMT) by vehicle type. The values for Box Elder and Weber counties are only the portions within the MPO planning area. Validation was checked comparing the average daily volume at the region and county levels. Figure 1, below, contains an interactive view of model vs observed differences by roadway class and vehicle type.\n\n\nCode\nhtml`&lt;br/&gt;`\n\n\n\n\n\n\n\n\n\nCode\nviewof bSummaryFuncClass = Inputs.select(new Map([['All Roadways','All Roadways'], ['Freeway','Freeway'], ['Principal','Principal'], ['Minor', 'Minor'], ['Collector', 'Collector']]), {value: 'All Roadways', label: \"Roadway Class:\"})\nviewof bSummaryVehType = Inputs.select(new Map([['All Vehicles','All Vehicles'], ['Passenger Cars', 'Passenger Cars'], ['Medium Trucks','Medium Trucks'], ['Heavy Trucks','Heavy Trucks']]), {value: 'All Vehicles', label: \"Vehicle Type:\"})\nviewof bSummaryDiffType = Inputs.select(new Map([['Percent Difference','DiffPct'], ['Difference','Diff']]), {value: 'DiffPct', label: \"Display:\"})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nvolDiffLongT = transpose(volDiffLong)\nvmtDiffLongT = transpose(vmtDiffLong)\n\nvolDiffLongT_filtered = volDiffLongT.filter(function(dataL) {\n    return bSummaryFuncClass == dataL.funcClass &&\n           bSummaryVehType == dataL.vehType &&\n           (('vol' + bSummaryDiffType) == dataL.View);\n})\nvmtDiffLongT_filtered = vmtDiffLongT.filter(function(dataL) {\n    return bSummaryFuncClass == dataL.funcClass &&\n           bSummaryVehType == dataL.vehType &&\n           (('vmt' + bSummaryDiffType) == dataL.View);\n})\n\nvvp = transpose(vvpct)\nvvpL = transpose(vvpctLong)\nvvaL = transpose(vvabsLong)\nvvaLR = transpose(vvabsLongR)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nimport {DivergingBarChart} from \"@d3/diverging-bar-chart\"\n\nfunction getXDomainVol(bSummaryDiffType) {\n    if (bSummaryDiffType === \"Diff\") {\n        return [max_abs_value_volDiff * -1, max_abs_value_volDiff];\n    } else {\n        //return [max_abs_value_volDiffPct * -1, max_abs_value_volDiff]; // -100% to 100%\n        return [-100, 100]\n    }\n}\n\nfunction getXDomainVmt(bSummaryDiffType) {\n    if (bSummaryDiffType === \"Diff\") {\n        return [max_abs_value_vmtDiff * -1, max_abs_value_vmtDiff];\n    } else {\n        //return [max_abs_value_vmtDiffPct * -1, max_abs_value_vmtDiff]; // -100% to 100%\n        return [-1,1]\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nhtml`&lt;br/&gt;&lt;h4&gt;Average Daily Volume&lt;/h4&gt;`\n\n\n\n\n\n\n\n\n\nCode\nchartVolDiff = DivergingBarChart(volDiffLongT_filtered, {\n    x: d =&gt; d.ViewValue,\n    y: d =&gt; d.coFips,\n    xFormat: bSummaryDiffType === \"Diff\" ? \"+,d\" : \"+.1%\",\n    xLabel: \"Model vs Observed Differences\",\n    width: 440,\n    xDomain: bSummaryDiffType === \"Diff\" ? [max_abs_value_volDiff * -1, max_abs_value_volDiff] : [-1, 1], //[max_abs_value_volDiffPct * -1, max_abs_value_volDiffPct],\n    yDomain:  ['Region','Box Elder County - WFRC','Weber County - WFRC','Davis County','Salt Lake County','Utah County'],\n    colors: d3.schemeRdBu[3]\n})\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nhtml`&lt;br/&gt;&lt;h4&gt;Vehicle-Miles Traveled&lt;/h4&gt;`\n\n\n\n\n\n\n\n\n\nCode\nchartVmtDiff = DivergingBarChart(vmtDiffLongT_filtered, {\n    x: d =&gt; d.ViewValue,\n    y: d =&gt; d.coFips,\n    xFormat: bSummaryDiffType === \"Diff\" ? \"+,d\" : \"+.1%\",\n    xLabel: \"Model vs Observed Differences\",\n    width: 440,\n    xDomain: bSummaryDiffType === \"Diff\" ? [max_abs_value_vmtDiff * -1, max_abs_value_vmtDiff] : [-1, 1], //[max_abs_value_vmtDiffPct * -1, max_abs_value_vmtDiffPct],\n    yDomain:  ['Region','Box Elder County - WFRC','Weber County - WFRC','Davis County','Salt Lake County','Utah County'],\n    colors: d3.schemeRdBu[3]\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ntbEmptyCell1 = 1\n\n\n\n\n\n\nFigure 1: Highway Assignment Summary Comparison\n\n\n\nAt the region level model volume is 0.4% lower than observed volume. The four more urban counties (Weber, Davis, Salt Lake, and Davis) were all within 5% of observed volumes with Salt Lake County being the closest. Weber and Davis were slightly lower and Utah County was slightly higher. Box Elder County is more rural than the other counties. Box Elder model volumes are about 10% lower than observed. Time did not allow for further calibration of the volumes in Box Elder area to account for the larger differences.\nOne important observation at the Collector and All Vehicles level is that Utah County shows a much higher difference than the other counties. Upon further investigation of observed Collector volumes in Utah County, many roadway segments had very low volumes compared to what was expected. Utah County is one of the highest growth areas in the region. For this reason, we expect that the observed count data may be underrepresenting actual volumes. We also anticipate observed volumes in Utah County to improve in the near-term. Within the last several years, a large investment in continuous count station in Utah County has been made. The new counters will add additional information to generate observed volumes for all roadway segments.\nThe largest differences in model vs observed volumes occur in the Medium Truck and Heavy Truck vehicle types. A good amount of time was spent attempting to bring model truck volumes closer to observed. However, due to the limited data sources for truck information, further need to investigate observed truck volumes, and a desire to not over-calibrate the model, further calibration was stopped. Truck modeling remains a future priority for model improvement.\n\n\nDetailed Comparison\nThe model vs observed details in this section are presented by volume and Vehicle-Miles Traveled (VMT) through the comparison of model and observed data facility type by region and also by county. Figure 2 allows for the interactive visual comparison of model and observed values for the region and each county for all vehicles, cars, medium trucks, and heavy trucks. The comparisons are shown in four different types of charts and tables:\n\nAverage Daily Volume by Roadway Class (2a): The daily volume is averaged across all segments within their respective geography and vehicle type.\nTotal VMT by Roadway Class (2b): For each segment*, the daily volume is multiplied by segment distance and then summed across all segments within their respective geography and vehicle type.\nModel vs Count Segment Volume (2c): This is a scatter plot of segment daily volume with the x-axis as the observed volume and the y-axis as the model volume. The red line shows the location of where model and observed volumes are equal. The dashed blue line shows a least-squares linear regression. The further the blue line moved away from the red line, the further the model is from observed.\nSegment Percent Error (2d): This is a scatter plot showing the amount of error (percent difference) between the observed volume and the model volume. The observed volume is the x-axis and the percent error is the y-axis. The red lines are a bounding box that shows the control target. As volume increases, it is expected that the percent error should decrease.\n\n\n\nCode\nhtml`&lt;br/&gt;`\n\n\n\n\n\n\n\n\n\nCode\nviewof bCountySelect = Inputs.select(new Map([['Region', 'Region'], ['Box Elder County - WFRC',3], ['Weber County - WFRC',57], ['Davis County',11], ['Salt Lake County',35], ['Utah County',49]]), {value: 'All', label: \"Geography:\"})\nviewof bVehType = Inputs.select(new Map([['All Vehicles','All Vehicles'], ['Passenger Cars', 'Passenger Cars'], ['Medium Trucks','Medium Trucks'], ['Heavy Trucks','Heavy Trucks']]), {value: 'All Vehicles', label: \"Vehicle Type:\"})\n\nsortOrder = ['Freeway', 'Principal', 'Minor', 'Collector', 'All Roadways'];\n\nvolT = transpose(vol)\nvmtT = transpose(vmt)\nfiltered_volData = volT.filter(function(dataL) {\n    return bCountySelect == dataL.coFips &&\n           bVehType == dataL.vehType;\n}).sort((a, b) =&gt; sortOrder.indexOf(a.funcClass) - sortOrder.indexOf(b.funcClass));\nfiltered_vmtData = vmtT.filter(function(dataL){\n    return bCountySelect == dataL.coFips &&\n           bVehType == dataL.vehType;\n}).sort((a, b) =&gt; sortOrder.indexOf(a.funcClass) - sortOrder.indexOf(b.funcClass));\n\nvolTL = transpose(volLong)\nvmtTL = transpose(vmtLong)\nfiltered_volDataL = volTL.filter(function(dataL) {\n    return bCountySelect == dataL.coFips &&\n           bVehType == dataL.vehType;\n}).sort((a, b) =&gt; sortOrder.indexOf(a.funcClass) - sortOrder.indexOf(b.funcClass));\nfiltered_vmtDataL = vmtTL.filter(function(dataL){\n    return bCountySelect == dataL.coFips &&\n           bVehType == dataL.vehType;\n}).sort((a, b) =&gt; sortOrder.indexOf(a.funcClass) - sortOrder.indexOf(b.funcClass));\n\n\nallvehplotT = transpose(allvehplot)\nfiltered_allvehplotData = allvehplotT.filter(function(dataL) {\n    return bCountySelect == dataL.coFips &&\n           bVehType == dataL.vehType;\n});\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nfunction formatNumber(value, isPercentage=false) {\n    if (typeof value === 'undefined') {\n        return '';  // or return a default value or message\n    }\n    \n    if (isPercentage) {\n        return (Number(value) * 100).toFixed(1) + '%';\n    }\n    return Number(value.toFixed(0)).toLocaleString();\n}\n\nwidthsVol = ['100px', '52px', '70px', '70px', '73px', '73px', '63px', '63px']; // Define the widths\nwidthsVmt = ['100px', '88px', '88px', '88px', '88px'];\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nhtml`\n&lt;h4&gt;2a. Average Daily Volume by Roadway Class&lt;/h4&gt;\n&lt;table&gt;\n    &lt;thead&gt;\n    &lt;tr&gt;\n        ${[\"Roadway Class\", \"# Segs\", \"Volume\", \"Observed\", \"Difference\", \"Percent Difference\", \"RMSE\", \"Percent RMSE\"].map((d, i) =&gt; {\n            return html`&lt;th style='text-align: ${i === 0 ? \"left\" : \"right\"}; padding: 5px; width: ${widthsVol[i]};'&gt;${d}&lt;/th&gt;`;\n        })}\n    &lt;/tr&gt;\n    &lt;/thead&gt;\n    &lt;tbody&gt;\n        ${filtered_volData.map(row =&gt; {\n            const isBold = row['funcClass'] === 'All Roadways';\n            return html`&lt;tr style='border-bottom: 1px solid lightgrey;'&gt;\n                ${[\"funcClass\", \"numSegs\", \"volMod\", \"volObs\", \"volDiff\", \"volDiffPct\", \"volRmse\", \"volRmsePct\"].map((d, i) =&gt; {\n                    // Check if the current cell is one of the numeric columns that need formatting\n                    let formattedValue;\n                    if (i === 5 || i === 7) {\n                        formattedValue = formatNumber(row[d], true);  // True for percentage formatting\n                    } else if ((i &gt;= 1 && i &lt;= 4) || i==6) {\n                        formattedValue = formatNumber(row[d]);\n                    } else {\n                        formattedValue = row[d];\n                    }\n                    return html`&lt;td style='text-align: ${i === 0 ? \"left\" : \"right\"}; padding: 5px; font-weight: ${isBold ? 'bold' : 'normal'};'&gt;${formattedValue}&lt;/td&gt;`;\n                })}\n            &lt;/tr&gt;`;\n        })}\n    &lt;/tbody&gt;\n&lt;/table&gt;`\n\n\n\n\n\n\n\n\n\n\nCode\nhtml`&lt;h4&gt;&nbsp;&lt;/h4&gt;`\n\n\n\n\n\n\n\n\n\nCode\nkeyVol = Legend(bChartVol.scales.color, {title: \"Data Source\"})\n\nbChartVol = GroupedBarChart(filtered_volDataL, {\n    x: d =&gt; d.funcClass,\n    y: d =&gt; d.ViewValue,\n    z: d =&gt; d.DataSource,\n    xDomain: ['Freeway','Principal','Minor','Collector','All Roadways'],\n    yLabel: \"Volume (thousands)\",\n    zDomain: ['Model','Observed'],\n    width: 320,\n    height: 175,\n    colors: [\"#376092\", \"#77933c\"]\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nhtml`\n&lt;h4&gt;2b. Total Daily VMT by Roadway Class&lt;/h4&gt;\n&lt;table&gt;\n    &lt;thead&gt;\n    &lt;tr&gt;\n        ${[\"Roadway Class\", \"Model\", \"Observed\", \"Difference\", \"Percent Difference\"].map((d, i) =&gt; {\n            return html`&lt;th style='text-align: ${i === 0 ? \"left\" : \"right\"}; padding: 5px; width: ${widthsVmt[i]};'&gt;${d}&lt;/th&gt;`;\n        })}\n    &lt;/tr&gt;\n    &lt;/thead&gt;\n    &lt;tbody&gt;\n        ${filtered_vmtData.map(row =&gt; {\n            const isBold = row['funcClass'] === 'All Roadways';\n            return html`&lt;tr style='border-bottom: 1px solid lightgrey;'&gt;\n                ${[\"funcClass\", \"vmtMod\", \"vmtObs\", \"vmtDiff\", \"vmtDiffPct\"].map((d, i) =&gt; {\n                    // Check if the current cell is one of the numeric columns that need formatting\n                    let formattedValue;\n                    if (i === 4 || i === 6) {\n                        formattedValue = formatNumber(row[d], true);  // True for percentage formatting\n                    } else if ((i &gt;= 1 && i &lt;= 3) || i==5) {\n                        formattedValue = formatNumber(row[d]);\n                    } else {\n                        formattedValue = row[d];\n                    }\n                    return html`&lt;td style='text-align: ${i === 0 ? \"left\" : \"right\"}; padding: 5px; font-weight: ${isBold ? 'bold' : 'normal'};'&gt;${formattedValue}&lt;/td&gt;`;\n                })}\n            &lt;/tr&gt;`;\n        })}\n    &lt;/tbody&gt;\n&lt;/table&gt;`\n\n\n\n\n\n\n\n\n\n\nCode\nhtml`&lt;h4&gt;&nbsp;&lt;/h4&gt;`\n\n\n\n\n\n\n\n\n\nCode\nkeyVmt = Legend(bChartVmt.scales.color, {title: \"Data Source\"})\n\nbChartVmt = GroupedBarChart(filtered_vmtDataL, {\n    x: d =&gt; d.funcClass,\n    y: d =&gt; d.ViewValue,\n    z: d =&gt; d.DataSource,\n    xDomain: ['Freeway','Principal','Minor','Collector','All Roadways'],\n    yLabel: \"VMT (millions)\",\n    zDomain: ['Model','Observed'],\n    width: 320,\n    height: 175,\n    colors: [\"#376092\", \"#77933c\"]\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nimport {max} from 'd3-array';\n\n\n\n\n\n\n\n\n\nCode\nmaxVal = {\n  return Math.max(\n    d3.max(filtered_allvehplotData, d =&gt; d.volObs),\n    d3.max(filtered_allvehplotData, d =&gt; d.volMod)\n  );\n}\n\n\n\n\n\n\n\n\n\nCode\nhtml`&lt;h4&gt;2c. Model vs Observed Volumes&lt;/h4&gt;`\n\n\n\n\n\n\n\n\n\nCode\nPlot.plot({\n  grid: true,\n  width: 460,\n  height: 300,\n  marginRight: 40,\n  x: {\n    label: \"Observed Volume (thousands)\",\n    domain: [0, maxVal]\n  },\n  y: {\n    label: \"Model Volume (thousands)\",\n    domain: [0, maxVal]\n  },\n  marks: [\n    Plot.dot(filtered_allvehplotData, {\n      x: \"volObs\",\n      y: \"volMod\",\n      r: 1,\n      fill: \"rgb(80, 116, 230)\",\n      fillOpacity: 0.5,\n      stroke: \"none\"\n    }),\n    Plot.link([0.6, 0.7, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4], {\n      x1: 0,\n      y1: 0,\n      x2: maxVal,\n      y2: (k) =&gt; maxVal * k,\n      strokeOpacity: (k) =&gt; k === 1 ? 1 : 0.2,\n      stroke: \"red\",\n      strokeWidth: (k) =&gt; k === 1 ? 2 : 1.5\n    }),\n    Plot.text([0.6, 0.7, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4], {\n      x: maxVal,\n      y: (k) =&gt; maxVal * k,\n      text: ((f) =&gt; (k) =&gt; k === 1 ? \"Equal\" : f(k - 1))(d3.format(\"+.0%\")),\n      textAnchor: \"start\",\n      dx: 6\n    }),\n    Plot.linearRegressionY(filtered_allvehplotData, {\n        x: \"volObs\",\n        y: \"volMod\",\n        stroke: \"rgb(80, 116, 230)\",\n        strokeDasharray: \"4 4\",  // This creates a dashed line pattern,\n        strokeWidth: 2 \n    })\n  ]\n})\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nhtml`&lt;h4&gt;2d. Segment Percent Error&lt;/h4&gt;`\n\n\n\n\n\n\n\n\n\nCode\nPlot.plot({\n  grid: true,\n  width: 460,\n  height: 300,\n  marginRight: 40,\n  x: {\n    label: \"Observed Volume (thousands)\",\n    domain: [0, maxVal]\n  },\n  y: {\n    label: \"Percent Error\",\n    domain: [-2, 2],\n    tickFormat: d3.format(\".0%\")\n  },\n  marks: [\n    Plot.dot(filtered_allvehplotData, {\n      x: \"volObs\",\n      y: \"volErrorPct\",\n      r: 1,\n      fill: \"rgb(80, 116, 230)\",\n      fillOpacity: 0.5,\n      stroke: \"none\"\n    }),\n    Plot.ruleY([2], {\n      x1: 0,\n      x2: 1,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleX([1], {\n      y1: 1,\n      y2: 2,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleY([1], {\n      x1: 1,\n      x2: 2.5,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleX([2.5], {\n      y1: 0.5,\n      y2: 1.0,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleY([0.5], {\n      x1: 2.5,\n      x2: 5,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleX([5], {\n      y1: 0.25,\n      y2: 0.50,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleY([0.25], {\n      x1: 5,\n      x2: 10,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleX([10], {\n      y1: 0.20,\n      y2: 0.25,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleY([0.20], {\n      x1: 10,\n      x2: 25,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleX([25], {\n      y1: 0.15,\n      y2: 0.20,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleY([0.15], {\n      x1: 25,\n      x2: 50,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleX([50], {\n      y1: 0.10,\n      y2: 0.15,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleY([0.10], {\n      x1: 50,\n      x2: 300,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleY([-2], {\n      x1: 0,\n      x2: 1,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleX([1], {\n      y1: -1,\n      y2: -2,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleY([-1], {\n      x1: 1,\n      x2: 2.5,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleX([2.5], {\n      y1: -0.5,\n      y2: -1.0,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleY([-0.5], {\n      x1: 2.5,\n      x2: 5,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleX([5], {\n      y1: -0.25,\n      y2: -0.50,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleY([-0.25], {\n      x1: 5,\n      x2: 10,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleX([10], {\n      y1: -0.20,\n      y2: -0.25,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleY([-0.20], {\n      x1: 10,\n      x2: 25,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleX([25], {\n      y1: -0.15,\n      y2: -0.20,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleY([-0.15], {\n      x1: 25,\n      x2: 50,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleX([50], {\n      y1: -0.10,\n      y2: -0.15,\n      stroke: \"red\",\n      strokeWidth: 2\n    }),\n    Plot.ruleY([-0.10], {\n      x1: 50,\n      x2: 300,\n      stroke: \"red\",\n      strokeWidth: 2\n    })\n  ]\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ntbEmptyCell2 = 1\n\n\n\n\n\n\nFigure 2: Detailed Model vs Observed Comparison of Highway Assignment\n\n\n\n\n\nMap Comparison\nThe maps in Figure 3 shows a comparison of segment level model vs observed volumes by vehicle types. Blue represents model lower than observed and red represent model volume higher than observed.\n\n\n\nFigure 3: Segment-Level Model vs Observed Volume Comparison by Vehicle Type\n\n\nLooking at the All Vehicles map, the model volumes are lower than observed for by more than 15,000 vehicles per day for the east side of I-215 and for I-15 through northern Utah County. Model volumes are higher than observed volumes by more than than 15,000 vehicles for I-15 in southern Salt lake County and for I-15 in Utah County between Springville and Spanish Fork. When looking at these areas by vehicle type, the drop in Cars and Light Trucks are actual greater since the Medium Trucks and Heavy Trucks in these areas are greater in the model vs observed. Outside of these areas, the volume differences between model and observed are relatively minor.\nThe lower arterial model vs observed volumes of Heavy Trucks on 9000 South in Salt Lake County was further investigated. The Heavy Truck observed volume for this roadway seemed much higher than expected for this roadway. The lower volumes are likely due to the observed data and not anything in the model."
  },
  {
    "objectID": "v9x/v902/validation/4-assignhwy.html#speeds",
    "href": "v9x/v902/validation/4-assignhwy.html#speeds",
    "title": "Highway Assignment",
    "section": "Speeds",
    "text": "Speeds\nComparisons were made between model and observed for a sample of OD pairs. Observed speeds come from sampled data at various time periods in 2019 for the WFRC area using the Google API for reported travel times between coordinates for an origin and destination. Model speeds come from the final network skims that report travel times between all TAZs in the model for each period of the day. The two data sets were joined using a coordinate to TAZ spatial join to locate Google end points to match their respective TAZ.\n\n\n\n\n\n\n\nCode\nhtml`&lt;br/&gt;`\n\n\n\n\n\n\n\n\n\nCode\nviewof vPeriod = Inputs.select(new Map([['AM','AM'], ['Midday','MD'], ['PM','PM'], ['Evening', 'EV']]), {value: 'AM', label: \"Period:\"})\n\nspeedT = transpose(speed)\n\nspeedT_filtered = speedT.filter(function(dataSpd) {\n    return vPeriod == dataSpd.Period;\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nhtml`&lt;h4&gt;Model vs Observed Speeds&lt;/h4&gt;`\n\n\n\n\n\n\n\n\n\nCode\nPlot.plot({\n  grid: true,\n  width: 460,\n  height: 300,\n  marginRight: 40,\n  x: {\n    label: \"Observed Speed (mph)\",\n    domain: [0, 70]\n  },\n  y: {\n    label: \"Model Speed (mph)\",\n    domain: [0, 70]\n  },\n  marks: [\n    Plot.dot(speedT_filtered, {\n      x: \"spdObs\",\n      y: \"spdMod\",\n      r: 1,\n      fill: \"rgb(80, 116, 230)\",\n      fillOpacity: 0.5,\n      stroke: \"none\"\n    }),\n    Plot.linearRegressionY(speedT_filtered, {\n        x: \"spdObs\",\n        y: \"spdMod\",\n        stroke: \"rgb(80, 116, 230)\",\n        strokeDasharray: \"4 4\",  // This creates a dashed line pattern,\n        strokeWidth: 2 \n    })\n  ]\n})\n\n\n\n\n\n\n\n\n\n:::"
  },
  {
    "objectID": "v9x/v902/validation/1-hhdisag-autoown.html",
    "href": "v9x/v902/validation/1-hhdisag-autoown.html",
    "title": "Household Disaggregation and Auto Ownership",
    "section": "",
    "text": "The validation of the Life Cycle model includes the comparison of model output to observed data for the following categories:\n\nPopulation by Age Group and County\nPopulation by Life Cycle\nHouseholds by Life Cycle\n\nFor Population by Age Group and County model results are compared to observed data as represented by the Kem C. Gardner Policy Institute (GPI) control totals. Population by Life Cycle and Households by Life Cycle are compared to the Utah Household Travel Survey.\nLife Cycle comparisons are summarized by the following three life cycle categories:\n\nLife Cycle 1 – households with no children and no seniors\nLife Cycle 2 – households with children and no seniors\nLife Cycle 3 – households with seniors (may have children)\n\n\n\nC:\\Users\\cday\\AppData\\Local\\Temp\\ipykernel_8824\\1985579743.py:4: FutureWarning:\n\nThe default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function."
  },
  {
    "objectID": "v9x/v902/validation/1-hhdisag-autoown.html#life-cycle",
    "href": "v9x/v902/validation/1-hhdisag-autoown.html#life-cycle",
    "title": "Household Disaggregation and Auto Ownership",
    "section": "",
    "text": "The validation of the Life Cycle model includes the comparison of model output to observed data for the following categories:\n\nPopulation by Age Group and County\nPopulation by Life Cycle\nHouseholds by Life Cycle\n\nFor Population by Age Group and County model results are compared to observed data as represented by the Kem C. Gardner Policy Institute (GPI) control totals. Population by Life Cycle and Households by Life Cycle are compared to the Utah Household Travel Survey.\nLife Cycle comparisons are summarized by the following three life cycle categories:\n\nLife Cycle 1 – households with no children and no seniors\nLife Cycle 2 – households with children and no seniors\nLife Cycle 3 – households with seniors (may have children)\n\n\n\nC:\\Users\\cday\\AppData\\Local\\Temp\\ipykernel_8824\\1985579743.py:4: FutureWarning:\n\nThe default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function."
  },
  {
    "objectID": "v9x/v902/validation/1-hhdisag-autoown.html#population-by-age-group-and-county",
    "href": "v9x/v902/validation/1-hhdisag-autoown.html#population-by-age-group-and-county",
    "title": "Household Disaggregation and Auto Ownership",
    "section": "Population by Age Group and County",
    "text": "Population by Age Group and County\nThe 2020 model base year population by county and Age Group was compared to the 2020 GPI county-level population by Age Group, shown in the following charts. The model’s estimate of the population in each Age Group mirrors the GPI county-level projections.\n\n\nC:\\Users\\cday\\AppData\\Local\\Temp\\ipykernel_8824\\2253400036.py:1: FutureWarning:\n\nThe default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.\n\n\n\n\n\n\n\n                                                \nFigure 1: 2020 Model vs. 2020 GPI – % Population by Age Group and County."
  },
  {
    "objectID": "v9x/v902/validation/1-hhdisag-autoown.html#population-by-life-cycle",
    "href": "v9x/v902/validation/1-hhdisag-autoown.html#population-by-life-cycle",
    "title": "Household Disaggregation and Auto Ownership",
    "section": "Population by Life Cycle",
    "text": "Population by Life Cycle\nThe shares of the modeled 2019 base year population by Life Cycle were compared to the 2012 Household Survey at the county level. The model’s estimate of population by Life Cycle category seemed reasonable at this level of geography with all modeled comparison points falling within 4% of the observed data.\n\n\n\n\n                                                \nFigure 2: 2019 Model vs. 2012 Household Survey – % Population by Life Cycle and County."
  },
  {
    "objectID": "v9x/v902/validation/1-hhdisag-autoown.html#households-by-life-cycle",
    "href": "v9x/v902/validation/1-hhdisag-autoown.html#households-by-life-cycle",
    "title": "Household Disaggregation and Auto Ownership",
    "section": "Households by Life Cycle",
    "text": "Households by Life Cycle\nThe shares of the modeled 2019 base year households by Life Cycle were compared to the 2012 Household Survey at the county level. The model’s estimate of households by Life Cycle category seemed reasonable at this level of geography with all modeled comparison points falling within 1.5% of the observed data.\n\n\n\n\n                                                \nFigure 3: 2019 Model vs. 2012 Household Survey – % Households by Life Cycle and County."
  },
  {
    "objectID": "v9x/v902/validation/1-hhdisag-autoown.html#household-disaggregation",
    "href": "v9x/v902/validation/1-hhdisag-autoown.html#household-disaggregation",
    "title": "Household Disaggregation and Auto Ownership",
    "section": "Household Disaggregation",
    "text": "Household Disaggregation\nThe Household Disaggregation was validated to the following measures:\n\nHousehold Size\nIncome\nNumber of Workers\n\n\nHousehold Size\nThe shares of the modeled 2015 base year households by Household Size category were validated to 2010 Census and 2016 ACS data at the county level. The model’s estimate of households by each of the six Household Size category matches within about 2% of the observed data for all counties.\n???Update to use 2019 Model???&gt;&gt;\n\n\n\n\n                                                \nFigure 4: 2015 Model vs. 2010 Census & 2016 ACS – % Households by Household Size\n\n\n\n\n\nIncome\n???UPDATE – maybe from validation in this location: A:\\1 - TDM\\2 - Estimate Param\\1 - HHDisag_AutoOwn???\n\nIncome Gruops (Income Levels) in 2016 dollars:\n\n1: $0 to 35,000 (Low)\n2: $35,000 to 60,000 (High)\n3: $60,000 to 100,000 (High)\n4: $100,000 and above (High)\n\n\n\n\nWorker\n\nWorker Groups: 0, 1, 2, 3+ workers per household\n\n???UPDATE – maybe from validation in this location: A:\\1 - TDM\\2 - Estimate Param\\1 - HHDisag_AutoOwn???"
  },
  {
    "objectID": "v9x/v902/validation/1-hhdisag-autoown.html#auto-ownership",
    "href": "v9x/v902/validation/1-hhdisag-autoown.html#auto-ownership",
    "title": "Household Disaggregation and Auto Ownership",
    "section": "Auto Ownership",
    "text": "Auto Ownership\n???Which validation charts should I add???"
  },
  {
    "objectID": "v9x/v902/validation/2-distribute.html",
    "href": "v9x/v902/validation/2-distribute.html",
    "title": "Trip Distribution",
    "section": "",
    "text": "Modeled average trip lengths for the base year were compared to the 2012 Household Travel Survey. The model was validated for for distance, time, and generalized cost using the following measures:"
  },
  {
    "objectID": "v9x/v902/validation/2-distribute.html#average-trip-lengths",
    "href": "v9x/v902/validation/2-distribute.html#average-trip-lengths",
    "title": "Trip Distribution",
    "section": "Average Trip Lengths",
    "text": "Average Trip Lengths\nThe following figure shows the average trip lengths the modeled and observed time, distance, and generalized cost.\n\n\n\n\n\n\n\nCode\nviewof varSelect = Inputs.select(new Map([['Generalized Cost','GC'], ['Distance', 'Dist'], ['Time', 'Time']]), {value: 'Variable', label: \"Variable\"})\n\nviewof purpSelect  = Inputs.select(new Map([['Internal Trip Purposes', 'MainPurposes'], ['External Trip Purposes', 'Externals']]), {value: 'PurpType', label: \"Purpose Set\"});\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndataLT = transpose(dataStats)\nfiltered_data = dataLT.filter(function(dataL) {\n    return varSelect == dataL.Variable &&\n           purpSelect == dataL.PurpType;\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nimport {GroupedBarChart} from \"@d3/grouped-bar-chart\"\nimport {Legend, Swatches} from \"@d3/color-legend\"\nimport {howto, altplot} from \"@d3/example-components\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlotTable\n\n\n\n\nCode\n//https://observablehq.com/@d3/grouped-bar-chart\nkey = Legend(chart.scales.color, {title: \"Data Source\"})\n\n\n\n\n\n\n\n\n\nCode\nchart = GroupedBarChart(filtered_data, {\n    x: d =&gt; d.Purpose,\n    y: d =&gt; d.AVG_TRIP_LEN,\n    z: d =&gt; d.DataSource,\n    yLabel: \"Average Trip Length\",\n    zDomain: ['Model','Observed'],\n    height: 500,\n    colors: [\"#376092\", \"#77933c\"]\n})\n\n\n\n\n\n\nFigure 1: Average Trip Length between model and observed.\n\n\n\n\n\n\n\nCode\nInputs.table(filtered_data)"
  },
  {
    "objectID": "v9x/v902/validation/2-distribute.html#trip-length-frequencies",
    "href": "v9x/v902/validation/2-distribute.html#trip-length-frequencies",
    "title": "Trip Distribution",
    "section": "Trip Length Frequencies",
    "text": "Trip Length Frequencies\nModeled trip lengths for the base year were compared to the 2012 Household Travel Survey. The following figures shows the modeled and observed time and distance average trip lengths and trip length frequencies.\n\n\n\n\n\n\n\nCode\noptionsTripPurp = \n[\n    ['Home-Based Work'                   , 'HBW'    ],\n    ['Home-Based Shopping'               , 'HBShp'  ],\n    ['Home-Based Other'                  , 'HBOth'  ],\n    ['Home-Based School - Primary'       , 'HBSchPr'],\n    ['Home-Based School - Secondary'     , 'HBSchSc'],\n    ['Non-Home-Based Work'               , 'NHBW'   ],\n    ['Non-Home-Based Non-Work'           , 'NHBNW'  ],\n    ['Light Trucks'                      , 'LT'     ],\n    ['Medium Trucks'                     , 'MD'     ],\n    ['Heavy Trucks'                      , 'HV'     ],\n    ['Internal-to-External'              , 'IX'     ],\n    ['External-to-Internal'              , 'XI'     ]\n]\n\nviewof vTripPurp = Inputs.select(new Map(optionsTripPurp), {value: 'HBW', label: \"Trip Purpose:\"})\n\nviewof vTlfType = Inputs.select(new Map([['Generalized Cost','GC'],['Distance','Dist'],['Time','Time']]), {value: 'Dist', label: \"Variable:\"})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nfreqT = transpose(freq)\n\nfreqT_filtered_Obs = freqT.filter(function(freqData) {\n    return vTripPurp == freqData.TRIPPURP &&\n    vTlfType == freqData.TLFTYPE &&\n    'freqObs' == freqData.freqSource;\n})\n\nfreqT_filtered_Mod = freqT.filter(function(freqData) {\n    return vTripPurp == freqData.TRIPPURP &&\n    vTlfType == freqData.TLFTYPE &&\n    'freqMod' == freqData.freqSource;\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nkey2 = Legend(chart.scales.color, {title: \"Data Source\"})\n\n\n\n\n\n\n\n\n\nCode\nPlot.plot({\n  grid: true,\n  aspectRatio: 0.5,\n  x: {label: 'Distance/Time/Cost', tickFormat: d =&gt; d},\n  y: {label: 'Frequency', tickFormat: f =&gt; `${Math.round(f * 100)}%`},\n  marginRight: 60,\n  marginLeft: 60,\n  style: {\n    fontSize: 15\n  },\n  marginTop: 60,\n  marginBottom: 60,\n  marks: [\n    Plot.line(\n      freqT_filtered_Mod, {x: 'BIN', y: 'freq', stroke: \"#376092\", strokeWidth: 4}),\n    Plot.line(\n      freqT_filtered_Obs, {x: 'BIN', y: 'freq', stroke:  \"#77933c\", strokeWidth: 4}),\n    Plot.frame({strokeOpacity: 0.2}),\n    ]\n});\n\n\n\n\n\n\nFigure 2: Trip Length Frequencies between Model and Observed."
  }
]